<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="develop" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="myHost" elementType="Argument">
              <stringProp name="Argument.name">myHost</stringProp>
              <stringProp name="Argument.value">develop.edge.customs.dev.amiintellect.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">开发</stringProp>
            </elementProp>
            <elementProp name="myPort" elementType="Argument">
              <stringProp name="Argument.name">myPort</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="myCoding" elementType="Argument">
              <stringProp name="Argument.name">myCoding</stringProp>
              <stringProp name="Argument.value">utf-8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamedec" elementType="Argument">
              <stringProp name="Argument.name">appnamedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.desc">货物申报</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypedec" elementType="Argument">
              <stringProp name="Argument.name">declareTypedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamebws" elementType="Argument">
              <stringProp name="Argument.name">appnamebws</stringProp>
              <stringProp name="Argument.value">bws</stringProp>
              <stringProp name="Argument.desc">保税物流</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypebws" elementType="Argument">
              <stringProp name="Argument.name">declareTypebws</stringProp>
              <stringProp name="Argument.value">bws_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameems" elementType="Argument">
              <stringProp name="Argument.name">appnameems</stringProp>
              <stringProp name="Argument.value">ems</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册</stringProp>
            </elementProp>
            <elementProp name="declareTypeems" elementType="Argument">
              <stringProp name="Argument.name">declareTypeems</stringProp>
              <stringProp name="Argument.value">nems_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamesas" elementType="Argument">
              <stringProp name="Argument.name">appnamesas</stringProp>
              <stringProp name="Argument.value">sas</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">海关特殊</stringProp>
            </elementProp>
            <elementProp name="declareTypesas" elementType="Argument">
              <stringProp name="Argument.name">declareTypesas</stringProp>
              <stringProp name="Argument.value">sas_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameeml" elementType="Argument">
              <stringProp name="Argument.name">appnameeml</stringProp>
              <stringProp name="Argument.value">eml</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册手册</stringProp>
            </elementProp>
            <elementProp name="declareTypeeml" elementType="Argument">
              <stringProp name="Argument.name">declareTypeeml</stringProp>
              <stringProp name="Argument.value">npts_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshz" elementType="Argument">
              <stringProp name="Argument.name">companyNameshz</stringProp>
              <stringProp name="Argument.value">hz_001</stringProp>
              <stringProp name="Argument.desc">公司名称</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNamesdec" elementType="Argument">
              <stringProp name="Argument.name">companyNamesdec</stringProp>
              <stringProp name="Argument.value">bgd001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshzs" elementType="Argument">
              <stringProp name="Argument.name">companyNameshzs</stringProp>
              <stringProp name="Argument.value">jc_test001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="operCusRegcode" elementType="Argument">
              <stringProp name="Argument.name">operCusRegcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(10,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">海关编码</stringProp>
            </elementProp>
            <elementProp name="sccdcode" elementType="Argument">
              <stringProp name="Argument.name">sccdcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(18,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">十八位信用代码</stringProp>
            </elementProp>
            <elementProp name="icCardNo" elementType="Argument">
              <stringProp name="Argument.name">icCardNo</stringProp>
              <stringProp name="Argument.value">${__RandomString(13,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="icCardname" elementType="Argument">
              <stringProp name="Argument.name">icCardname</stringProp>
              <stringProp name="Argument.value">${__RandomString(8,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">名称</stringProp>
            </elementProp>
            <elementProp name="idcode" elementType="Argument">
              <stringProp name="Argument.name">idcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(32,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">apis.develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">http://develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">http://develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">responseType</stringProp>
              <stringProp name="Header.value">blob</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 识别文件" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/识别文件.txt</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">filePathBG,filePathHZ</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV账号密码" enabled="true">
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/账号密码.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">login,password</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV进出口" enabled="true">
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/进出口.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">impexpMarkcds,appnames,declareTypes,companyNames</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="登陆事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成 RSA 加密的公钥和私钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数&#xd;
  &quot;nonce&quot;:&quot;959227&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/generateRsaKeyPair</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取默认的 RSA 公钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数获取公钥&#xd;
  &quot;nonce&quot;: &quot;955095&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/getRsaPublicKey</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SHA-1 方式加密" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;text&quot;: &quot;123456955095&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/encryptSha1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeysQ</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置" enabled="false">
            <stringProp name="TestPlan.comments">对密码进行加密</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;
import java.io.ByteArrayOutputStream;
import java.security.Key;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.Signature;
import java.security.interfaces.RSAPrivateKey;
import java.security.interfaces.RSAPublicKey;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
import java.util.HashMap;
import java.util.Map;
import javax.crypto.Cipher;
//获取公钥
String RSA_PUB_KEY=&quot;${getRsaPublicKeys}&quot;;
String KEY_ALGORITHM = &quot;RSA&quot;;
String SIGNATURE_ALGORITHM = &quot;MD5withRSA&quot;;
int MAX_ENCRYPT_BLOCK = 117;
int MAX_DECRYPT_BLOCK = 128;

public static byte[] decryptByPublicKey(byte[] encryptedData, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.DECRYPT_MODE, publicK);
        int inputLen = encryptedData.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段解密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_DECRYPT_BLOCK) {
                cache = cipher.doFinal(encryptedData, offSet, MAX_DECRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(encryptedData, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_DECRYPT_BLOCK;
        }
        byte[] decryptedData = out.toByteArray();
        out.close();
        return decryptedData;
    }

    public static byte[] encryptByPublicKey(byte[] data, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        // 对数据加密
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.ENCRYPT_MODE, publicK);
        int inputLen = data.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段加密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_ENCRYPT_BLOCK) {
                cache = cipher.doFinal(data, offSet, MAX_ENCRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(data, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_ENCRYPT_BLOCK;
        }
        byte[] encryptedData = out.toByteArray();
        out.close();
        return encryptedData;
    }
    //需要加密的用户密码
   //String str = &quot;idNum=633335199606143151&amp;name=蔺四十&amp;phone=17610010005&quot;;
   String str = &quot;${password}&quot;;
String result =&quot;&quot;;
try {
    result = Base64.encodeBase64String(encryptByPublicKey(str.getBytes(), RSA_PUB_KEY));
    System.out.println(result);
} catch (Exception e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
}
    
print(result);
vars.put(&quot;sign&quot;,result);
return result;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${login}&quot;,&#xd;
// &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
  &quot;password&quot;: &quot;${password}&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取登陆个人用户信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//根据token获取当前用户的个人信息&#xd;
  &quot;accessToken&quot;: &quot;${token}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/me</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">基本信息</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//用户id获取员工信息&#xd;
  &quot;id&quot;: &quot;${accountIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">员工所属报关行、组织、权限</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationNames</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织id" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accountId&quot;: &quot;${accountIds}&quot;,&#xd;
  &quot;organizationId&quot;: &quot;$.{organizationIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/accountOrganizationHistory/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIdsnow</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationUnitId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织名称" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/membership/organizationUnit/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织名称" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">projectname</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="客户管理" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增客户" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;companyName&quot;: &quot;${icCardname}&quot;, //用户名称&#xd;
    &quot;socialCode&quot;: &quot;${sccdcode}&quot;,//十八位信用代码&#xd;
    &quot;customsCode&quot;: &quot;${operCusRegcode}&quot;,//海关编号&#xd;
    &quot;declareToCustoms&quot;: &quot;0000&quot;,//常用申报地海关&#xd;
    &quot;checkNumber&quot;: &quot;1232312313&quot;,//国检编号&#xd;
    &quot;clearance&quot;: &quot;0100;0102&quot;,//进出境关别&#xd;
    &quot;record&quot;: &quot;1234123124242&quot;,//备案号&#xd;
    &quot;portEntry&quot;: &quot;110003&quot;,//离入境口岸&#xd;
    &quot;designatedArea&quot;: &quot;货物地点&quot;,//货物地点&#xd;
    &quot;customsType&quot;: &quot;Z&quot;,//常用报关单类型&#xd;
    &quot;authorityMatter&quot;: &quot;115100&quot;,//检验检疫&#xd;
    &quot;portAuthority&quot;: &quot;115200&quot;,//口岸检疫&#xd;
    &quot;licenseAuthority&quot;: &quot;115100&quot;,//领证机关&#xd;
    &quot;destinationAuthority&quot;: &quot;115200&quot;,//目的地检疫&#xd;
    &quot;enterpriseNature&quot;: &quot;1&quot;,//企业性质&#xd;
    &quot;destination&quot;: &quot;110102;110101;110000&quot;,//目的地&#xd;
    &quot;incountryDestination&quot;: &quot;11039;11029;11023&quot;,//境内目的地&#xd;
    &quot;customsBondedArea&quot;: &quot;1231&quot;,//所属海关保税区&#xd;
    &quot;enterpriseProperty&quot;: &quot;1&quot;,//企业属性&#xd;
    &quot;tradeTypeName&quot;: &quot;6&quot;,//申请人种类&#xd;
    &quot;contactPhone&quot;: &quot;6782332&quot;,//固定电话&#xd;
    &quot;other&quot;: &quot;000&quot;,//其它事项&#xd;
    &quot;templateId&quot;: &quot;00000000-0000-0000-0000-000000000006&quot;,//模板&#xd;
    &quot;note&quot;: &quot;测试备注&quot;,//备注&#xd;
    &quot;companyId&quot;: &quot;${operCusRegcode}&quot;,//公司id == 当前公司的海关编号 &#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;//当前登录用户组织id&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrCustomerInfo/saveCustomerInfo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">companyIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增客户报关行权限" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;companyIds&quot;: [&#xd;
    &quot;${operCusRegcode}&quot;  //公司id&#xd;
  ],&#xd;
  &quot;users&quot;: [&#xd;
    {&#xd;
      &quot;userId&quot;: &quot;&quot;,&#xd;
      &quot;orgaName&quot;: &quot;${standardOrganizationNames}&quot;,   //组织名称 ,用报关行名称代替&#xd;
      &quot;userName&quot;: &quot;${standardOrganizationIds}&quot;    //组织id  ，用报关行id代替&#xd;
    },&#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  //组织id&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  //报关行id&#xd;
  &quot;isSaveCus&quot;: &quot;isSaveCus&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrCustomerInfo/saveUserAndCompanyRelation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">companyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改客户的信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;companyName&quot;: &quot;测试用客户111&quot;,//用户名称&#xd;
    &quot;socialCode&quot;: &quot;141341244314134121&quot;,//十八位信用代码&#xd;
    &quot;customsCode&quot;: &quot;1413412441&quot;,//海关编号&#xd;
    &quot;declareToCustoms&quot;: &quot;0101&quot;,//常用申报地海关&#xd;
    &quot;checkNumber&quot;: &quot;1232312311&quot;,//国检编号&#xd;
    &quot;clearance&quot;: &quot;3301;3304&quot;,//进出境关别&#xd;
    &quot;record&quot;: &quot;1234123124241&quot;,//备案号&#xd;
    &quot;portEntry&quot;: &quot;110201&quot;,//离入境口岸&#xd;
    &quot;designatedArea&quot;: &quot;货物地点2134&quot;,//货物地点&#xd;
    &quot;customsType&quot;: &quot;003&quot;,//常用报关单类型&#xd;
    &quot;authorityMatter&quot;: &quot;440000&quot;,//检验检疫&#xd;
    &quot;portAuthority&quot;: &quot;315300&quot;,//口岸检疫&#xd;
    &quot;licenseAuthority&quot;: &quot;210000&quot;,//领证机关&#xd;
    &quot;destinationAuthority&quot;: &quot;120000&quot;,//目的地检疫&#xd;
    &quot;enterpriseNature&quot;: &quot;3&quot;,//企业性质&#xd;
    &quot;destination&quot;: &quot;110102;110100;110000&quot;,//目的地&#xd;
    &quot;incountryDestination&quot;: &quot;11049;11039;11023&quot;,//境内目的地&#xd;
    &quot;customsBondedArea&quot;: &quot;115201&quot;,//所属海关保税区&#xd;
    &quot;enterpriseProperty&quot;: &quot;2&quot;,//企业属性&#xd;
    &quot;tradeTypeName&quot;: &quot;7&quot;,//申请人种类&#xd;
    &quot;contactPhone&quot;: &quot;678233221&quot;,//固定电话&#xd;
    &quot;other&quot;: &quot;019&quot;,//其它事项&#xd;
    &quot;templateId&quot;: &quot;a61f668d-7fc8-afc4-4dc8-4ca6a448b85e&quot;,//模板&#xd;
    &quot;note&quot;: &quot;测试备注1232&quot;,//备注&#xd;
    &quot;id&quot;: &quot;01449&quot;,//订单id&#xd;
    &quot;companyId&quot;: &quot;1413412441&quot;,//公司id == 当前公司的海关编号&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;//当前登录用户组织id&#xd;
  },&#xd;
 &quot;oldData&quot;: {&#xd;
    &quot;check_number&quot;: &quot;1232312313&quot;,//更改前国检编号&#xd;
    &quot;company_id&quot;: &quot;1413412443&quot;,//更改前海关滨海&#xd;
    &quot;company_name&quot;: &quot;测试用客户&quot;,//更改前用户名称&#xd;
    &quot;cusAndPro&quot;: {&#xd;
      &quot;cusCount&quot;: 0,&#xd;
      &quot;proCount&quot;: 0&#xd;
    },&#xd;
    &quot;customs_code&quot;: &quot;1413412443&quot;,//更改前id&#xd;
    &quot;id&quot;: &quot;01452&quot;,//客户id&#xd;
    //&quot;modify_time&quot;: &quot;2020-07-02 15:32:13.0&quot;,//时间&#xd;
    &quot;modify_time&quot;: &quot;${__time(yyyy-MM-dd HH:mm:ss)}.0&quot;,//时间&#xd;
   &#xd;
    &quot;orga_name&quot;: &quot;0215测试001&quot;,//&#xd;
    &quot;social_code&quot;: &quot;141341244314134124&quot;//18位信用代码&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrCustomerInfo/updateCustomerInfo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="635285210">修改成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器companyIdtwo" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">companyIdtwo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.companyId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提前客户id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">Idone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取当前报关行组织" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;treeViewName&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;treeViewRootTreeNodeId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
  &quot;commandFormat&quot;: &quot;D&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/membership/organizationUnit/getTreeView</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器第一个组织id：childNodesididone" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">childNodesidone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.childNodes[0].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器第一个组织id：childNodesnameone" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">childNodesnameone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.childNodes[0].name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改客户的权限" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;companyIds&quot;: [&#xd;
    &quot;${companyIdtwo}&quot;  //公司id&#xd;
  ],&#xd;
  &quot;users&quot;: [&#xd;
   {&#xd;
      &quot;userId&quot;: &quot;&quot;,&#xd;
      &quot;orgaName&quot;: &quot;${childNodesnameone}&quot;, //组织名称&#xd;
      &quot;userName&quot;: &quot;${childNodesidone}&quot;  //组织id&#xd;
    },&#xd;
 &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  //当前登录组织id&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  //报关行id&#xd;
  &quot;isSaveCus&quot;: &quot;isSaveCus&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrCustomerInfo/saveUserAndCompanyRelation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">companyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制客户" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;companyIds&quot;: [&#xd;
    &quot;${companyIdtwo}&quot;  //公司id&#xd;
  ],&#xd;
  &quot;users&quot;: [&#xd;
   {&#xd;
      &quot;userId&quot;: &quot;&quot;,&#xd;
      &quot;orgaName&quot;: &quot;${childNodesnameone}&quot;, //组织名称&#xd;
      &quot;userName&quot;: &quot;${childNodesidone}&quot;  //组织id&#xd;
    },&#xd;
 &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  //当前登录组织id&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  //报关行id&#xd;
  &quot;isSaveCus&quot;: &quot;isSaveCus&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrCustomerInfo/saveUserAndCompanyRelation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">companyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="识别事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="货物申报上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,  //&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;, //上传用户&#xd;
  &quot;appName&quot;: &quot;${appnamedec}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypedec}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;  //报关行id&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgiddec</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathdec</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathBG}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathBG}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">multipart/form-data</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgiddec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamedec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNamesdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathBG}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathBG}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">multipart/form-data</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgiddec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">way_bill</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamedec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNamesdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnamedec}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypedec}&quot;, //&#xd;
    &quot;inOutType&quot;: &quot;${impexpMarkcds}&quot;,  //进出口&#xd;
    &quot;entrustCompanyId&quot;: &quot;5c859d57-443c-44ad-928e-48c7ae802c0f&quot;, //委托单位&#xd;
    &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgiddec}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathdec}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
    &quot;source&quot;: &quot;1&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
    {&#xd;
    	&quot;name&quot;:&quot;运单文件&quot;,&#xd;
    	&quot;fileStatus&quot;:&quot;0&quot;&#xd;
    	}&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="流水号暂存表头" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;06|undefined&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;123&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: [&#xd;
      &quot;国际赛事&quot;,&#xd;
      &quot;特殊进出军工物资&quot;,&#xd;
      &quot;国际援助物资&quot;,&#xd;
      &quot;国际会议&quot;&#xd;
    ],&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;${pkgiddec}&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;tempSaveType&quot;: &quot;1&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;包/袋&quot;,&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;纸制或纤维板制盒/箱&quot;,&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//当前组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="海关特殊区域上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypesas}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgidsas</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathsas</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgidsas}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathsas}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamesas}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;invtMakeManage&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgidsas}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathsas}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;importId&quot;: &quot;&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;运单文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="区外加工账册上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypeems}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgidems</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathems</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgidems}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathems}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnameems}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;invtMakeManage&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypeems}&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgidems}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathems}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;importId&quot;: &quot;&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="区外加工手册上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">	 &#xd;
{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypeeml}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgideml</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">patheml</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgideml}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${patheml}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnameeml}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;invtMakeManage&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypeeml}&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgideml}&quot;,&#xd;
    &quot;path&quot;: &quot;${patheml}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;importId&quot;: &quot;&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="保税物流上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypebws}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgidbws</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathbws</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgidbws}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathbws}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamebws}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;invtMakeManage&quot;: {&#xd;
      &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
      &quot;declareType&quot;: &quot;${declareTypebws}&quot;,&#xd;
      &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
      &quot;id&quot;: &quot;${pkgidbws}&quot;,&#xd;
      &quot;path&quot;: &quot;${pathbws}&quot;,&#xd;
      &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
      &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
      &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
      &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
      &quot;importId&quot;: &quot;&quot;,&#xd;
      &quot;agent&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;provider&quot;: &quot;&quot;,&#xd;
    &quot;nameFileList&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;发票文件&quot;,&#xd;
        &quot;fileStatus&quot;: &quot;0&quot;&#xd;
      }&#xd;
    ]&#xd;
 }</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="手动新增事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="货物申报手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;2|单价&quot;,&#xd;
    &quot;insurance&quot;: &quot;1|率&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;222222222222&quot;,&#xd;
    &quot;contractNo&quot;: &quot;333333333333333&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;CU0293&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;billNo&quot;: &quot;4444444444&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;HKD|港币&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;0.3&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;1&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;CNY|人民币&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;04|undefined&quot;,  //&#xd;
    &quot;grossWeight&quot;: &quot;12&quot;,&#xd;
    &quot;netWeight&quot;: &quot;12&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;6666666&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;1|通关单超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;specialFlag&quot;: [&#xd;
      &quot;国际赛事&quot;,&#xd;
      &quot;特殊进出军工物资&quot;,&#xd;
      &quot;国际援助物资&quot;&#xd;
    ],&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20200202&quot;,&#xd;
    &quot;BL&quot;: &quot;bl&quot;,&#xd;
    &quot;originalBoxTransportation&quot;: &quot;原箱运输&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,//来源（1：识别；2：手动新增；3：复制；4：）&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,  //进出口&#xd;
  &quot;tempSaveType&quot;: &quot;1&quot;, //暂存（1：表头；2：表体）&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,//上传客户名称&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;球状罐类&quot;,&#xd;
      &quot;code&quot;: &quot;04&quot;,&#xd;
      &quot;wId&quot;: &quot;3&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;包/袋&quot;,&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,  //组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//当前组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bizidhead</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;${bizidhead}&quot;,   //流水号&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,   //进出口&#xd;
  &quot;tempSaveType&quot;: &quot;2&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,  //上传公司名称&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;refresh_type&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarCargoSize&quot;: &quot;&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;basicId&quot;: &quot;${bizidhead}&quot;,&#xd;
      &quot;reportElement&quot;: {&#xd;
        &#xd;
      },&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;packages&quot;: &quot;&quot;,&#xd;
      &quot;grossWeight&quot;: &quot;&quot;,&#xd;
      &quot;netWeight&quot;: &quot;&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidhead}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 1,   //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidhead}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表体生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;&quot;,   //流水号&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,   //进出口&#xd;
  &quot;tempSaveType&quot;: &quot;2&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,  //上传公司名称&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;refresh_type&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarCargoSize&quot;: &quot;&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;basicId&quot;: &quot;BG2020050700005&quot;,&#xd;
      &quot;reportElement&quot;: {&#xd;
        &#xd;
      },&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;packages&quot;: &quot;&quot;,&#xd;
      &quot;grossWeight&quot;: &quot;&quot;,&#xd;
      &quot;netWeight&quot;: &quot;&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交表体生成的流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bizidlist</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表体流水号暂存表头" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;06|undefined&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;123&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: [&#xd;
      &quot;国际赛事&quot;,&#xd;
      &quot;特殊进出军工物资&quot;,&#xd;
      &quot;国际援助物资&quot;,&#xd;
      &quot;国际会议&quot;&#xd;
    ],&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;${bizidlist}&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;tempSaveType&quot;: &quot;1&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;包/袋&quot;,&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;纸制或纤维板制盒/箱&quot;,&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//当前组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bizidtwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 1,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="驳回" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 3,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="再次提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 1,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${bizidtwo}&quot;, //流水号&#xd;
  &quot;source&quot;: &quot;2&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/selectOne</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 2,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="海关特殊区域手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">headsasid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listsaszero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号新增表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号新增表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listsaszero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listsaszero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypesasone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listsasone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypesasone},&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listsasone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypesastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypesastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdsastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdsastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 3,&#xd;
  &quot;values&quot;: ${invtHeadTypesastwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdsastwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;2341244&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdsastwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypesastwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,  //流水号&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,  //进出口类型&#xd;
  &quot;decType&quot;: &quot;1&quot;,   //&#xd;
  &quot;dclcusTypecd&quot;: &quot;1&quot;,  //&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;  //模块&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/sas/sasInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="加工账册手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">heademsid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listemszero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listemszero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemszero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listemsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypeemsone},&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemsone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="invtlisttypeemstwo--表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="invtHeadTypeemstwo--表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypeemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="impexpMarkcdemstwo--进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="mtpckEndprdMarkcdemstwo---成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;values&quot;: ${invtHeadTypeemstwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdemstwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;412341243414&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdemstwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypeemstwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,  //流水号&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,  //进出口类型&#xd;
  &quot;decType&quot;: &quot;1&quot;,   //&#xd;
  &quot;dclcusTypecd&quot;: &quot;1&quot;,  //&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;  //模块&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/ems/emsInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="加工手册手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
 &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;124312444443&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">heademlid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listemlzero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listemlzero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemlzero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemlone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listemlone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypeemlone},&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemlone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="表体-invtlisttypeemltwo" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="表头--invtHeadTypeemltwo" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypeemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="进出口--impexpMarkcdemltwo" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="成品、料件标志--mtpckEndprdMarkcdemltwo" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 3,&#xd;
  &quot;values&quot;: ${invtHeadTypeemltwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdemltwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;124312444443&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdemltwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypeemltwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;impexpMarkcd&quot;: &quot;E&quot;,&#xd;
  &quot;values&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;124312444443&quot;,&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;,&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,&#xd;
    &quot;decType&quot;: &quot;3&quot;,&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;id&quot;: &quot;SCHZ2020051300012&quot;&#xd;
  },&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;appName&quot;: &quot;eml&quot;,&#xd;
  &quot;id&quot;: &quot;SCHZ2020051300012&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/eml/emlInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="保税物流手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">headbwsid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号更改表头" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;,&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;bws2020050600128&quot;,&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,&#xd;
    &quot;decType&quot;: &quot;1&quot;,&#xd;
    &quot;rltInvtNo&quot;: &quot;333333&quot;,&#xd;
    &quot;rltPutrecNo&quot;: &quot;3333333&quot;,&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;45654671231&quot;,&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;rmk&quot;: &quot;撒地方备注&quot;,&#xd;
    &quot;id&quot;: &quot;${headbwsid}&quot;&#xd;
  },&#xd;
&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">headbwsid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listbwszero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listbwszero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listbwszero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypebwsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listbwsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypebwsone},&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listbwsone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypebwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypebwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdbwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdbwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 2,  //1.识别；2.手动新增&#xd;
  &quot;values&quot;: ${invtHeadTypebwstwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdbwstwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;2341244&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdbwstwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypebwstwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,  //1：；2：&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;  //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="驳回" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/rejectInvt</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypebwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypebwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdbwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdbwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,  //流水号&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,  //进出口类型&#xd;
  &quot;decType&quot;: &quot;1&quot;,   //&#xd;
  &quot;dclcusTypecd&quot;: &quot;1&quot;,  //&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;  //模块&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/sas/sasInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="海关特殊核放单" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="保税物流核放单" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新建报关行事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建报关行" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;${icCardname}&quot;,//名称&#xd;
  &quot;operCusRegcode&quot;: &quot;${operCusRegcode}&quot;,//海关编码&#xd;
  &quot;sccd&quot;: &quot;${sccdcode}&quot;,//企业十八位信用代码&#xd;
  &quot;hdModel&quot;: 0,&#xd;
  &quot;type&quot;: 3,//新建公司类型&#xd;
  &quot;fileData&quot;: &quot;&quot;,&#xd;
  &quot;adminName&quot;: &quot;${icCardname}&quot;,//账号&#xd;
  &quot;clientNo&quot;: &quot;${operCusRegcode}&quot;,//客户端编号&#xd;
  &quot;icCardNo&quot;: &quot;${icCardNo}&quot;,//操作卡号&#xd;
  &quot;sendAddress&quot;: &quot;5671&quot;,&#xd;
  &quot;sendVirhost&quot;: &quot;/&quot;,&#xd;
  &quot;exchange&quot;: &quot;&quot;,&#xd;
  &quot;sendQuene&quot;: &quot;&quot;,&#xd;
  &quot;recvAddress&quot;: &quot;5671&quot;,&#xd;
  &quot;recvVirhost&quot;: &quot;/&quot;,&#xd;
  &quot;recvQuene&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysCustomsBrokerCore/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询报关行名称--${icCardname}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;paging&quot;: {&#xd;
    &quot;total&quot;: &quot;&quot;,&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysCustomsBrokerCore/queryAll</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bghname</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[0].name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${icCardname}&quot;,&#xd;
// &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
  &quot;password&quot;: &quot;123456&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshTokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//用户id获取员工信息&#xd;
  &quot;id&quot;: &quot;${accountIdone}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">员工所属报关行、组织、权限</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationNameone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建角色" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;&quot;,&#xd;
  &quot;status&quot;: &quot;1&quot;,&#xd;
  &quot;memberText&quot;: &quot;&quot;,&#xd;
  &quot;type&quot;: &quot;3&quot;,&#xd;
  &quot;organizationUnitId&quot;: &quot;${standardOrganizationIdone}&quot;,//&#xd;
  &quot;parentId&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,&#xd;
  &quot;name&quot;: &quot;测试001&quot;,&#xd;
  &quot;remark&quot;: &quot;测试角色&quot;,&#xd;
  &quot;permission&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;系统管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;字典表管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000101&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000102&quot;,&#xd;
          &quot;name&quot;: &quot;新增字典信息&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000103&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000104&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;字典表管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;商品预归类&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000003&quot;,&#xd;
          &quot;name&quot;: &quot;所有归类文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000004&quot;,&#xd;
          &quot;name&quot;: &quot;归类失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000005&quot;,&#xd;
          &quot;name&quot;: &quot;归类中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000006&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000007&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000008&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000010&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000011&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000012&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000013&quot;,&#xd;
          &quot;name&quot;: &quot;查看&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;商品智能预归类&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010200000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010100000002&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;申报要素库&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010200000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;团队管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001001&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001002&quot;,&#xd;
          &quot;name&quot;: &quot;新建企业&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001003&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001004&quot;,&#xd;
          &quot;name&quot;: &quot;重置密码&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;企业管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-020000002001&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-020000002004&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-020000002005&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;组织架构&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000003000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;角色权限&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;公众号管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;消息管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;推文管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;粉丝管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;岗位管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;海关特殊监管区域&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000012&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000013&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000014&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000017&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册报核&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000007&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000018&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;物流账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;一线一体化进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;二线进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;非报关进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;卡口登记货物&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;空车核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;先入区后报关&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000005&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000006&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000007&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;车辆管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000001&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000002&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000004&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000005&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000006&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000007&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000008&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-080000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税物流管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000018&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;物流账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;一线一体化进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000007&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000008&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000009&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;二线进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;非报关进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000007&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000008&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000009&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;卡口登记货物&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;空车核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000007&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000008&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000009&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;先入区后报关&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000005&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000006&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000007&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;车辆管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000001&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000002&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000004&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000005&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000006&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000007&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000008&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-080000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;物流账册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;区外加工贸易&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工账册管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000003&quot;,&#xd;
          &quot;name&quot;: &quot;已提交企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000004&quot;,&#xd;
          &quot;name&quot;: &quot;已申报企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000005&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000006&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000008&quot;,&#xd;
          &quot;name&quot;: &quot;新建企业&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000009&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000010&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000011&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000012&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000013&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000015&quot;,&#xd;
          &quot;name&quot;: &quot;已回执企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;企业资质申请&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000009&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000010&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000011&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000012&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000013&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000014&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000015&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000016&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册报核&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010700000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-020600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易手册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工手册管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建手册信息(列表)&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000011&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000012&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000013&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000014&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000017&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易手册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易手册报核&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;客户管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有客户&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000002&quot;,&#xd;
          &quot;name&quot;: &quot;OCR新增待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000003&quot;,&#xd;
          &quot;name&quot;: &quot;全部已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000004&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;高级搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;新增客户信息&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;修改信息&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;分配组织&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;导入客户&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;主页&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;企业基础信息&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;应用平台管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;报关行管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-050000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;字典管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000012&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000013&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000014&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000015&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物申报制单(进口)&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000016&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000018&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000019&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000020&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000021&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000022&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000023&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000024&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000025&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000026&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物申报制单(出口)&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000002&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000003&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000004&quot;,&#xd;
          &quot;name&quot;: &quot;查看&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000005&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000006&quot;,&#xd;
          &quot;name&quot;: &quot;下载&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000007&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000014&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000015&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物报关单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000002&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000003&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000005&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000006&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;减免税制单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000002&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000003&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000005&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;减免税申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0011-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;经营分析&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0011-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;经营分析&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0011-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysRole/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建组织" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;status&quot;: 1,&#xd;
  &quot;type&quot;: &quot;1&quot;,&#xd;
  &quot;parentId&quot;: &quot;${standardOrganizationIdone}&quot;,&#xd;
  &quot;name&quot;: &quot;${icCardNo}&quot;,&#xd;
  &quot;remark&quot;: &quot;组织备注&quot;,&#xd;
  &quot;originalName&quot;: &quot;${idcode}&quot;,&#xd;
  &quot;globalName&quot;: &quot;${idcode}&quot;,&#xd;
  &quot;originalGlobalName&quot;: &quot;${idcode}&quot;,&#xd;
  &quot;standardOrganizationUnitId&quot;: &quot;${standardOrganizationIdone}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/organizationUnit/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询角色" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;paging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10&#xd;
  },&#xd;
  &quot;query&quot;: {&#xd;
    &quot;where&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;organization_unit_id&quot;,&#xd;
        &quot;value&quot;: &quot;${standardOrganizationIdone}&quot;&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/membership/role/query</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">authorizationObjectId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.[0].authorizationObjectId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建员工" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;&quot;,&#xd;
  &quot;status&quot;: &quot;1&quot;,&#xd;
  &quot;organizationId&quot;: &quot;${standardOrganizationIdone}&quot;,&#xd;
  &quot;standardOrganizationId&quot;: &quot;${standardOrganizationIdone}&quot;,&#xd;
  &quot;standardOrganizationName&quot;: &quot;${standardOrganizationNameone}&quot;,//最高组织名称&#xd;
  &quot;loginName&quot;: &quot;${operCusRegcode}&quot;,//账号&#xd;
  &quot;password&quot;: &quot;123456&quot;,//密码&#xd;
  &quot;organizationName&quot;: &quot;${standardOrganizationNameone}&quot;,//&#xd;
  &quot;approve&quot;: 1,&#xd;
  &quot;roleId&quot;: [&#xd;
    &quot;${authorizationObjectId}&quot;&#xd;
  ],&#xd;
  &quot;name&quot;: &quot;发电房&quot;,//姓名&#xd;
  &quot;link&quot;: &quot;1345541&quot;//电话&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1906943542">新增员工成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${operCusRegcode} --rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${operCusRegcode}&quot;,&#xd;
// &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
  &quot;password&quot;: &quot;123456&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshTokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="退出事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa退出" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//通过当前用户的token退出&#xd;
	&quot;accessToken&quot;:&quot;${token}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/logout</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="769363145">成功退出</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">5</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="myHost" elementType="Argument">
              <stringProp name="Argument.name">myHost</stringProp>
              <stringProp name="Argument.value">develop.edge.customs.dev.amiintellect.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">开发</stringProp>
            </elementProp>
            <elementProp name="myPort" elementType="Argument">
              <stringProp name="Argument.name">myPort</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="myCoding" elementType="Argument">
              <stringProp name="Argument.name">myCoding</stringProp>
              <stringProp name="Argument.value">utf-8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamedec" elementType="Argument">
              <stringProp name="Argument.name">appnamedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.desc">货物申报</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypedec" elementType="Argument">
              <stringProp name="Argument.name">declareTypedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamebws" elementType="Argument">
              <stringProp name="Argument.name">appnamebws</stringProp>
              <stringProp name="Argument.value">bws</stringProp>
              <stringProp name="Argument.desc">保税物流</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypebws" elementType="Argument">
              <stringProp name="Argument.name">declareTypebws</stringProp>
              <stringProp name="Argument.value">bws_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameems" elementType="Argument">
              <stringProp name="Argument.name">appnameems</stringProp>
              <stringProp name="Argument.value">ems</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册</stringProp>
            </elementProp>
            <elementProp name="declareTypeems" elementType="Argument">
              <stringProp name="Argument.name">declareTypeems</stringProp>
              <stringProp name="Argument.value">nems_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamesas" elementType="Argument">
              <stringProp name="Argument.name">appnamesas</stringProp>
              <stringProp name="Argument.value">sas</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">海关特殊</stringProp>
            </elementProp>
            <elementProp name="declareTypesas" elementType="Argument">
              <stringProp name="Argument.name">declareTypesas</stringProp>
              <stringProp name="Argument.value">sas_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameeml" elementType="Argument">
              <stringProp name="Argument.name">appnameeml</stringProp>
              <stringProp name="Argument.value">eml</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册手册</stringProp>
            </elementProp>
            <elementProp name="declareTypeeml" elementType="Argument">
              <stringProp name="Argument.name">declareTypeeml</stringProp>
              <stringProp name="Argument.value">npts_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshz" elementType="Argument">
              <stringProp name="Argument.name">companyNameshz</stringProp>
              <stringProp name="Argument.value">hz_001</stringProp>
              <stringProp name="Argument.desc">公司名称</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNamesdec" elementType="Argument">
              <stringProp name="Argument.name">companyNamesdec</stringProp>
              <stringProp name="Argument.value">jc_test001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">apis.develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">http://develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">http://develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 识别文件" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="filename">D:/jmeter/rpajmx/开发环境文件/识别文件货物申报.txt</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">fileName,filePath</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV账号密码" enabled="true">
          <stringProp name="filename">D:/jmeter/rpajmx/开发环境文件/账号密码.txt</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="variableNames">login,password</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV进出口" enabled="true">
          <stringProp name="filename">D:/jmeter/rpajmx/开发环境文件/进出口.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">impexpMarkcds,appnames,declareTypes,companyNames</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa登陆" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${login}&quot;,&#xd;
  &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
//  &quot;password&quot;: &quot;{RSA}${sign}&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
          <stringProp name="HTTPSampler.port">${myPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
          <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="941359866">登陆成功</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">accountIds</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">refreshToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工信息" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	//用户id获取员工信息&#xd;
  &quot;id&quot;: &quot;${accountIds}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
          <stringProp name="HTTPSampler.port">${myPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
          <stringProp name="HTTPSampler.path">api/customs/core/sysUser/findOne</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">员工所属报关行、组织、权限</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-115307114">查询成功。</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationIds</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行name" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationNames</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器组织id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">organizationIds</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;accountId&quot;: &quot;${accountIds}&quot;,&#xd;
  &quot;organizationId&quot;: &quot;$.{organizationIds}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
          <stringProp name="HTTPSampler.port">${myPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
          <stringProp name="HTTPSampler.path">api/customs/core/accountOrganizationHistory/findOne</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-115307114">查询成功。</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">organizationIdsnow</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationUnitId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货物申报表头保存（新增）" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
 &#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;1|监管仓库&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1501|绿园海关&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;1105919023|中国国际石油化工联合有限责任公司&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;中国国际石油化工联合有限责任公司&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;2|单价&quot;,&#xd;
    &quot;insurance&quot;: &quot;1|率&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;111&quot;,&#xd;
    &quot;note&quot;: &quot;备注000&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;1501|绿园海关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;006|出口二次转关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;111111111&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;bce97d1e-dc9a-41da-87ab-bd3ba9c1502b&quot;,&#xd;
    &quot;cusCode&quot;: &quot;22222222&quot;,&#xd;
    &quot;eori&quot;: &quot;333333333333&quot;,&#xd;
    &quot;contractNo&quot;: &quot;444444444&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;911100001000134314&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;AAAA&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;1111111111|中新（重庆）多式联运物流发展有限公司两江新区分公司&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;中新（重庆）多式联运物流发展有限公司两江新区分公司&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;111111111111111111&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1111111&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具111&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;航次号222&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;5555555&quot;,&#xd;
    &quot;billNo&quot;: &quot;6666666666&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;AFG|阿富汗&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;992202|珲春出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;HKD|港币&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;0.3&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;1&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;CNY|人民币&quot;,&#xd;
    &quot;wrapType&quot;: &quot;22|纸制或纤维板制盒/箱&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;333&quot;,&#xd;
    &quot;netWeight&quot;: &quot;22&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;23444&quot;,&#xd;
    &quot;entryPort&quot;: &quot;110301|北京朝阳口岸&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991206|中国（天津）自由贸易试验区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;1&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;125700|宁河海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;125700|宁河海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;125700|宁河海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;11233&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;1|通关单超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;bls&quot;,&#xd;
    &quot;specialFlag&quot;: [&#xd;
      &quot;国际赛事&quot;,&#xd;
      &quot;特殊进出军工物资&quot;,&#xd;
      &quot;国际援助物资&quot;&#xd;
    ],&#xd;
    &quot;originalBoxTransportation&quot;: &quot;运输&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;BG2020041700220&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;tempSaveType&quot;: &quot;1&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;bce97d1e-dc9a-41da-87ab-bd3ba9c1502b&quot;,&#xd;
  &quot;companyName&quot;: &quot;中国国际石油化工联合有限责任公司&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;111111111&quot;,&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;projectId&quot;: &quot;3a7c31e6-89cf-45eb-b299-32864ef032f6&quot;,&#xd;
  &quot;accountOrginzationId&quot;: &quot;3a7c31e6-89cf-45eb-b299-32864ef032f6&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;7823107e-7d90-4200-814a-a29d63ed9cbf&quot;,&#xd;
  &quot;customsBroker&quot;: &quot;0215测试001&quot;,&#xd;
  &quot;accountOrginzationName&quot;: &quot;测试1&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
          <stringProp name="HTTPSampler.port">${myPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
          <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
              <stringProp name="2117">BG</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取流水号" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bizIds</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizld</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货物申报表体保存（新增）" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;tempSaveType&quot;: &quot;2&quot;,&#xd;
  &quot;companyName&quot;: &quot;&quot;,&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;commodityCode&quot;: &quot;23414234&quot;,&#xd;
      &quot;description&quot;: &quot;1234&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;recordsNumber&quot;: &quot;1234&quot;,&#xd;
      &quot;refresh_type&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;model&quot;: &quot;1234&quot;,&#xd;
      &quot;quantity&quot;: &quot;111&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;111|平方英尺&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;123&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;13653&quot;,&#xd;
      &quot;curr&quot;: &quot;CNY|人民币&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;111&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;111|平方英尺&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;1324&quot;,&#xd;
      &quot;itemNo&quot;: &quot;1234&quot;,&#xd;
      &quot;regulatoryConditions&quot;: &quot;1&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;111&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;111|平方英尺&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;originArea&quot;: &quot;&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11029|西城区&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110104|北京市宣武区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;1|照章征税&quot;,&#xd;
      &quot;inspQuarCargoSize&quot;: &quot;&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;16|实验&quot;,&#xd;
      &quot;productNo&quot;: 1,&#xd;
      &quot;originCountryCode&quot;: &quot;&quot;,&#xd;
      &quot;reportElement&quot;: {&#xd;
        &#xd;
      },&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;productPermitList&quot;: [&#xd;
        {&#xd;
          &quot;basicId&quot;: &quot;&quot;,&#xd;
          &quot;productSerialNumber&quot;: 1,&#xd;
          &quot;hsCode&quot;: &quot;23414234&quot;,&#xd;
          &quot;productName&quot;: &quot;1234&quot;,&#xd;
          &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
          &quot;serialNumber&quot;: 1,&#xd;
          &quot;permitType&quot;: &quot;107|植物检疫证书&quot;,&#xd;
          &quot;permitTypeName&quot;: &quot;植物检疫证书&quot;,&#xd;
          &quot;permitTypeCode&quot;: &quot;107&quot;,&#xd;
          &quot;permitNo&quot;: &quot;1123&quot;,&#xd;
          &quot;verificationCargoNo&quot;: &quot;&quot;,&#xd;
          &quot;verificationCount&quot;: &quot;&quot;,&#xd;
          &quot;verificationCountUnit&quot;: &quot;&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;packages&quot;: &quot;&quot;,&#xd;
      &quot;grossWeight&quot;: &quot;&quot;,&#xd;
      &quot;netWeight&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;3a7c31e6-89cf-45eb-b299-32864ef032f6&quot;,&#xd;
  &quot;accountOrginzationId&quot;: &quot;3a7c31e6-89cf-45eb-b299-32864ef032f6&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;7823107e-7d90-4200-814a-a29d63ed9cbf&quot;,&#xd;
  &quot;customsBroker&quot;: &quot;0215测试001&quot;,&#xd;
  &quot;accountOrginzationName&quot;: &quot;测试1&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
          <stringProp name="HTTPSampler.port">${myPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
          <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
              <stringProp name="2117">BG</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取流水号" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bizIds</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizld</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="海关特殊表头保存（新增）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;5c859d57-443c-44ad-928e-48c7ae802c0f&quot;,&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;1234144444&quot;,&#xd;
    &quot;bizopEtpsno&quot;: &quot;1101919028&quot;,&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;91110000101255707D&quot;,&#xd;
    &quot;bizopEtpsNm&quot;: &quot;中国科学器材公司&quot;,&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;1105919023&quot;,&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;911100001000134314&quot;,&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;中国国际石油化工联合有限责任公司&quot;,&#xd;
    &quot;dclEtpsno&quot;: &quot;4143443343&quot;,&#xd;
    &quot;dclEtpsSccd&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;dclEtpsNm&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;inputTime&quot;: &quot;20200419&quot;,&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,&#xd;
    &quot;impexpPortcd&quot;: &quot;1511&quot;,&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;阿富汗&quot;,&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,&#xd;
    &quot;decType&quot;: &quot;6&quot;,&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4101630001&quot;,&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;9141010055830728X4&quot;,&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;鸿富锦精密电子（郑州）有限公司&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1101919028&quot;,&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;91110000101255707D&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;中国科学器材公司&quot;,&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;4143443343&quot;,&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;rmk&quot;: &quot;备注314414&quot;&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;customsBroker&quot;: &quot;0215测试001&quot;,&#xd;
  &quot;projectId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;sas&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
          <stringProp name="HTTPSampler.port">${myPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
          <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="632348394">保存成功</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取流水号" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bizIds</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="高斯随机定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
            <stringProp name="RandomTimer.range">100.0</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="同步定时器" enabled="true">
          <intProp name="groupSize">0</intProp>
          <longProp name="timeoutInMs">0</longProp>
        </SyncTimer>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新增多条表体" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="控制表体次数" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">15</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="海关特殊表体保存（新增）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;121&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;14444&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;2314&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;12341424&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1243141&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1123414344&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;12341414&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot;1|1|1|！23414&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;美元&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;101&quot;,&#xd;
    &quot;dclQty&quot;: &quot;1&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;123&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;23141.0000&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;23141&quot;,&#xd;
    &quot;natcd&quot;: &quot;阿富汗&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;阿富汗&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;123414&quot;,&#xd;
    &quot;rmk&quot;: &quot;1234144&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;sas&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${bizIds}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="智慧报关开发本地" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="myHost" elementType="Argument">
              <stringProp name="Argument.name">myHost</stringProp>
              <stringProp name="Argument.value">192.168.28.93</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">开发</stringProp>
            </elementProp>
            <elementProp name="myPort" elementType="Argument">
              <stringProp name="Argument.name">myPort</stringProp>
              <stringProp name="Argument.value">18106</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="myCoding" elementType="Argument">
              <stringProp name="Argument.name">myCoding</stringProp>
              <stringProp name="Argument.value">utf-8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamedec" elementType="Argument">
              <stringProp name="Argument.name">appnamedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.desc">货物申报</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypedec" elementType="Argument">
              <stringProp name="Argument.name">declareTypedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamebws" elementType="Argument">
              <stringProp name="Argument.name">appnamebws</stringProp>
              <stringProp name="Argument.value">bws</stringProp>
              <stringProp name="Argument.desc">保税物流</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypebws" elementType="Argument">
              <stringProp name="Argument.name">declareTypebws</stringProp>
              <stringProp name="Argument.value">bws_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameems" elementType="Argument">
              <stringProp name="Argument.name">appnameems</stringProp>
              <stringProp name="Argument.value">ems</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册</stringProp>
            </elementProp>
            <elementProp name="declareTypeems" elementType="Argument">
              <stringProp name="Argument.name">declareTypeems</stringProp>
              <stringProp name="Argument.value">nems_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamesas" elementType="Argument">
              <stringProp name="Argument.name">appnamesas</stringProp>
              <stringProp name="Argument.value">sas</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">海关特殊</stringProp>
            </elementProp>
            <elementProp name="declareTypesas" elementType="Argument">
              <stringProp name="Argument.name">declareTypesas</stringProp>
              <stringProp name="Argument.value">sas_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameeml" elementType="Argument">
              <stringProp name="Argument.name">appnameeml</stringProp>
              <stringProp name="Argument.value">eml</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册手册</stringProp>
            </elementProp>
            <elementProp name="declareTypeeml" elementType="Argument">
              <stringProp name="Argument.name">declareTypeeml</stringProp>
              <stringProp name="Argument.value">npts_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshz" elementType="Argument">
              <stringProp name="Argument.name">companyNameshz</stringProp>
              <stringProp name="Argument.value">hz_001</stringProp>
              <stringProp name="Argument.desc">公司名称</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNamesdec" elementType="Argument">
              <stringProp name="Argument.name">companyNamesdec</stringProp>
              <stringProp name="Argument.value">jc_test001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">apis.develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">http://develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">http://develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 识别文件" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="filename">D:/jmeter/rpajmx/开发环境文件/识别文件货物申报.txt</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">fileName,filePath</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV账号密码" enabled="true">
          <stringProp name="filename">D:/jmeter/rpajmx/开发环境文件/账号密码.txt</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="variableNames">login,password</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV进出口" enabled="true">
          <stringProp name="filename">D:/jmeter/rpajmx/开发环境文件/进出口.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">impexpMarkcds,appnames,declareTypes,companyNames</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="登陆事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成 RSA 加密的公钥和私钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数&#xd;
  &quot;nonce&quot;:&quot;959227&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/generateRsaKeyPair</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取默认的 RSA 公钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数获取公钥&#xd;
  &quot;nonce&quot;: &quot;955095&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/getRsaPublicKey</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SHA-1 方式加密" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;text&quot;: &quot;123456955095&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/encryptSha1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeysQ</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置" enabled="false">
            <stringProp name="TestPlan.comments">对密码进行加密</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;
import java.io.ByteArrayOutputStream;
import java.security.Key;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.Signature;
import java.security.interfaces.RSAPrivateKey;
import java.security.interfaces.RSAPublicKey;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
import java.util.HashMap;
import java.util.Map;
import javax.crypto.Cipher;
//获取公钥
String RSA_PUB_KEY=&quot;${getRsaPublicKeys}&quot;;
String KEY_ALGORITHM = &quot;RSA&quot;;
String SIGNATURE_ALGORITHM = &quot;MD5withRSA&quot;;
int MAX_ENCRYPT_BLOCK = 117;
int MAX_DECRYPT_BLOCK = 128;

public static byte[] decryptByPublicKey(byte[] encryptedData, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.DECRYPT_MODE, publicK);
        int inputLen = encryptedData.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段解密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_DECRYPT_BLOCK) {
                cache = cipher.doFinal(encryptedData, offSet, MAX_DECRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(encryptedData, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_DECRYPT_BLOCK;
        }
        byte[] decryptedData = out.toByteArray();
        out.close();
        return decryptedData;
    }

    public static byte[] encryptByPublicKey(byte[] data, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        // 对数据加密
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.ENCRYPT_MODE, publicK);
        int inputLen = data.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段加密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_ENCRYPT_BLOCK) {
                cache = cipher.doFinal(data, offSet, MAX_ENCRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(data, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_ENCRYPT_BLOCK;
        }
        byte[] encryptedData = out.toByteArray();
        out.close();
        return encryptedData;
    }
    //需要加密的用户密码
   //String str = &quot;idNum=633335199606143151&amp;name=蔺四十&amp;phone=17610010005&quot;;
   String str = &quot;${password}&quot;;
String result =&quot;&quot;;
try {
    result = Base64.encodeBase64String(encryptByPublicKey(str.getBytes(), RSA_PUB_KEY));
    System.out.println(result);
} catch (Exception e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
}
    
print(result);
vars.put(&quot;sign&quot;,result);
return result;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${login}&quot;,&#xd;
// &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
  &quot;password&quot;: &quot;{RSA}${sign}&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取登陆个人用户信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//根据token获取当前用户的个人信息&#xd;
  &quot;accessToken&quot;: &quot;${token}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/me</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">基本信息</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//用户id获取员工信息&#xd;
  &quot;id&quot;: &quot;${accountIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">员工所属报关行、组织、权限</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationNames</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accountId&quot;: &quot;${accountIds}&quot;,&#xd;
  &quot;organizationId&quot;: &quot;$.{organizationIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/accountOrganizationHistory/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIdsnow</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationUnitId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accountId&quot;: &quot;${accountIds}&quot;,&#xd;
  &quot;organizationId&quot;: &quot;$.{organizationIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/invt/ocrTestJson/testCallback</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIdsnow</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationUnitId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="货物申报上传事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamedec}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypedec}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="781365859">提交成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">pkgiddec</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">pathdec</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="${filePath}" elementType="HTTPFileArg">
                  <stringProp name="File.path">${filePath}</stringProp>
                  <stringProp name="File.paramname">file</stringProp>
                  <stringProp name="File.mimetype">application/octet-stream</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="file" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">(binary)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">file</stringProp>
                </elementProp>
                <elementProp name="pkgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${pkgiddec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pkgId</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">invoice_file</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="path" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${pathdec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">path</stringProp>
                </elementProp>
                <elementProp name="appName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${appnamedec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">appName</stringProp>
                </elementProp>
                <elementProp name="customsBrokerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customsBrokerId</stringProp>
                </elementProp>
                <elementProp name="companyName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${companyNamesdec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">companyName</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1120431564">文件上传成功</stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnamedec}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypedec}&quot;,&#xd;
    &quot;inOutType&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;5c859d57-443c-44ad-928e-48c7ae802c0f&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgiddec}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathdec}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
    &quot;source&quot;: &quot;1&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ocr文件识别" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;account_id&quot;: &quot;1a938f0c-cd58-490d-859b-6864da052171&quot;,&#xd;
  &quot;callback&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/api/customs/dec/recognition/callback&quot;,&#xd;
  &quot;company_name&quot;: &quot;hz_001&quot;,&#xd;
  &quot;customs_broker_id&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;debug&quot;: &quot;0&quot;,&#xd;
  &quot;declare_type&quot;: &quot;dec&quot;,&#xd;
  &quot;hd_model&quot;: 0,&#xd;
  &quot;in_out_type&quot;: &quot;I&quot;,&#xd;
  &quot;ocr_data_dir&quot;: &quot;/amiintellect/web/com.amiintellect.customs.edge.develop.18106/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063&quot;,&#xd;
  &quot;ocr_data_files&quot;: {&#xd;
    &quot;other_file&quot;: [&#xd;
      {&#xd;
        &quot;id&quot;: &quot;13c1c7a3-2299-4e25-9941-60d06402ce5b&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931ΩSheet3.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;eb03d375-6b40-476b-82c7-3860e3dae080&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931ΩSheet2.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;ae23221d-f15c-4d30-b99c-c38030a311ef&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884ΩSheet2.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;d6c22d66-e690-4e15-8682-91c4e5eb2876&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884ΩSheet3.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;a7e57dbc-1fa2-4f62-bed1-7d86ccf600da&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931Ω1.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;25d34892-a2af-4bd0-a9ed-28958725dc1f&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884Ω4.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;pdf_file&quot;: [&#xd;
      &#xd;
    ]&#xd;
  },&#xd;
  &quot;output_type&quot;: &quot;path&quot;,&#xd;
  &quot;parallel&quot;: &quot;1&quot;,&#xd;
  &quot;path&quot;: &quot;/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063&quot;,&#xd;
  &quot;project_id&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;sync&quot;: &quot;0&quot;,&#xd;
  &quot;ticket&quot;: &quot;${pkgiddec}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/ml/ocr/process</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="784795668">执行成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="海关特殊区域上传事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypesas}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="781365859">提交成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">pkgidsas</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">pathsas</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="${filePath}" elementType="HTTPFileArg">
                  <stringProp name="File.path">${filePath}</stringProp>
                  <stringProp name="File.paramname">file</stringProp>
                  <stringProp name="File.mimetype">application/octet-stream</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="file" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">(binary)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">file</stringProp>
                </elementProp>
                <elementProp name="pkgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${pkgidsas}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pkgId</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">invoice_file</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="path" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${pathsas}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">path</stringProp>
                </elementProp>
                <elementProp name="appName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${appnamesas}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">appName</stringProp>
                </elementProp>
                <elementProp name="customsBrokerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customsBrokerId</stringProp>
                </elementProp>
                <elementProp name="companyName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${companyNameshz}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">companyName</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1120431564">文件上传成功</stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypesas}&quot;,&#xd;
    &quot;inOutType&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;5c859d57-443c-44ad-928e-48c7ae802c0f&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgidsas}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathsas}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
    &quot;source&quot;: &quot;1&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ocr文件识别" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;account_id&quot;: &quot;1a938f0c-cd58-490d-859b-6864da052171&quot;,&#xd;
  &quot;callback&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/api/customs/dec/recognition/callback&quot;,&#xd;
  &quot;company_name&quot;: &quot;hz_001&quot;,&#xd;
  &quot;customs_broker_id&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;debug&quot;: &quot;0&quot;,&#xd;
  &quot;declare_type&quot;: &quot;sas&quot;,&#xd;
  &quot;hd_model&quot;: 0,&#xd;
  &quot;in_out_type&quot;: &quot;I&quot;,&#xd;
  &quot;ocr_data_dir&quot;: &quot;/amiintellect/web/com.amiintellect.customs.edge.develop.18106/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063&quot;,&#xd;
  &quot;ocr_data_files&quot;: {&#xd;
    &quot;other_file&quot;: [&#xd;
      {&#xd;
        &quot;id&quot;: &quot;13c1c7a3-2299-4e25-9941-60d06402ce5b&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931ΩSheet3.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;eb03d375-6b40-476b-82c7-3860e3dae080&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931ΩSheet2.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;ae23221d-f15c-4d30-b99c-c38030a311ef&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884ΩSheet2.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;d6c22d66-e690-4e15-8682-91c4e5eb2876&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884ΩSheet3.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;a7e57dbc-1fa2-4f62-bed1-7d86ccf600da&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931Ω1.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;25d34892-a2af-4bd0-a9ed-28958725dc1f&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884Ω4.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;pdf_file&quot;: [&#xd;
      &#xd;
    ]&#xd;
  },&#xd;
  &quot;output_type&quot;: &quot;path&quot;,&#xd;
  &quot;parallel&quot;: &quot;1&quot;,&#xd;
  &quot;path&quot;: &quot;/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063&quot;,&#xd;
  &quot;project_id&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;sync&quot;: &quot;0&quot;,&#xd;
  &quot;ticket&quot;: &quot;${pkgidsas}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/ml/ocr/process</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="784795668">执行成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="区外加工账册上传事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypeems}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="781365859">提交成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">pkgidems</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">pathems</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="${filePath}" elementType="HTTPFileArg">
                  <stringProp name="File.path">${filePath}</stringProp>
                  <stringProp name="File.paramname">file</stringProp>
                  <stringProp name="File.mimetype">application/octet-stream</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="file" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">(binary)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">file</stringProp>
                </elementProp>
                <elementProp name="pkgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${pkgidems}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pkgId</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">invoice_file</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="path" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${pathems}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">path</stringProp>
                </elementProp>
                <elementProp name="appName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${appnameems}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">appName</stringProp>
                </elementProp>
                <elementProp name="customsBrokerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customsBrokerId</stringProp>
                </elementProp>
                <elementProp name="companyName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${companyNameshz}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">companyName</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1120431564">文件上传成功</stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypeems}&quot;,&#xd;
    &quot;inOutType&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;5c859d57-443c-44ad-928e-48c7ae802c0f&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgidems}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathems}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
    &quot;source&quot;: &quot;1&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ocr文件识别" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;account_id&quot;: &quot;1a938f0c-cd58-490d-859b-6864da052171&quot;,&#xd;
  &quot;callback&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/api/customs/dec/recognition/callback&quot;,&#xd;
  &quot;company_name&quot;: &quot;hz_001&quot;,&#xd;
  &quot;customs_broker_id&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;debug&quot;: &quot;0&quot;,&#xd;
  &quot;declare_type&quot;: &quot;ems&quot;,&#xd;
  &quot;hd_model&quot;: 0,&#xd;
  &quot;in_out_type&quot;: &quot;I&quot;,&#xd;
  &quot;ocr_data_dir&quot;: &quot;/amiintellect/web/com.amiintellect.customs.edge.develop.18106/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063&quot;,&#xd;
  &quot;ocr_data_files&quot;: {&#xd;
    &quot;other_file&quot;: [&#xd;
      {&#xd;
        &quot;id&quot;: &quot;13c1c7a3-2299-4e25-9941-60d06402ce5b&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931ΩSheet3.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;eb03d375-6b40-476b-82c7-3860e3dae080&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931ΩSheet2.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;ae23221d-f15c-4d30-b99c-c38030a311ef&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884ΩSheet2.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;d6c22d66-e690-4e15-8682-91c4e5eb2876&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884ΩSheet3.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;a7e57dbc-1fa2-4f62-bed1-7d86ccf600da&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931Ω1.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;25d34892-a2af-4bd0-a9ed-28958725dc1f&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884Ω4.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;pdf_file&quot;: [&#xd;
      &#xd;
    ]&#xd;
  },&#xd;
  &quot;output_type&quot;: &quot;path&quot;,&#xd;
  &quot;parallel&quot;: &quot;1&quot;,&#xd;
  &quot;path&quot;: &quot;/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063&quot;,&#xd;
  &quot;project_id&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;sync&quot;: &quot;0&quot;,&#xd;
  &quot;ticket&quot;: &quot;${pkgidems}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/ml/ocr/process</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="784795668">执行成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="区外加工手册上传事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">	 &#xd;
{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypeeml}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="781365859">提交成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">pkgideml</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">patheml</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="${filePath}" elementType="HTTPFileArg">
                  <stringProp name="File.path">${filePath}</stringProp>
                  <stringProp name="File.paramname">file</stringProp>
                  <stringProp name="File.mimetype">application/octet-stream</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="file" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">(binary)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">file</stringProp>
                </elementProp>
                <elementProp name="pkgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${pkgideml}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pkgId</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">invoice_file</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="path" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${patheml}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">path</stringProp>
                </elementProp>
                <elementProp name="appName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${appnameeml}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">appName</stringProp>
                </elementProp>
                <elementProp name="customsBrokerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customsBrokerId</stringProp>
                </elementProp>
                <elementProp name="companyName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${companyNameshz}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">companyName</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1120431564">文件上传成功</stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypeeml}&quot;,&#xd;
    &quot;inOutType&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;5c859d57-443c-44ad-928e-48c7ae802c0f&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgideml}&quot;,&#xd;
    &quot;path&quot;: &quot;${patheml}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
    &quot;source&quot;: &quot;1&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ocr文件识别" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;account_id&quot;: &quot;1a938f0c-cd58-490d-859b-6864da052171&quot;,&#xd;
  &quot;callback&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/api/customs/dec/recognition/callback&quot;,&#xd;
  &quot;company_name&quot;: &quot;hz_001&quot;,&#xd;
  &quot;customs_broker_id&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;debug&quot;: &quot;0&quot;,&#xd;
  &quot;declare_type&quot;: &quot;eml&quot;,&#xd;
  &quot;hd_model&quot;: 0,&#xd;
  &quot;in_out_type&quot;: &quot;I&quot;,&#xd;
  &quot;ocr_data_dir&quot;: &quot;/amiintellect/web/com.amiintellect.customs.edge.develop.18106/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063&quot;,&#xd;
  &quot;ocr_data_files&quot;: {&#xd;
    &quot;other_file&quot;: [&#xd;
      {&#xd;
        &quot;id&quot;: &quot;13c1c7a3-2299-4e25-9941-60d06402ce5b&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931ΩSheet3.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;eb03d375-6b40-476b-82c7-3860e3dae080&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931ΩSheet2.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;ae23221d-f15c-4d30-b99c-c38030a311ef&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884ΩSheet2.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;d6c22d66-e690-4e15-8682-91c4e5eb2876&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884ΩSheet3.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;a7e57dbc-1fa2-4f62-bed1-7d86ccf600da&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931Ω1.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;25d34892-a2af-4bd0-a9ed-28958725dc1f&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884Ω4.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;pdf_file&quot;: [&#xd;
      &#xd;
    ]&#xd;
  },&#xd;
  &quot;output_type&quot;: &quot;path&quot;,&#xd;
  &quot;parallel&quot;: &quot;1&quot;,&#xd;
  &quot;path&quot;: &quot;/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063&quot;,&#xd;
  &quot;project_id&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;sync&quot;: &quot;0&quot;,&#xd;
  &quot;ticket&quot;: &quot;${pkgideml}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/ml/ocr/process</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="784795668">执行成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="保税物流上传事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypebws}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="781365859">提交成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">pkgidbws</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">pathbws</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="${filePath}" elementType="HTTPFileArg">
                  <stringProp name="File.path">${filePath}</stringProp>
                  <stringProp name="File.paramname">file</stringProp>
                  <stringProp name="File.mimetype">application/octet-stream</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="file" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">(binary)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">file</stringProp>
                </elementProp>
                <elementProp name="pkgId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${pkgidbws}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">pkgId</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">invoice_file</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="path" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${pathbws}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">path</stringProp>
                </elementProp>
                <elementProp name="appName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${appnamebws}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">appName</stringProp>
                </elementProp>
                <elementProp name="customsBrokerId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">customsBrokerId</stringProp>
                </elementProp>
                <elementProp name="companyName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${companyNameshz}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">companyName</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1120431564">文件上传成功</stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypebws}&quot;,&#xd;
    &quot;inOutType&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;5c859d57-443c-44ad-928e-48c7ae802c0f&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgidbws}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathbws}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
    &quot;source&quot;: &quot;1&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ocr文件识别" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;account_id&quot;: &quot;1a938f0c-cd58-490d-859b-6864da052171&quot;,&#xd;
  &quot;callback&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/api/customs/dec/recognition/callback&quot;,&#xd;
  &quot;company_name&quot;: &quot;hz_001&quot;,&#xd;
  &quot;customs_broker_id&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;debug&quot;: &quot;0&quot;,&#xd;
  &quot;declare_type&quot;: &quot;dec&quot;,&#xd;
  &quot;hd_model&quot;: 0,&#xd;
  &quot;in_out_type&quot;: &quot;I&quot;,&#xd;
  &quot;ocr_data_dir&quot;: &quot;/amiintellect/web/com.amiintellect.customs.edge.develop.18106/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063&quot;,&#xd;
  &quot;ocr_data_files&quot;: {&#xd;
    &quot;other_file&quot;: [&#xd;
      {&#xd;
        &quot;id&quot;: &quot;13c1c7a3-2299-4e25-9941-60d06402ce5b&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931ΩSheet3.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;eb03d375-6b40-476b-82c7-3860e3dae080&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931ΩSheet2.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;ae23221d-f15c-4d30-b99c-c38030a311ef&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884ΩSheet2.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;d6c22d66-e690-4e15-8682-91c4e5eb2876&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884ΩSheet3.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;a7e57dbc-1fa2-4f62-bed1-7d86ccf600da&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/invoice_file/20200411180216813921931Ω1.xls&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;25d34892-a2af-4bd0-a9ed-28958725dc1f&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063/way_bill/20200411180217321816884Ω4.xls&quot;,&#xd;
        &quot;type&quot;: &quot;way_bill&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;pdf_file&quot;: [&#xd;
      &#xd;
    ]&#xd;
  },&#xd;
  &quot;output_type&quot;: &quot;path&quot;,&#xd;
  &quot;parallel&quot;: &quot;1&quot;,&#xd;
  &quot;path&quot;: &quot;/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/hz_001/BG2020041100063&quot;,&#xd;
  &quot;project_id&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;sync&quot;: &quot;0&quot;,&#xd;
  &quot;ticket&quot;: &quot;${pkgideml}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/ml/ocr/process</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="784795668">执行成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="退出事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa退出" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//通过当前用户的token退出&#xd;
	&quot;accessToken&quot;:&quot;${token}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/logout</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="769363145">成功退出</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ocr文件识别" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;account_id&quot;: &quot;9fd920a2-b9de-4c44-aeb9-16ee9b619c42&quot;,&#xd;
  &quot;callback&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/api/customs/dec/recognition/callback&quot;,&#xd;
  &quot;company_name&quot;: &quot;0313测试报关行&quot;,&#xd;
  &quot;customs_broker_id&quot;: &quot;54bb29fb-2d1a-4f4a-b77d-19cbaa1a06f7&quot;,&#xd;
  &quot;debug&quot;: &quot;0&quot;,&#xd;
  &quot;declare_type&quot;: &quot;dec&quot;,&#xd;
  &quot;hd_model&quot;: 0,&#xd;
  &quot;in_out_type&quot;: &quot;I&quot;,&#xd;
  &quot;ocr_data_dir&quot;: &quot;/amiintellect/web/com.amiintellect.customs.edge.develop.18106/uploads/amiintellect-customs/dec/2020/2Q/4/54bb29fb-2d1a-4f4a-b77d-19cbaa1a06f7/0313测试报关行/BG2020040900021&quot;,&#xd;
  &quot;ocr_data_files&quot;: {&#xd;
    &quot;other_file&quot;: [&#xd;
      {&#xd;
        &quot;id&quot;: &quot;d7b67c31-d2a9-47b1-87f7-e5310418d54b&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/54bb29fb-2d1a-4f4a-b77d-19cbaa1a06f7/0313测试报关行/BG2020040900021/invoice_file/20200409170221854063461ΩSheet3.xlsx&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;5f4a8bb4-355a-4f8b-8fc4-88273568d7ac&quot;,&#xd;
        &quot;page&quot;: &quot;2&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/54bb29fb-2d1a-4f4a-b77d-19cbaa1a06f7/0313测试报关行/BG2020040900021/other_files/841f5eea-d7e8-4972-bc94-093c67bb5c80_2.png&quot;,&#xd;
        &quot;type&quot;: &quot;other_files&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;678f63bb-464d-4ec1-9d57-d66d2c2a2744&quot;,&#xd;
        &quot;page&quot;: &quot;2&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/jc_test001/BG2020040900021/other_files/3a19ecd8-e6ba-48ec-8dd6-eedaad67a860_2.png&quot;,&#xd;
        &quot;type&quot;: &quot;other_files&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;5f4a8bb4-355a-4f8b-8fc4-88273568d7ac&quot;,&#xd;
        &quot;page&quot;: &quot;1&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/54bb29fb-2d1a-4f4a-b77d-19cbaa1a06f7/0313测试报关行/BG2020040900021/other_files/a487f822-74a7-4bee-bb32-9346effd1a91_1.png&quot;,&#xd;
        &quot;type&quot;: &quot;other_files&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;855d3227-1766-4fc6-ae25-757c6ba025dd&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/54bb29fb-2d1a-4f4a-b77d-19cbaa1a06f7/0313测试报关行/BG2020040900021/invoice_file/20200409170221854063461Ω1.xlsx&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;678f63bb-464d-4ec1-9d57-d66d2c2a2744&quot;,&#xd;
        &quot;page&quot;: &quot;1&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/jc_test001/BG2020040900021/other_files/757b67eb-fbb2-46fe-902d-ba3e327eba0b_1.png&quot;,&#xd;
        &quot;type&quot;: &quot;other_files&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;70cd1d4f-ab3c-4896-b745-8b8dfb418445&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/54bb29fb-2d1a-4f4a-b77d-19cbaa1a06f7/0313测试报关行/BG2020040900021/invoice_file/20200409170221854063461ΩSheet2.xlsx&quot;,&#xd;
        &quot;type&quot;: &quot;invoice_file&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;pdf_file&quot;: [&#xd;
      {&#xd;
        &quot;id&quot;: &quot;5f4a8bb4-355a-4f8b-8fc4-88273568d7ac&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/54bb29fb-2d1a-4f4a-b77d-19cbaa1a06f7/0313测试报关行/BG2020040900021/other_files/20200409170222354056551.pdf&quot;,&#xd;
        &quot;type&quot;: &quot;other_files&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;id&quot;: &quot;678f63bb-464d-4ec1-9d57-d66d2c2a2744&quot;,&#xd;
        &quot;path&quot;: &quot;http://apis.develop.edge.customs.dev.amiintellect.com/uploads/amiintellect-customs/dec/2020/2Q/4/7823107e-7d90-4200-814a-a29d63ed9cbf/jc_test001/BG2020040900021/other_files/20200409133933603858969.pdf&quot;,&#xd;
        &quot;type&quot;: &quot;other_files&quot;&#xd;
      }&#xd;
    ]&#xd;
  },&#xd;
&#xd;
  &quot;output_type&quot;: &quot;&quot;,&#xd;
  &quot;parallel&quot;: &quot;0&quot;,&#xd;
  &quot;path&quot;: &quot;&quot;,&#xd;
  &quot;project_id&quot;: &quot;54bb29fb-2d1a-4f4a-b77d-19cbaa1a06f7&quot;,&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;sync&quot;: &quot;0&quot;,&#xd;
  &quot;ticket&quot;: &quot;BG${ticket}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
          <stringProp name="HTTPSampler.port">${myPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
          <stringProp name="HTTPSampler.path">/api/ml/ocr/process</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="784795668">执行成功</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - Stepping Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count"></stringProp>
        <stringProp name="Start users count burst">0</stringProp>
        <stringProp name="Start users period"></stringProp>
        <stringProp name="Stop users count"></stringProp>
        <stringProp name="Stop users period"></stringProp>
        <stringProp name="flighttime">180</stringProp>
        <stringProp name="rampUp"></stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="myHost" elementType="Argument">
              <stringProp name="Argument.name">myHost</stringProp>
              <stringProp name="Argument.value">develop.edge.customs.dev.amiintellect.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">开发</stringProp>
            </elementProp>
            <elementProp name="myPort" elementType="Argument">
              <stringProp name="Argument.name">myPort</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="myCoding" elementType="Argument">
              <stringProp name="Argument.name">myCoding</stringProp>
              <stringProp name="Argument.value">utf-8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamedec" elementType="Argument">
              <stringProp name="Argument.name">appnamedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.desc">货物申报</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypedec" elementType="Argument">
              <stringProp name="Argument.name">declareTypedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamebws" elementType="Argument">
              <stringProp name="Argument.name">appnamebws</stringProp>
              <stringProp name="Argument.value">bws</stringProp>
              <stringProp name="Argument.desc">保税物流</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypebws" elementType="Argument">
              <stringProp name="Argument.name">declareTypebws</stringProp>
              <stringProp name="Argument.value">bws_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameems" elementType="Argument">
              <stringProp name="Argument.name">appnameems</stringProp>
              <stringProp name="Argument.value">ems</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册</stringProp>
            </elementProp>
            <elementProp name="declareTypeems" elementType="Argument">
              <stringProp name="Argument.name">declareTypeems</stringProp>
              <stringProp name="Argument.value">nems_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamesas" elementType="Argument">
              <stringProp name="Argument.name">appnamesas</stringProp>
              <stringProp name="Argument.value">sas</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">海关特殊</stringProp>
            </elementProp>
            <elementProp name="declareTypesas" elementType="Argument">
              <stringProp name="Argument.name">declareTypesas</stringProp>
              <stringProp name="Argument.value">sas_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameeml" elementType="Argument">
              <stringProp name="Argument.name">appnameeml</stringProp>
              <stringProp name="Argument.value">eml</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册手册</stringProp>
            </elementProp>
            <elementProp name="declareTypeeml" elementType="Argument">
              <stringProp name="Argument.name">declareTypeeml</stringProp>
              <stringProp name="Argument.value">npts_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshz" elementType="Argument">
              <stringProp name="Argument.name">companyNameshz</stringProp>
              <stringProp name="Argument.value">hz_001</stringProp>
              <stringProp name="Argument.desc">公司名称</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNamesdec" elementType="Argument">
              <stringProp name="Argument.name">companyNamesdec</stringProp>
              <stringProp name="Argument.value">jc_test001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">apis.develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">http://develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">http://develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 识别文件" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="filename">D:/jmeter/rpajmx/开发环境文件/识别文件货物申报.txt</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">fileName,filePath</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV账号密码" enabled="true">
          <stringProp name="filename">D:/jmeter/rpajmx/开发环境文件/账号密码.txt</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="variableNames">login,password</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa登陆" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${login}&quot;,&#xd;
  &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
//  &quot;password&quot;: &quot;{RSA}${sign}&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
          <stringProp name="HTTPSampler.port">${myPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
          <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="941359866">登陆成功</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">accountIds</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">refreshToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV进出口" enabled="true">
            <stringProp name="filename">D:/jmeter/rpajmx/开发环境文件/进出口.txt</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">impexpMarkcds,appnames,declareTypes,companyNames</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工信息" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	//用户id获取员工信息&#xd;
  &quot;id&quot;: &quot;${accountIds}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
          <stringProp name="HTTPSampler.port">${myPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
          <stringProp name="HTTPSampler.path">api/customs/core/sysUser/findOne</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">员工所属报关行、组织、权限</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-115307114">查询成功。</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationIds</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行name" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationNames</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器组织id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">organizationIds</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;accountId&quot;: &quot;${accountIds}&quot;,&#xd;
  &quot;organizationId&quot;: &quot;$.{organizationIds}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
          <stringProp name="HTTPSampler.port">${myPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
          <stringProp name="HTTPSampler.path">api/customs/core/accountOrganizationHistory/findOne</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-115307114">查询成功。</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">organizationIdsnow</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationUnitId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货物申报表头保存（新增）" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
 &#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;1|监管仓库&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1501|绿园海关&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;1105919023|中国国际石油化工联合有限责任公司&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;中国国际石油化工联合有限责任公司&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;2|单价&quot;,&#xd;
    &quot;insurance&quot;: &quot;1|率&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;111&quot;,&#xd;
    &quot;note&quot;: &quot;备注000&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;1501|绿园海关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;006|出口二次转关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;111111111&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;bce97d1e-dc9a-41da-87ab-bd3ba9c1502b&quot;,&#xd;
    &quot;cusCode&quot;: &quot;22222222&quot;,&#xd;
    &quot;eori&quot;: &quot;333333333333&quot;,&#xd;
    &quot;contractNo&quot;: &quot;444444444&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;911100001000134314&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;AAAA&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;1111111111|中新（重庆）多式联运物流发展有限公司两江新区分公司&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;中新（重庆）多式联运物流发展有限公司两江新区分公司&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;111111111111111111&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1111111&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具111&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;航次号222&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;5555555&quot;,&#xd;
    &quot;billNo&quot;: &quot;6666666666&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;AFG|阿富汗&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;992202|珲春出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;HKD|港币&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;0.3&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;1&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;CNY|人民币&quot;,&#xd;
    &quot;wrapType&quot;: &quot;22|纸制或纤维板制盒/箱&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;333&quot;,&#xd;
    &quot;netWeight&quot;: &quot;22&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;23444&quot;,&#xd;
    &quot;entryPort&quot;: &quot;110301|北京朝阳口岸&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991206|中国（天津）自由贸易试验区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;1&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;125700|宁河海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;125700|宁河海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;125700|宁河海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;11233&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;1|通关单超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;bls&quot;,&#xd;
    &quot;specialFlag&quot;: [&#xd;
      &quot;国际赛事&quot;,&#xd;
      &quot;特殊进出军工物资&quot;,&#xd;
      &quot;国际援助物资&quot;&#xd;
    ],&#xd;
    &quot;originalBoxTransportation&quot;: &quot;运输&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;BG2020041700220&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;tempSaveType&quot;: &quot;1&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;bce97d1e-dc9a-41da-87ab-bd3ba9c1502b&quot;,&#xd;
  &quot;companyName&quot;: &quot;中国国际石油化工联合有限责任公司&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;111111111&quot;,&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;projectId&quot;: &quot;3a7c31e6-89cf-45eb-b299-32864ef032f6&quot;,&#xd;
  &quot;accountOrginzationId&quot;: &quot;3a7c31e6-89cf-45eb-b299-32864ef032f6&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;7823107e-7d90-4200-814a-a29d63ed9cbf&quot;,&#xd;
  &quot;customsBroker&quot;: &quot;0215测试001&quot;,&#xd;
  &quot;accountOrginzationName&quot;: &quot;测试1&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
          <stringProp name="HTTPSampler.port">${myPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
          <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
              <stringProp name="2117">BG</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取流水号" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bizIds</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizld</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="货物申报表体保存（新增）" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;tempSaveType&quot;: &quot;2&quot;,&#xd;
  &quot;companyName&quot;: &quot;&quot;,&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;commodityCode&quot;: &quot;23414234&quot;,&#xd;
      &quot;description&quot;: &quot;1234&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;recordsNumber&quot;: &quot;1234&quot;,&#xd;
      &quot;refresh_type&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;model&quot;: &quot;1234&quot;,&#xd;
      &quot;quantity&quot;: &quot;111&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;111|平方英尺&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;123&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;13653&quot;,&#xd;
      &quot;curr&quot;: &quot;CNY|人民币&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;111&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;111|平方英尺&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;1324&quot;,&#xd;
      &quot;itemNo&quot;: &quot;1234&quot;,&#xd;
      &quot;regulatoryConditions&quot;: &quot;1&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;111&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;111|平方英尺&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;originArea&quot;: &quot;&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11029|西城区&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110104|北京市宣武区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;1|照章征税&quot;,&#xd;
      &quot;inspQuarCargoSize&quot;: &quot;&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;16|实验&quot;,&#xd;
      &quot;productNo&quot;: 1,&#xd;
      &quot;originCountryCode&quot;: &quot;&quot;,&#xd;
      &quot;reportElement&quot;: {&#xd;
        &#xd;
      },&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;productPermitList&quot;: [&#xd;
        {&#xd;
          &quot;basicId&quot;: &quot;&quot;,&#xd;
          &quot;productSerialNumber&quot;: 1,&#xd;
          &quot;hsCode&quot;: &quot;23414234&quot;,&#xd;
          &quot;productName&quot;: &quot;1234&quot;,&#xd;
          &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
          &quot;serialNumber&quot;: 1,&#xd;
          &quot;permitType&quot;: &quot;107|植物检疫证书&quot;,&#xd;
          &quot;permitTypeName&quot;: &quot;植物检疫证书&quot;,&#xd;
          &quot;permitTypeCode&quot;: &quot;107&quot;,&#xd;
          &quot;permitNo&quot;: &quot;1123&quot;,&#xd;
          &quot;verificationCargoNo&quot;: &quot;&quot;,&#xd;
          &quot;verificationCount&quot;: &quot;&quot;,&#xd;
          &quot;verificationCountUnit&quot;: &quot;&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;packages&quot;: &quot;&quot;,&#xd;
      &quot;grossWeight&quot;: &quot;&quot;,&#xd;
      &quot;netWeight&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;3a7c31e6-89cf-45eb-b299-32864ef032f6&quot;,&#xd;
  &quot;accountOrginzationId&quot;: &quot;3a7c31e6-89cf-45eb-b299-32864ef032f6&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;7823107e-7d90-4200-814a-a29d63ed9cbf&quot;,&#xd;
  &quot;customsBroker&quot;: &quot;0215测试001&quot;,&#xd;
  &quot;accountOrginzationName&quot;: &quot;测试1&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
          <stringProp name="HTTPSampler.port">${myPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
          <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="48">0</stringProp>
              <stringProp name="2117">BG</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取流水号" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bizIds</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizld</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="海关特殊表头保存（新增）" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;5c859d57-443c-44ad-928e-48c7ae802c0f&quot;,&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;1234144444&quot;,&#xd;
    &quot;bizopEtpsno&quot;: &quot;1101919028&quot;,&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;91110000101255707D&quot;,&#xd;
    &quot;bizopEtpsNm&quot;: &quot;中国科学器材公司&quot;,&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;1105919023&quot;,&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;911100001000134314&quot;,&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;中国国际石油化工联合有限责任公司&quot;,&#xd;
    &quot;dclEtpsno&quot;: &quot;4143443343&quot;,&#xd;
    &quot;dclEtpsSccd&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;dclEtpsNm&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;inputTime&quot;: &quot;20200419&quot;,&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,&#xd;
    &quot;impexpPortcd&quot;: &quot;1511&quot;,&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;阿富汗&quot;,&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,&#xd;
    &quot;decType&quot;: &quot;6&quot;,&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4101630001&quot;,&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;9141010055830728X4&quot;,&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;鸿富锦精密电子（郑州）有限公司&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1101919028&quot;,&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;91110000101255707D&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;中国科学器材公司&quot;,&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;4143443343&quot;,&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;rmk&quot;: &quot;备注314414&quot;&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;customsBroker&quot;: &quot;0215测试001&quot;,&#xd;
  &quot;projectId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;sas&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
          <stringProp name="HTTPSampler.port">${myPort}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
          <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="632348394">保存成功</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取流水号" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bizIds</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="高斯随机定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
            <stringProp name="RandomTimer.range">100.0</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="同步定时器" enabled="true">
          <intProp name="groupSize">0</intProp>
          <longProp name="timeoutInMs">0</longProp>
        </SyncTimer>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新增多条表体" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="控制表体次数" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">15</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="海关特殊表体保存（新增）" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;121&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;14444&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;2314&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;12341424&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1243141&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1123414344&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;12341414&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot;1|1|1|！23414&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;美元&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;101&quot;,&#xd;
    &quot;dclQty&quot;: &quot;1&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;123&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;23141.0000&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;23141&quot;,&#xd;
    &quot;natcd&quot;: &quot;阿富汗&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;阿富汗&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;123414&quot;,&#xd;
    &quot;rmk&quot;: &quot;1234144&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;sas&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;JGHZ2020041900718	&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">500</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="test" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="myHost" elementType="Argument">
              <stringProp name="Argument.name">myHost</stringProp>
              <stringProp name="Argument.value">rpa.test.anjie.superlucy.net</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">开发</stringProp>
            </elementProp>
            <elementProp name="myPort" elementType="Argument">
              <stringProp name="Argument.name">myPort</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="myCoding" elementType="Argument">
              <stringProp name="Argument.name">myCoding</stringProp>
              <stringProp name="Argument.value">utf-8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamedec" elementType="Argument">
              <stringProp name="Argument.name">appnamedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.desc">货物申报</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypedec" elementType="Argument">
              <stringProp name="Argument.name">declareTypedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamebws" elementType="Argument">
              <stringProp name="Argument.name">appnamebws</stringProp>
              <stringProp name="Argument.value">bws</stringProp>
              <stringProp name="Argument.desc">保税物流</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypebws" elementType="Argument">
              <stringProp name="Argument.name">declareTypebws</stringProp>
              <stringProp name="Argument.value">bws_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameems" elementType="Argument">
              <stringProp name="Argument.name">appnameems</stringProp>
              <stringProp name="Argument.value">ems</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册</stringProp>
            </elementProp>
            <elementProp name="declareTypeems" elementType="Argument">
              <stringProp name="Argument.name">declareTypeems</stringProp>
              <stringProp name="Argument.value">nems_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamesas" elementType="Argument">
              <stringProp name="Argument.name">appnamesas</stringProp>
              <stringProp name="Argument.value">sas</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">海关特殊</stringProp>
            </elementProp>
            <elementProp name="declareTypesas" elementType="Argument">
              <stringProp name="Argument.name">declareTypesas</stringProp>
              <stringProp name="Argument.value">sas_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameeml" elementType="Argument">
              <stringProp name="Argument.name">appnameeml</stringProp>
              <stringProp name="Argument.value">eml</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册手册</stringProp>
            </elementProp>
            <elementProp name="declareTypeeml" elementType="Argument">
              <stringProp name="Argument.name">declareTypeeml</stringProp>
              <stringProp name="Argument.value">npts_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshz" elementType="Argument">
              <stringProp name="Argument.name">companyNameshz</stringProp>
              <stringProp name="Argument.value">hz_001</stringProp>
              <stringProp name="Argument.desc">公司名称</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNamesdec" elementType="Argument">
              <stringProp name="Argument.name">companyNamesdec</stringProp>
              <stringProp name="Argument.value">bgd001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshzs" elementType="Argument">
              <stringProp name="Argument.name">companyNameshzs</stringProp>
              <stringProp name="Argument.value">jc_test001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="operCusRegcode" elementType="Argument">
              <stringProp name="Argument.name">operCusRegcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(10,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sccdcode" elementType="Argument">
              <stringProp name="Argument.name">sccdcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(18,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="icCardNo" elementType="Argument">
              <stringProp name="Argument.name">icCardNo</stringProp>
              <stringProp name="Argument.value">${__RandomString(13,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="icCardname" elementType="Argument">
              <stringProp name="Argument.name">icCardname</stringProp>
              <stringProp name="Argument.value">${__RandomString(8,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="idcode" elementType="Argument">
              <stringProp name="Argument.name">idcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(32,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">rpa.test.anjie.superlucy.net</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">http://rpa.test.anjie.superlucy.net</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">http://rpa.test.anjie.superlucy.net</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">responseType</stringProp>
              <stringProp name="Header.value">blob</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 识别文件" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/识别文件.txt</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">filePathBG,filePathHZ</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV账号密码" enabled="true">
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/账号密码.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">login,password</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV进出口" enabled="true">
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/进出口.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">impexpMarkcds,appnames,declareTypes,companyNames</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="登陆事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成 RSA 加密的公钥和私钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数&#xd;
  &quot;nonce&quot;:&quot;959227&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/generateRsaKeyPair</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取默认的 RSA 公钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数获取公钥&#xd;
  &quot;nonce&quot;: &quot;955095&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/getRsaPublicKey</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SHA-1 方式加密" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;text&quot;: &quot;123456955095&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/encryptSha1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeysQ</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置" enabled="false">
            <stringProp name="TestPlan.comments">对密码进行加密</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;
import java.io.ByteArrayOutputStream;
import java.security.Key;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.Signature;
import java.security.interfaces.RSAPrivateKey;
import java.security.interfaces.RSAPublicKey;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
import java.util.HashMap;
import java.util.Map;
import javax.crypto.Cipher;
//获取公钥
String RSA_PUB_KEY=&quot;${getRsaPublicKeys}&quot;;
String KEY_ALGORITHM = &quot;RSA&quot;;
String SIGNATURE_ALGORITHM = &quot;MD5withRSA&quot;;
int MAX_ENCRYPT_BLOCK = 117;
int MAX_DECRYPT_BLOCK = 128;

public static byte[] decryptByPublicKey(byte[] encryptedData, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.DECRYPT_MODE, publicK);
        int inputLen = encryptedData.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段解密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_DECRYPT_BLOCK) {
                cache = cipher.doFinal(encryptedData, offSet, MAX_DECRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(encryptedData, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_DECRYPT_BLOCK;
        }
        byte[] decryptedData = out.toByteArray();
        out.close();
        return decryptedData;
    }

    public static byte[] encryptByPublicKey(byte[] data, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        // 对数据加密
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.ENCRYPT_MODE, publicK);
        int inputLen = data.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段加密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_ENCRYPT_BLOCK) {
                cache = cipher.doFinal(data, offSet, MAX_ENCRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(data, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_ENCRYPT_BLOCK;
        }
        byte[] encryptedData = out.toByteArray();
        out.close();
        return encryptedData;
    }
    //需要加密的用户密码
   //String str = &quot;idNum=633335199606143151&amp;name=蔺四十&amp;phone=17610010005&quot;;
   String str = &quot;${password}&quot;;
String result =&quot;&quot;;
try {
    result = Base64.encodeBase64String(encryptByPublicKey(str.getBytes(), RSA_PUB_KEY));
    System.out.println(result);
} catch (Exception e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
}
    
print(result);
vars.put(&quot;sign&quot;,result);
return result;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
//  &quot;loginName&quot;: &quot;${login}&quot;,&#xd;
  &quot;loginName&quot;: &quot;shudalong2&quot;,&#xd;
  &quot;password&quot;: &quot;123456&quot;,&#xd;
   //账号密码&#xd;
//  &quot;password&quot;: &quot;${password}&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取登陆个人用户信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//根据token获取当前用户的个人信息&#xd;
  &quot;accessToken&quot;: &quot;${token}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/me</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">基本信息</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//用户id获取员工信息&#xd;
  &quot;id&quot;: &quot;${accountIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">员工所属报关行、组织、权限</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationNames</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织id" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accountId&quot;: &quot;${accountIds}&quot;,&#xd;
  &quot;organizationId&quot;: &quot;$.{organizationIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/accountOrganizationHistory/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIdsnow</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationUnitId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织名称" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/membership/organizationUnit/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织名称" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">projectname</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="识别事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="货物申报上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,  //&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;, //上传用户&#xd;
  &quot;appName&quot;: &quot;${appnamedec}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypedec}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;  //报关行id&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgiddec</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathdec</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathBG}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathBG}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">multipart/form-data</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgiddec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamedec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNamesdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathBG}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathBG}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">multipart/form-data</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgiddec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">way_bill</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamedec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNamesdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnamedec}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypedec}&quot;, //&#xd;
    &quot;inOutType&quot;: &quot;${impexpMarkcds}&quot;,  //进出口&#xd;
    &quot;entrustCompanyId&quot;: &quot;5c859d57-443c-44ad-928e-48c7ae802c0f&quot;, //委托单位&#xd;
    &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgiddec}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathdec}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
    &quot;source&quot;: &quot;1&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
    {&#xd;
    	&quot;name&quot;:&quot;运单文件&quot;,&#xd;
    	&quot;fileStatus&quot;:&quot;0&quot;&#xd;
    	}&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="海关特殊区域上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypesas}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgidsas</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathsas</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgidsas}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathsas}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamesas}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;invtMakeManage&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgidsas}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathsas}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;importId&quot;: &quot;&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;运单文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="区外加工账册上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypeems}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgidems</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathems</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgidems}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathems}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnameems}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;invtMakeManage&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypeems}&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgidems}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathems}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;importId&quot;: &quot;&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="区外加工手册上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">	 &#xd;
{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypeeml}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgideml</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">patheml</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgideml}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${patheml}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnameeml}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;invtMakeManage&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypeeml}&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgideml}&quot;,&#xd;
    &quot;path&quot;: &quot;${patheml}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;importId&quot;: &quot;&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="保税物流上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypebws}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgidbws</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathbws</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgidbws}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathbws}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamebws}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;invtMakeManage&quot;: {&#xd;
      &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
      &quot;declareType&quot;: &quot;${declareTypebws}&quot;,&#xd;
      &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
      &quot;id&quot;: &quot;${pkgidbws}&quot;,&#xd;
      &quot;path&quot;: &quot;${pathbws}&quot;,&#xd;
      &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
      &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
      &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
      &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
      &quot;importId&quot;: &quot;&quot;,&#xd;
      &quot;agent&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;provider&quot;: &quot;&quot;,&#xd;
    &quot;nameFileList&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;发票文件&quot;,&#xd;
        &quot;fileStatus&quot;: &quot;0&quot;&#xd;
      }&#xd;
    ]&#xd;
 }</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="手动新增事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="货物申报手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;2|单价&quot;,&#xd;
    &quot;insurance&quot;: &quot;1|率&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;222222222222&quot;,&#xd;
    &quot;contractNo&quot;: &quot;333333333333333&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;CU0293&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;billNo&quot;: &quot;4444444444&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;HKD|港币&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;0.3&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;1&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;CNY|人民币&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;04|undefined&quot;,  //&#xd;
    &quot;grossWeight&quot;: &quot;12&quot;,&#xd;
    &quot;netWeight&quot;: &quot;12&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;6666666&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;1|通关单超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;specialFlag&quot;: [&#xd;
      &quot;国际赛事&quot;,&#xd;
      &quot;特殊进出军工物资&quot;,&#xd;
      &quot;国际援助物资&quot;&#xd;
    ],&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20200202&quot;,&#xd;
    &quot;BL&quot;: &quot;bl&quot;,&#xd;
    &quot;originalBoxTransportation&quot;: &quot;原箱运输&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,//来源（1：识别；2：手动新增；3：复制；4：）&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,  //进出口&#xd;
  &quot;tempSaveType&quot;: &quot;1&quot;, //暂存（1：表头；2：表体）&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,//上传客户名称&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;球状罐类&quot;,&#xd;
      &quot;code&quot;: &quot;04&quot;,&#xd;
      &quot;wId&quot;: &quot;3&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;包/袋&quot;,&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,  //组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//当前组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1956631233">BG2020</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bizidhead</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;${bizidhead}&quot;,   //流水号&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,   //进出口&#xd;
  &quot;tempSaveType&quot;: &quot;2&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,  //上传公司名称&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;refresh_type&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarCargoSize&quot;: &quot;&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;basicId&quot;: &quot;${bizidhead}&quot;,&#xd;
      &quot;reportElement&quot;: {&#xd;
        &#xd;
      },&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;packages&quot;: &quot;&quot;,&#xd;
      &quot;grossWeight&quot;: &quot;&quot;,&#xd;
      &quot;netWeight&quot;: &quot;&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1956631233">BG2020</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidhead}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 1,   //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidhead}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表体生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;&quot;,   //流水号&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,   //进出口&#xd;
  &quot;tempSaveType&quot;: &quot;2&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,  //上传公司名称&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;refresh_type&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarCargoSize&quot;: &quot;&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;basicId&quot;: &quot;BG2020050700005&quot;,&#xd;
      &quot;reportElement&quot;: {&#xd;
        &#xd;
      },&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;packages&quot;: &quot;&quot;,&#xd;
      &quot;grossWeight&quot;: &quot;&quot;,&#xd;
      &quot;netWeight&quot;: &quot;&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1956631233">BG2020</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交表体生成的流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bizidlist</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表体流水号暂存表头" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;06|undefined&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;123&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: [&#xd;
      &quot;国际赛事&quot;,&#xd;
      &quot;特殊进出军工物资&quot;,&#xd;
      &quot;国际援助物资&quot;,&#xd;
      &quot;国际会议&quot;&#xd;
    ],&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;${bizidlist}&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;tempSaveType&quot;: &quot;1&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;包/袋&quot;,&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;纸制或纤维板制盒/箱&quot;,&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//当前组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bizidtwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 1,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="驳回" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 3,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="48">0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${bizidtwo}&quot;, //流水号&#xd;
  &quot;source&quot;: &quot;2&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/selectOne</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 2,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="833408814">0操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="海关特殊区域手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">headsasid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listsaszero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号新增表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号新增表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listsaszero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listsaszero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypesasone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listsasone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypesasone},&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listsasone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypesastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypesastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdsastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdsastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 3,&#xd;
  &quot;values&quot;: ${invtHeadTypesastwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdsastwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;2341244&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdsastwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypesastwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,  //流水号&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,  //进出口类型&#xd;
  &quot;decType&quot;: &quot;1&quot;,   //&#xd;
  &quot;dclcusTypecd&quot;: &quot;1&quot;,  //&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;  //模块&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/sas/sasInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="加工账册手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">heademsid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listemszero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listemszero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemszero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listemsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypeemsone},&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemsone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="invtlisttypeemstwo--表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="invtHeadTypeemstwo--表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypeemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="impexpMarkcdemstwo--进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="mtpckEndprdMarkcdemstwo---成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;values&quot;: ${invtHeadTypeemstwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdemstwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;412341243414&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdemstwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypeemstwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,  //流水号&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,  //进出口类型&#xd;
  &quot;decType&quot;: &quot;1&quot;,   //&#xd;
  &quot;dclcusTypecd&quot;: &quot;1&quot;,  //&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;  //模块&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/ems/emsInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="加工手册手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
 &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;124312444443&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">heademlid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listemlzero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listemlzero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemlzero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemlone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listemlone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypeemlone},&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemlone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="表体-invtlisttypeemltwo" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="表头--invtHeadTypeemltwo" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypeemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="进出口--impexpMarkcdemltwo" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="成品、料件标志--mtpckEndprdMarkcdemltwo" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 3,&#xd;
  &quot;values&quot;: ${invtHeadTypeemltwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdemltwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;124312444443&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdemltwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypeemltwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,&#xd;
  &quot;values&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;124312444443&quot;,&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;,&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,&#xd;
    &quot;decType&quot;: &quot;3&quot;,&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;id&quot;: &quot;${heademlid}&quot;&#xd;
  },&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;appName&quot;: &quot;eml&quot;,&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/eml/emlInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="保税物流手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">headbwsid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号更改表头" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;,&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;bws2020050600128&quot;,&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,&#xd;
    &quot;decType&quot;: &quot;1&quot;,&#xd;
    &quot;rltInvtNo&quot;: &quot;333333&quot;,&#xd;
    &quot;rltPutrecNo&quot;: &quot;3333333&quot;,&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;45654671231&quot;,&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;rmk&quot;: &quot;撒地方备注&quot;,&#xd;
    &quot;id&quot;: &quot;${headbwsid}&quot;&#xd;
  },&#xd;
&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">headbwsid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listbwszero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listbwszero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listbwszero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypebwsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listbwsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypebwsone},&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listbwsone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypebwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypebwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdbwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdbwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 2,  //1.识别；2.手动新增&#xd;
  &quot;values&quot;: ${invtHeadTypebwstwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdbwstwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;2341244&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdbwstwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypebwstwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,  //1：；2：&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;  //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="驳回" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/rejectInvt</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypebwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypebwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdbwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdbwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,  //流水号&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,  //进出口类型&#xd;
  &quot;decType&quot;: &quot;1&quot;,   //&#xd;
  &quot;dclcusTypecd&quot;: &quot;1&quot;,  //&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;  //模块&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/sas/sasInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新建报关行事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建报关行" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;${icCardname}&quot;,//名称&#xd;
  &quot;operCusRegcode&quot;: &quot;${operCusRegcode}&quot;,//海关编码&#xd;
  &quot;sccd&quot;: &quot;${sccdcode}&quot;,//企业十八位信用代码&#xd;
  &quot;hdModel&quot;: 0,&#xd;
  &quot;type&quot;: 3,//新建公司类型&#xd;
  &quot;fileData&quot;: &quot;&quot;,&#xd;
  &quot;adminName&quot;: &quot;${icCardname}&quot;,//账号&#xd;
  &quot;clientNo&quot;: &quot;${operCusRegcode}&quot;,//客户端编号&#xd;
  &quot;icCardNo&quot;: &quot;${icCardNo}&quot;,//操作卡号&#xd;
  &quot;sendAddress&quot;: &quot;5671&quot;,&#xd;
  &quot;sendVirhost&quot;: &quot;/&quot;,&#xd;
  &quot;exchange&quot;: &quot;&quot;,&#xd;
  &quot;sendQuene&quot;: &quot;&quot;,&#xd;
  &quot;recvAddress&quot;: &quot;5671&quot;,&#xd;
  &quot;recvVirhost&quot;: &quot;/&quot;,&#xd;
  &quot;recvQuene&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysCustomsBrokerCore/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询报关行名称--${icCardname}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;paging&quot;: {&#xd;
    &quot;total&quot;: &quot;&quot;,&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysCustomsBrokerCore/queryAll</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bghname</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[0].name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${icCardname}&quot;,&#xd;
// &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
  &quot;password&quot;: &quot;123456&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshTokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//用户id获取员工信息&#xd;
  &quot;id&quot;: &quot;${accountIdone}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">员工所属报关行、组织、权限</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationNameone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建角色" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;&quot;,&#xd;
  &quot;status&quot;: &quot;1&quot;,&#xd;
  &quot;memberText&quot;: &quot;&quot;,&#xd;
  &quot;type&quot;: &quot;3&quot;,&#xd;
  &quot;organizationUnitId&quot;: &quot;${standardOrganizationIdone}&quot;,//&#xd;
  &quot;parentId&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,&#xd;
  &quot;name&quot;: &quot;测试001&quot;,&#xd;
  &quot;remark&quot;: &quot;测试角色&quot;,&#xd;
  &quot;permission&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;系统管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;字典表管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000101&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000102&quot;,&#xd;
          &quot;name&quot;: &quot;新增字典信息&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000103&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000104&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;字典表管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;商品预归类&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000003&quot;,&#xd;
          &quot;name&quot;: &quot;所有归类文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000004&quot;,&#xd;
          &quot;name&quot;: &quot;归类失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000005&quot;,&#xd;
          &quot;name&quot;: &quot;归类中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000006&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000007&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000008&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000010&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000011&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000012&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000013&quot;,&#xd;
          &quot;name&quot;: &quot;查看&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;商品智能预归类&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010200000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010100000002&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;申报要素库&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010200000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;团队管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001001&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001002&quot;,&#xd;
          &quot;name&quot;: &quot;新建企业&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001003&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001004&quot;,&#xd;
          &quot;name&quot;: &quot;重置密码&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;企业管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-020000002001&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-020000002004&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-020000002005&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;组织架构&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000003000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;角色权限&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;公众号管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;消息管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;推文管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;粉丝管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;岗位管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;海关特殊监管区域&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000012&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000013&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000014&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000017&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册报核&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000007&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000018&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;物流账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;一线一体化进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;二线进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;非报关进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;卡口登记货物&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;空车核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;先入区后报关&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000005&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000006&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000007&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;车辆管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000001&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000002&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000004&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000005&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000006&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000007&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000008&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-080000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税物流管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000018&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;物流账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;一线一体化进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000007&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000008&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000009&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;二线进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;非报关进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000007&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000008&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000009&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;卡口登记货物&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;空车核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000007&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000008&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000009&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;先入区后报关&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000005&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000006&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000007&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;车辆管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000001&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000002&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000004&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000005&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000006&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000007&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000008&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-080000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;物流账册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;区外加工贸易&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工账册管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000003&quot;,&#xd;
          &quot;name&quot;: &quot;已提交企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000004&quot;,&#xd;
          &quot;name&quot;: &quot;已申报企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000005&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000006&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000008&quot;,&#xd;
          &quot;name&quot;: &quot;新建企业&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000009&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000010&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000011&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000012&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000013&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000015&quot;,&#xd;
          &quot;name&quot;: &quot;已回执企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;企业资质申请&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000009&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000010&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000011&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000012&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000013&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000014&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000015&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000016&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册报核&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010700000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-020600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易手册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工手册管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建手册信息(列表)&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000011&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000012&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000013&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000014&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000017&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易手册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易手册报核&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;客户管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有客户&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000002&quot;,&#xd;
          &quot;name&quot;: &quot;OCR新增待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000003&quot;,&#xd;
          &quot;name&quot;: &quot;全部已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000004&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;高级搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;新增客户信息&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;修改信息&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;分配组织&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;导入客户&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;主页&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;企业基础信息&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;应用平台管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;报关行管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-050000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;字典管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000012&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000013&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000014&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000015&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物申报制单(进口)&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000016&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000018&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000019&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000020&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000021&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000022&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000023&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000024&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000025&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000026&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物申报制单(出口)&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000002&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000003&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000004&quot;,&#xd;
          &quot;name&quot;: &quot;查看&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000005&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000006&quot;,&#xd;
          &quot;name&quot;: &quot;下载&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000007&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000014&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000015&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物报关单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000002&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000003&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000005&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000006&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;减免税制单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000002&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000003&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000005&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;减免税申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0011-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;经营分析&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0011-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;经营分析&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0011-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysRole/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建组织" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;status&quot;: 1,&#xd;
  &quot;type&quot;: &quot;1&quot;,&#xd;
  &quot;parentId&quot;: &quot;${standardOrganizationIdone}&quot;,&#xd;
  &quot;name&quot;: &quot;${icCardNo}&quot;,&#xd;
  &quot;remark&quot;: &quot;组织备注&quot;,&#xd;
  &quot;originalName&quot;: &quot;${idcode}&quot;,&#xd;
  &quot;globalName&quot;: &quot;${idcode}&quot;,&#xd;
  &quot;originalGlobalName&quot;: &quot;${idcode}&quot;,&#xd;
  &quot;standardOrganizationUnitId&quot;: &quot;${standardOrganizationIdone}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/organizationUnit/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询角色" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;paging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10&#xd;
  },&#xd;
  &quot;query&quot;: {&#xd;
    &quot;where&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;organization_unit_id&quot;,&#xd;
        &quot;value&quot;: &quot;${standardOrganizationIdone}&quot;&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/membership/role/query</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">authorizationObjectId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.[0].authorizationObjectId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建员工" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;&quot;,&#xd;
  &quot;status&quot;: &quot;1&quot;,&#xd;
  &quot;organizationId&quot;: &quot;${standardOrganizationIdone}&quot;,&#xd;
  &quot;standardOrganizationId&quot;: &quot;${standardOrganizationIdone}&quot;,&#xd;
  &quot;standardOrganizationName&quot;: &quot;${standardOrganizationNameone}&quot;,//最高组织名称&#xd;
  &quot;loginName&quot;: &quot;${operCusRegcode}&quot;,//账号&#xd;
  &quot;password&quot;: &quot;123456&quot;,//密码&#xd;
  &quot;organizationName&quot;: &quot;${standardOrganizationNameone}&quot;,//&#xd;
  &quot;approve&quot;: 1,&#xd;
  &quot;roleId&quot;: [&#xd;
    &quot;${authorizationObjectId}&quot;&#xd;
  ],&#xd;
  &quot;name&quot;: &quot;发电房&quot;,//姓名&#xd;
  &quot;link&quot;: &quot;1345541&quot;//电话&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1906943542">新增员工成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${operCusRegcode} --rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${operCusRegcode}&quot;,&#xd;
// &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
  &quot;password&quot;: &quot;123456&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshTokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="退出事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa退出" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//通过当前用户的token退出&#xd;
	&quot;accessToken&quot;:&quot;${token}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/logout</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="769363145">成功退出</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="v10" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="myHost" elementType="Argument">
              <stringProp name="Argument.name">myHost</stringProp>
              <stringProp name="Argument.value">apis.v10.edge.customs.dev.amiintellect.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">开发</stringProp>
            </elementProp>
            <elementProp name="myPort" elementType="Argument">
              <stringProp name="Argument.name">myPort</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="myCoding" elementType="Argument">
              <stringProp name="Argument.name">myCoding</stringProp>
              <stringProp name="Argument.value">utf-8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamedec" elementType="Argument">
              <stringProp name="Argument.name">appnamedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.desc">货物申报</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypedec" elementType="Argument">
              <stringProp name="Argument.name">declareTypedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamebws" elementType="Argument">
              <stringProp name="Argument.name">appnamebws</stringProp>
              <stringProp name="Argument.value">bws</stringProp>
              <stringProp name="Argument.desc">保税物流</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypebws" elementType="Argument">
              <stringProp name="Argument.name">declareTypebws</stringProp>
              <stringProp name="Argument.value">bws_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameems" elementType="Argument">
              <stringProp name="Argument.name">appnameems</stringProp>
              <stringProp name="Argument.value">ems</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册</stringProp>
            </elementProp>
            <elementProp name="declareTypeems" elementType="Argument">
              <stringProp name="Argument.name">declareTypeems</stringProp>
              <stringProp name="Argument.value">nems_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamesas" elementType="Argument">
              <stringProp name="Argument.name">appnamesas</stringProp>
              <stringProp name="Argument.value">sas</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">海关特殊</stringProp>
            </elementProp>
            <elementProp name="declareTypesas" elementType="Argument">
              <stringProp name="Argument.name">declareTypesas</stringProp>
              <stringProp name="Argument.value">sas_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameeml" elementType="Argument">
              <stringProp name="Argument.name">appnameeml</stringProp>
              <stringProp name="Argument.value">eml</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册手册</stringProp>
            </elementProp>
            <elementProp name="declareTypeeml" elementType="Argument">
              <stringProp name="Argument.name">declareTypeeml</stringProp>
              <stringProp name="Argument.value">npts_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshz" elementType="Argument">
              <stringProp name="Argument.name">companyNameshz</stringProp>
              <stringProp name="Argument.value">hz_001</stringProp>
              <stringProp name="Argument.desc">公司名称</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNamesdec" elementType="Argument">
              <stringProp name="Argument.name">companyNamesdec</stringProp>
              <stringProp name="Argument.value">bgd001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshzs" elementType="Argument">
              <stringProp name="Argument.name">companyNameshzs</stringProp>
              <stringProp name="Argument.value">jc_test001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="operCusRegcode" elementType="Argument">
              <stringProp name="Argument.name">operCusRegcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(10,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">海关编码</stringProp>
            </elementProp>
            <elementProp name="sccdcode" elementType="Argument">
              <stringProp name="Argument.name">sccdcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(18,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">十八位信用代码</stringProp>
            </elementProp>
            <elementProp name="icCardNo" elementType="Argument">
              <stringProp name="Argument.name">icCardNo</stringProp>
              <stringProp name="Argument.value">${__RandomString(13,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="icCardname" elementType="Argument">
              <stringProp name="Argument.name">icCardname</stringProp>
              <stringProp name="Argument.value">${__RandomString(8,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">名称</stringProp>
            </elementProp>
            <elementProp name="idcode" elementType="Argument">
              <stringProp name="Argument.name">idcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(32,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">apis.develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">http://develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">http://develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">responseType</stringProp>
              <stringProp name="Header.value">blob</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 识别文件" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/识别文件.txt</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">filePathBG,filePathHZ</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV账号密码" enabled="true">
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/账号密码.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">login,password</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV进出口" enabled="true">
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/进出口.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">impexpMarkcds,appnames,declareTypes,companyNames</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="登陆事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成 RSA 加密的公钥和私钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数&#xd;
  &quot;nonce&quot;:&quot;959227&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/generateRsaKeyPair</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取默认的 RSA 公钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数获取公钥&#xd;
  &quot;nonce&quot;: &quot;955095&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/getRsaPublicKey</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SHA-1 方式加密" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;text&quot;: &quot;123456955095&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/encryptSha1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeysQ</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置" enabled="false">
            <stringProp name="TestPlan.comments">对密码进行加密</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;
import java.io.ByteArrayOutputStream;
import java.security.Key;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.Signature;
import java.security.interfaces.RSAPrivateKey;
import java.security.interfaces.RSAPublicKey;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
import java.util.HashMap;
import java.util.Map;
import javax.crypto.Cipher;
//获取公钥
String RSA_PUB_KEY=&quot;${getRsaPublicKeys}&quot;;
String KEY_ALGORITHM = &quot;RSA&quot;;
String SIGNATURE_ALGORITHM = &quot;MD5withRSA&quot;;
int MAX_ENCRYPT_BLOCK = 117;
int MAX_DECRYPT_BLOCK = 128;

public static byte[] decryptByPublicKey(byte[] encryptedData, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.DECRYPT_MODE, publicK);
        int inputLen = encryptedData.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段解密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_DECRYPT_BLOCK) {
                cache = cipher.doFinal(encryptedData, offSet, MAX_DECRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(encryptedData, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_DECRYPT_BLOCK;
        }
        byte[] decryptedData = out.toByteArray();
        out.close();
        return decryptedData;
    }

    public static byte[] encryptByPublicKey(byte[] data, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        // 对数据加密
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.ENCRYPT_MODE, publicK);
        int inputLen = data.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段加密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_ENCRYPT_BLOCK) {
                cache = cipher.doFinal(data, offSet, MAX_ENCRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(data, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_ENCRYPT_BLOCK;
        }
        byte[] encryptedData = out.toByteArray();
        out.close();
        return encryptedData;
    }
    //需要加密的用户密码
   //String str = &quot;idNum=633335199606143151&amp;name=蔺四十&amp;phone=17610010005&quot;;
   String str = &quot;${password}&quot;;
String result =&quot;&quot;;
try {
    result = Base64.encodeBase64String(encryptByPublicKey(str.getBytes(), RSA_PUB_KEY));
    System.out.println(result);
} catch (Exception e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
}
    
print(result);
vars.put(&quot;sign&quot;,result);
return result;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${login}&quot;,&#xd;
// &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
  &quot;password&quot;: &quot;${password}&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取登陆个人用户信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//根据token获取当前用户的个人信息&#xd;
  &quot;accessToken&quot;: &quot;${token}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/me</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">基本信息</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//用户id获取员工信息&#xd;
  &quot;id&quot;: &quot;${accountIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">员工所属报关行、组织、权限</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationNames</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织id" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accountId&quot;: &quot;${accountIds}&quot;,&#xd;
  &quot;organizationId&quot;: &quot;$.{organizationIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/accountOrganizationHistory/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIdsnow</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationUnitId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织名称" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/membership/organizationUnit/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织名称" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">projectname</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="识别事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="货物申报上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,  //&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;, //上传用户&#xd;
  &quot;appName&quot;: &quot;${appnamedec}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypedec}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;  //报关行id&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgiddec</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathdec</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathBG}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathBG}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">multipart/form-data</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgiddec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamedec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNamesdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathBG}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathBG}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">multipart/form-data</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgiddec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">way_bill</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamedec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNamesdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnamedec}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypedec}&quot;, //&#xd;
    &quot;inOutType&quot;: &quot;${impexpMarkcds}&quot;,  //进出口&#xd;
    &quot;entrustCompanyId&quot;: &quot;5c859d57-443c-44ad-928e-48c7ae802c0f&quot;, //委托单位&#xd;
    &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgiddec}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathdec}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
    &quot;source&quot;: &quot;1&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
    {&#xd;
    	&quot;name&quot;:&quot;运单文件&quot;,&#xd;
    	&quot;fileStatus&quot;:&quot;0&quot;&#xd;
    	}&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="流水号暂存表头" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;06|undefined&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;123&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: [&#xd;
      &quot;国际赛事&quot;,&#xd;
      &quot;特殊进出军工物资&quot;,&#xd;
      &quot;国际援助物资&quot;,&#xd;
      &quot;国际会议&quot;&#xd;
    ],&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;${pkgiddec}&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;tempSaveType&quot;: &quot;1&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;包/袋&quot;,&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;纸制或纤维板制盒/箱&quot;,&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//当前组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="635285210">修改成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="海关特殊区域上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypesas}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgidsas</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathsas</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgidsas}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathsas}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamesas}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;invtMakeManage&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgidsas}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathsas}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;importId&quot;: &quot;&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;运单文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="区外加工账册上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypeems}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgidems</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathems</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgidems}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathems}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnameems}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;invtMakeManage&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypeems}&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgidems}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathems}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;importId&quot;: &quot;&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="区外加工手册上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">	 &#xd;
{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypeeml}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgideml</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">patheml</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgideml}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${patheml}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnameeml}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;invtMakeManage&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypeeml}&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgideml}&quot;,&#xd;
    &quot;path&quot;: &quot;${patheml}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;importId&quot;: &quot;&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="保税物流上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypebws}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgidbws</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathbws</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgidbws}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathbws}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamebws}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;invtMakeManage&quot;: {&#xd;
      &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
      &quot;declareType&quot;: &quot;${declareTypebws}&quot;,&#xd;
      &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
      &quot;id&quot;: &quot;${pkgidbws}&quot;,&#xd;
      &quot;path&quot;: &quot;${pathbws}&quot;,&#xd;
      &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
      &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
      &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
      &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
      &quot;importId&quot;: &quot;&quot;,&#xd;
      &quot;agent&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;provider&quot;: &quot;&quot;,&#xd;
    &quot;nameFileList&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;发票文件&quot;,&#xd;
        &quot;fileStatus&quot;: &quot;0&quot;&#xd;
      }&#xd;
    ]&#xd;
 }</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="手动新增事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="货物申报手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;2|单价&quot;,&#xd;
    &quot;insurance&quot;: &quot;1|率&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;222222222222&quot;,&#xd;
    &quot;contractNo&quot;: &quot;333333333333333&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;CU0293&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;billNo&quot;: &quot;4444444444&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;HKD|港币&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;0.3&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;1&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;CNY|人民币&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;04|undefined&quot;,  //&#xd;
    &quot;grossWeight&quot;: &quot;12&quot;,&#xd;
    &quot;netWeight&quot;: &quot;12&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;6666666&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;1|通关单超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;specialFlag&quot;: [&#xd;
      &quot;国际赛事&quot;,&#xd;
      &quot;特殊进出军工物资&quot;,&#xd;
      &quot;国际援助物资&quot;&#xd;
    ],&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20200202&quot;,&#xd;
    &quot;BL&quot;: &quot;bl&quot;,&#xd;
    &quot;originalBoxTransportation&quot;: &quot;原箱运输&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,//来源（1：识别；2：手动新增；3：复制；4：）&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,  //进出口&#xd;
  &quot;tempSaveType&quot;: &quot;1&quot;, //暂存（1：表头；2：表体）&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,//上传客户名称&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;球状罐类&quot;,&#xd;
      &quot;code&quot;: &quot;04&quot;,&#xd;
      &quot;wId&quot;: &quot;3&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;包/袋&quot;,&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,  //组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//当前组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="635285210">修改成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bizidhead</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;${bizidhead}&quot;,   //流水号&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,   //进出口&#xd;
  &quot;tempSaveType&quot;: &quot;2&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,  //上传公司名称&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;refresh_type&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarCargoSize&quot;: &quot;&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;basicId&quot;: &quot;${bizidhead}&quot;,&#xd;
      &quot;reportElement&quot;: {&#xd;
        &#xd;
      },&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;packages&quot;: &quot;&quot;,&#xd;
      &quot;grossWeight&quot;: &quot;&quot;,&#xd;
      &quot;netWeight&quot;: &quot;&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="635285210">修改成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidhead}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 1,   //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidhead}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="635285210">修改成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表体生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;&quot;,   //流水号&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,   //进出口&#xd;
  &quot;tempSaveType&quot;: &quot;2&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,  //上传公司名称&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;refresh_type&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarCargoSize&quot;: &quot;&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;basicId&quot;: &quot;BG2020050700005&quot;,&#xd;
      &quot;reportElement&quot;: {&#xd;
        &#xd;
      },&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;packages&quot;: &quot;&quot;,&#xd;
      &quot;grossWeight&quot;: &quot;&quot;,&#xd;
      &quot;netWeight&quot;: &quot;&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="635285210">修改成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交表体生成的流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bizidlist</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表体流水号暂存表头" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;06|undefined&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;123&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: [&#xd;
      &quot;国际赛事&quot;,&#xd;
      &quot;特殊进出军工物资&quot;,&#xd;
      &quot;国际援助物资&quot;,&#xd;
      &quot;国际会议&quot;&#xd;
    ],&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;${bizidlist}&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;tempSaveType&quot;: &quot;1&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;包/袋&quot;,&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;纸制或纤维板制盒/箱&quot;,&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//当前组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="635285210">修改成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bizidtwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 1,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="635285210">修改成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="驳回" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 3,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="635285210">修改成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="再次提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 1,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="635285210">修改成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${bizidtwo}&quot;, //流水号&#xd;
  &quot;source&quot;: &quot;2&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/selectOne</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 2,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="635285210">修改成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="海关特殊区域手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">headsasid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listsaszero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号新增表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号新增表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listsaszero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listsaszero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypesasone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listsasone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypesasone},&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listsasone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypesastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypesastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdsastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdsastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 3,&#xd;
  &quot;values&quot;: ${invtHeadTypesastwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdsastwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;2341244&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdsastwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypesastwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,  //流水号&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,  //进出口类型&#xd;
  &quot;decType&quot;: &quot;1&quot;,   //&#xd;
  &quot;dclcusTypecd&quot;: &quot;1&quot;,  //&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;  //模块&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/sas/sasInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="加工账册手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">heademsid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listemszero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listemszero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemszero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listemsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypeemsone},&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemsone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="invtlisttypeemstwo--表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="invtHeadTypeemstwo--表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypeemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="impexpMarkcdemstwo--进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="mtpckEndprdMarkcdemstwo---成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;values&quot;: ${invtHeadTypeemstwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdemstwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;412341243414&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdemstwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypeemstwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,  //流水号&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,  //进出口类型&#xd;
  &quot;decType&quot;: &quot;1&quot;,   //&#xd;
  &quot;dclcusTypecd&quot;: &quot;1&quot;,  //&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;  //模块&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/ems/emsInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="加工手册手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
 &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;124312444443&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">heademlid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listemlzero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listemlzero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemlzero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemlone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listemlone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypeemlone},&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemlone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="表体-invtlisttypeemltwo" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="表头--invtHeadTypeemltwo" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypeemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="进出口--impexpMarkcdemltwo" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="成品、料件标志--mtpckEndprdMarkcdemltwo" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 3,&#xd;
  &quot;values&quot;: ${invtHeadTypeemltwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdemltwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;124312444443&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdemltwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypeemltwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;impexpMarkcd&quot;: &quot;E&quot;,&#xd;
  &quot;values&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;124312444443&quot;,&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;,&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,&#xd;
    &quot;decType&quot;: &quot;3&quot;,&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;id&quot;: &quot;SCHZ2020051300012&quot;&#xd;
  },&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;appName&quot;: &quot;eml&quot;,&#xd;
  &quot;id&quot;: &quot;SCHZ2020051300012&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/eml/emlInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="保税物流手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">headbwsid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号更改表头" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;,&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;bws2020050600128&quot;,&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,&#xd;
    &quot;decType&quot;: &quot;1&quot;,&#xd;
    &quot;rltInvtNo&quot;: &quot;333333&quot;,&#xd;
    &quot;rltPutrecNo&quot;: &quot;3333333&quot;,&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;45654671231&quot;,&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;rmk&quot;: &quot;撒地方备注&quot;,&#xd;
    &quot;id&quot;: &quot;${headbwsid}&quot;&#xd;
  },&#xd;
&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">headbwsid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listbwszero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listbwszero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listbwszero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypebwsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listbwsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypebwsone},&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listbwsone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypebwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypebwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdbwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdbwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 2,  //1.识别；2.手动新增&#xd;
  &quot;values&quot;: ${invtHeadTypebwstwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdbwstwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;2341244&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdbwstwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypebwstwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,  //1：；2：&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;  //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="驳回" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/rejectInvt</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypebwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypebwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdbwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdbwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,  //流水号&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,  //进出口类型&#xd;
  &quot;decType&quot;: &quot;1&quot;,   //&#xd;
  &quot;dclcusTypecd&quot;: &quot;1&quot;,  //&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;  //模块&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/sas/sasInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新建报关行事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建报关行" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;${icCardname}&quot;,//名称&#xd;
  &quot;operCusRegcode&quot;: &quot;${operCusRegcode}&quot;,//海关编码&#xd;
  &quot;sccd&quot;: &quot;${sccdcode}&quot;,//企业十八位信用代码&#xd;
  &quot;hdModel&quot;: 0,&#xd;
  &quot;type&quot;: 3,//新建公司类型&#xd;
  &quot;fileData&quot;: &quot;&quot;,&#xd;
  &quot;adminName&quot;: &quot;${icCardname}&quot;,//账号&#xd;
  &quot;clientNo&quot;: &quot;${operCusRegcode}&quot;,//客户端编号&#xd;
  &quot;icCardNo&quot;: &quot;${icCardNo}&quot;,//操作卡号&#xd;
  &quot;sendAddress&quot;: &quot;5671&quot;,&#xd;
  &quot;sendVirhost&quot;: &quot;/&quot;,&#xd;
  &quot;exchange&quot;: &quot;&quot;,&#xd;
  &quot;sendQuene&quot;: &quot;&quot;,&#xd;
  &quot;recvAddress&quot;: &quot;5671&quot;,&#xd;
  &quot;recvVirhost&quot;: &quot;/&quot;,&#xd;
  &quot;recvQuene&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysCustomsBrokerCore/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询报关行名称--${icCardname}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;paging&quot;: {&#xd;
    &quot;total&quot;: &quot;&quot;,&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysCustomsBrokerCore/queryAll</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bghname</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[0].name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${icCardname}&quot;,&#xd;
// &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
  &quot;password&quot;: &quot;123456&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshTokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//用户id获取员工信息&#xd;
  &quot;id&quot;: &quot;${accountIdone}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">员工所属报关行、组织、权限</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationNameone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建角色" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;&quot;,&#xd;
  &quot;status&quot;: &quot;1&quot;,&#xd;
  &quot;memberText&quot;: &quot;&quot;,&#xd;
  &quot;type&quot;: &quot;3&quot;,&#xd;
  &quot;organizationUnitId&quot;: &quot;${standardOrganizationIdone}&quot;,//&#xd;
  &quot;parentId&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,&#xd;
  &quot;name&quot;: &quot;测试001&quot;,&#xd;
  &quot;remark&quot;: &quot;测试角色&quot;,&#xd;
  &quot;permission&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;系统管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;字典表管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000101&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000102&quot;,&#xd;
          &quot;name&quot;: &quot;新增字典信息&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000103&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000104&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;字典表管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;商品预归类&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000003&quot;,&#xd;
          &quot;name&quot;: &quot;所有归类文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000004&quot;,&#xd;
          &quot;name&quot;: &quot;归类失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000005&quot;,&#xd;
          &quot;name&quot;: &quot;归类中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000006&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000007&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000008&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000010&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000011&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000012&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000013&quot;,&#xd;
          &quot;name&quot;: &quot;查看&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;商品智能预归类&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010200000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010100000002&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;申报要素库&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010200000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;团队管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001001&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001002&quot;,&#xd;
          &quot;name&quot;: &quot;新建企业&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001003&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001004&quot;,&#xd;
          &quot;name&quot;: &quot;重置密码&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;企业管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-020000002001&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-020000002004&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-020000002005&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;组织架构&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000003000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;角色权限&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;公众号管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;消息管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;推文管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;粉丝管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;岗位管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;海关特殊监管区域&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000012&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000013&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000014&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000017&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册报核&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000007&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000018&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;物流账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;一线一体化进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;二线进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;非报关进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;卡口登记货物&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;空车核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;先入区后报关&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000005&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000006&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000007&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;车辆管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000001&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000002&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000004&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000005&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000006&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000007&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000008&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-080000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税物流管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000018&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;物流账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;一线一体化进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000007&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000008&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000009&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;二线进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;非报关进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000007&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000008&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000009&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;卡口登记货物&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;空车核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000007&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000008&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000009&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;先入区后报关&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000005&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000006&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000007&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;车辆管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000001&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000002&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000004&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000005&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000006&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000007&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000008&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-080000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;物流账册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;区外加工贸易&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工账册管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000003&quot;,&#xd;
          &quot;name&quot;: &quot;已提交企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000004&quot;,&#xd;
          &quot;name&quot;: &quot;已申报企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000005&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000006&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000008&quot;,&#xd;
          &quot;name&quot;: &quot;新建企业&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000009&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000010&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000011&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000012&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000013&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000015&quot;,&#xd;
          &quot;name&quot;: &quot;已回执企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;企业资质申请&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000009&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000010&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000011&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000012&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000013&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000014&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000015&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000016&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册报核&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010700000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-020600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易手册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工手册管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建手册信息(列表)&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000011&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000012&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000013&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000014&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000017&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易手册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易手册报核&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;客户管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有客户&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000002&quot;,&#xd;
          &quot;name&quot;: &quot;OCR新增待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000003&quot;,&#xd;
          &quot;name&quot;: &quot;全部已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000004&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;高级搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;新增客户信息&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;修改信息&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;分配组织&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;导入客户&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;主页&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;企业基础信息&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;应用平台管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;报关行管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-050000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;字典管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000012&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000013&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000014&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000015&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物申报制单(进口)&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000016&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000018&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000019&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000020&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000021&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000022&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000023&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000024&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000025&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000026&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物申报制单(出口)&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000002&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000003&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000004&quot;,&#xd;
          &quot;name&quot;: &quot;查看&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000005&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000006&quot;,&#xd;
          &quot;name&quot;: &quot;下载&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000007&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000014&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000015&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物报关单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000002&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000003&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000005&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000006&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;减免税制单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000002&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000003&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000005&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;减免税申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0011-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;经营分析&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0011-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;经营分析&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0011-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysRole/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建组织" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;status&quot;: 1,&#xd;
  &quot;type&quot;: &quot;1&quot;,&#xd;
  &quot;parentId&quot;: &quot;${standardOrganizationIdone}&quot;,&#xd;
  &quot;name&quot;: &quot;${icCardNo}&quot;,&#xd;
  &quot;remark&quot;: &quot;组织备注&quot;,&#xd;
  &quot;originalName&quot;: &quot;${idcode}&quot;,&#xd;
  &quot;globalName&quot;: &quot;${idcode}&quot;,&#xd;
  &quot;originalGlobalName&quot;: &quot;${idcode}&quot;,&#xd;
  &quot;standardOrganizationUnitId&quot;: &quot;${standardOrganizationIdone}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/organizationUnit/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询角色" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;paging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10&#xd;
  },&#xd;
  &quot;query&quot;: {&#xd;
    &quot;where&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;organization_unit_id&quot;,&#xd;
        &quot;value&quot;: &quot;${standardOrganizationIdone}&quot;&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/membership/role/query</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">authorizationObjectId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.[0].authorizationObjectId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建员工" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;&quot;,&#xd;
  &quot;status&quot;: &quot;1&quot;,&#xd;
  &quot;organizationId&quot;: &quot;${standardOrganizationIdone}&quot;,&#xd;
  &quot;standardOrganizationId&quot;: &quot;${standardOrganizationIdone}&quot;,&#xd;
  &quot;standardOrganizationName&quot;: &quot;${standardOrganizationNameone}&quot;,//最高组织名称&#xd;
  &quot;loginName&quot;: &quot;${operCusRegcode}&quot;,//账号&#xd;
  &quot;password&quot;: &quot;123456&quot;,//密码&#xd;
  &quot;organizationName&quot;: &quot;${standardOrganizationNameone}&quot;,//&#xd;
  &quot;approve&quot;: 1,&#xd;
  &quot;roleId&quot;: [&#xd;
    &quot;${authorizationObjectId}&quot;&#xd;
  ],&#xd;
  &quot;name&quot;: &quot;发电房&quot;,//姓名&#xd;
  &quot;link&quot;: &quot;1345541&quot;//电话&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1906943542">新增员工成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${operCusRegcode} --rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${operCusRegcode}&quot;,&#xd;
// &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
  &quot;password&quot;: &quot;123456&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshTokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="退出事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa退出" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//通过当前用户的token退出&#xd;
	&quot;accessToken&quot;:&quot;${token}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/logout</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="769363145">成功退出</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="开发测试" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="myHost" elementType="Argument">
              <stringProp name="Argument.name">myHost</stringProp>
              <stringProp name="Argument.value">develop.edge.customs.dev.amiintellect.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">开发</stringProp>
            </elementProp>
            <elementProp name="myPort" elementType="Argument">
              <stringProp name="Argument.name">myPort</stringProp>
              <stringProp name="Argument.value">80</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="myCoding" elementType="Argument">
              <stringProp name="Argument.name">myCoding</stringProp>
              <stringProp name="Argument.value">utf-8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamedec" elementType="Argument">
              <stringProp name="Argument.name">appnamedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.desc">货物申报</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypedec" elementType="Argument">
              <stringProp name="Argument.name">declareTypedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamebws" elementType="Argument">
              <stringProp name="Argument.name">appnamebws</stringProp>
              <stringProp name="Argument.value">bws</stringProp>
              <stringProp name="Argument.desc">保税物流</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypebws" elementType="Argument">
              <stringProp name="Argument.name">declareTypebws</stringProp>
              <stringProp name="Argument.value">bws_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameems" elementType="Argument">
              <stringProp name="Argument.name">appnameems</stringProp>
              <stringProp name="Argument.value">ems</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册</stringProp>
            </elementProp>
            <elementProp name="declareTypeems" elementType="Argument">
              <stringProp name="Argument.name">declareTypeems</stringProp>
              <stringProp name="Argument.value">nems_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamesas" elementType="Argument">
              <stringProp name="Argument.name">appnamesas</stringProp>
              <stringProp name="Argument.value">sas</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">海关特殊</stringProp>
            </elementProp>
            <elementProp name="declareTypesas" elementType="Argument">
              <stringProp name="Argument.name">declareTypesas</stringProp>
              <stringProp name="Argument.value">sas_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameeml" elementType="Argument">
              <stringProp name="Argument.name">appnameeml</stringProp>
              <stringProp name="Argument.value">eml</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册手册</stringProp>
            </elementProp>
            <elementProp name="declareTypeeml" elementType="Argument">
              <stringProp name="Argument.name">declareTypeeml</stringProp>
              <stringProp name="Argument.value">npts_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshz" elementType="Argument">
              <stringProp name="Argument.name">companyNameshz</stringProp>
              <stringProp name="Argument.value">hz_001</stringProp>
              <stringProp name="Argument.desc">公司名称</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNamesdec" elementType="Argument">
              <stringProp name="Argument.name">companyNamesdec</stringProp>
              <stringProp name="Argument.value">bgd001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshzs" elementType="Argument">
              <stringProp name="Argument.name">companyNameshzs</stringProp>
              <stringProp name="Argument.value">jc_test001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="operCusRegcode" elementType="Argument">
              <stringProp name="Argument.name">operCusRegcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(10,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">海关编码</stringProp>
            </elementProp>
            <elementProp name="sccdcode" elementType="Argument">
              <stringProp name="Argument.name">sccdcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(18,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">十八位信用代码</stringProp>
            </elementProp>
            <elementProp name="icCardNo" elementType="Argument">
              <stringProp name="Argument.name">icCardNo</stringProp>
              <stringProp name="Argument.value">${__RandomString(13,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="icCardname" elementType="Argument">
              <stringProp name="Argument.name">icCardname</stringProp>
              <stringProp name="Argument.value">${__RandomString(8,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">名称</stringProp>
            </elementProp>
            <elementProp name="idcode" elementType="Argument">
              <stringProp name="Argument.name">idcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(32,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">apis.develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">http://develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">http://develop.edge.customs.dev.amiintellect.com</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">responseType</stringProp>
              <stringProp name="Header.value">blob</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 识别文件" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/识别文件.txt</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">filePathBG,filePathHZ</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV账号密码" enabled="true">
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/账号密码.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">login,password</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV进出口" enabled="true">
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/进出口.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">impexpMarkcds,appnames,declareTypes,companyNames</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="登陆事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成 RSA 加密的公钥和私钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数&#xd;
  &quot;nonce&quot;:&quot;959227&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/generateRsaKeyPair</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取默认的 RSA 公钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数获取公钥&#xd;
  &quot;nonce&quot;: &quot;955095&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/getRsaPublicKey</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SHA-1 方式加密" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;text&quot;: &quot;123456955095&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/encryptSha1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeysQ</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置" enabled="false">
            <stringProp name="TestPlan.comments">对密码进行加密</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;
import java.io.ByteArrayOutputStream;
import java.security.Key;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.Signature;
import java.security.interfaces.RSAPrivateKey;
import java.security.interfaces.RSAPublicKey;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
import java.util.HashMap;
import java.util.Map;
import javax.crypto.Cipher;
//获取公钥
String RSA_PUB_KEY=&quot;${getRsaPublicKeys}&quot;;
String KEY_ALGORITHM = &quot;RSA&quot;;
String SIGNATURE_ALGORITHM = &quot;MD5withRSA&quot;;
int MAX_ENCRYPT_BLOCK = 117;
int MAX_DECRYPT_BLOCK = 128;

public static byte[] decryptByPublicKey(byte[] encryptedData, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.DECRYPT_MODE, publicK);
        int inputLen = encryptedData.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段解密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_DECRYPT_BLOCK) {
                cache = cipher.doFinal(encryptedData, offSet, MAX_DECRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(encryptedData, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_DECRYPT_BLOCK;
        }
        byte[] decryptedData = out.toByteArray();
        out.close();
        return decryptedData;
    }

    public static byte[] encryptByPublicKey(byte[] data, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        // 对数据加密
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.ENCRYPT_MODE, publicK);
        int inputLen = data.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段加密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_ENCRYPT_BLOCK) {
                cache = cipher.doFinal(data, offSet, MAX_ENCRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(data, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_ENCRYPT_BLOCK;
        }
        byte[] encryptedData = out.toByteArray();
        out.close();
        return encryptedData;
    }
    //需要加密的用户密码
   //String str = &quot;idNum=633335199606143151&amp;name=蔺四十&amp;phone=17610010005&quot;;
   String str = &quot;${password}&quot;;
String result =&quot;&quot;;
try {
    result = Base64.encodeBase64String(encryptByPublicKey(str.getBytes(), RSA_PUB_KEY));
    System.out.println(result);
} catch (Exception e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
}
    
print(result);
vars.put(&quot;sign&quot;,result);
return result;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${login}&quot;,&#xd;
// &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
  &quot;password&quot;: &quot;${password}&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取登陆个人用户信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//根据token获取当前用户的个人信息&#xd;
  &quot;accessToken&quot;: &quot;${token}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/me</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">基本信息</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//用户id获取员工信息&#xd;
  &quot;id&quot;: &quot;${accountIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">员工所属报关行、组织、权限</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationNames</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织id" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accountId&quot;: &quot;${accountIds}&quot;,&#xd;
  &quot;organizationId&quot;: &quot;$.{organizationIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/accountOrganizationHistory/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIdsnow</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationUnitId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织名称" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/membership/organizationUnit/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织名称" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">projectname</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="事务控制器" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="入库" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;code&quot;: 0,&#xd;
  &quot;message&quot;: &quot;执行成功&quot;,&#xd;
  &quot;token&quot;: null,&#xd;
  &quot;id&quot;: &quot;BSHZ2020062800002&quot;,&#xd;
  &quot;companyName&quot;: &quot;中外运·敦豪保税仓储（北京）有限公司&quot;,&#xd;
  &quot;data&quot;: {&#xd;
    &quot;ocr_alarm&quot;: {&#xd;
      &quot;unfilled&quot;: 0,&#xd;
      &quot;difference&quot;: 0,&#xd;
      &quot;rule&quot;: 0&#xd;
    },&#xd;
    &quot;face_sheet_goods&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;invoice_file_goods&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;box_list_goods&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;goods_info&quot;: [&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;66.84&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2200,&#xd;
            2029,&#xd;
            25,&#xd;
            166&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;00473550&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            2041,&#xd;
            21,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 1,&#xd;
          &quot;position&quot;: [&#xd;
            325,&#xd;
            2041,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2029,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;3&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            2029,&#xd;
            21,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;22.28&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            2029,&#xd;
            25,&#xd;
            84&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2350,&#xd;
            25,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;09200092&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2362,&#xd;
            21,&#xd;
            137&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 2,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2362,&#xd;
            21,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2350,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;26.55&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2283,&#xd;
            2350,&#xd;
            25,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;26.55&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            2350,&#xd;
            25,&#xd;
            84&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            954,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;092000 93&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            966,&#xd;
            17,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 3,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            954,&#xd;
            21,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1579,&#xd;
            954,&#xd;
            25,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;25.07&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            941,&#xd;
            34,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;34.58&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2254,&#xd;
            1237,&#xd;
            25,&#xd;
            108&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;09210012”―&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1237,&#xd;
            33,&#xd;
            166&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 4,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1237,&#xd;
            25,&#xd;
            34&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1579,&#xd;
            1237,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;19&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1762,&#xd;
            1237,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;1.82&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2037,&#xd;
            1237,&#xd;
            25,&#xd;
            63&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1525,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;09908265&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1533,&#xd;
            25,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 5,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1533,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1525,&#xd;
            20,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;19.73&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            1525,&#xd;
            25,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;19.73&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            1525,&#xd;
            25,&#xd;
            76&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;3&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            1845,&#xd;
            25,&#xd;
            38&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;09920593&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1854,&#xd;
            25,&#xd;
            162&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 6,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1854,&#xd;
            21,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;CHE&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1845,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;39.45&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2258,&#xd;
            1845,&#xd;
            25,&#xd;
            108&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;13.15&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            1845,&#xd;
            25,&#xd;
            92&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2133,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;09923037&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2145,&#xd;
            21,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 7,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2145,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2133,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;22.14&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2283,&#xd;
            2133,&#xd;
            21,&#xd;
            83&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;22.14&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            2133,&#xd;
            21,&#xd;
            80&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;14&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            2412,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;09992731&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2425,&#xd;
            25,&#xd;
            137&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 8,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2425,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2425,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;846.44&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2245,&#xd;
            2412,&#xd;
            33,&#xd;
            121&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;60.46&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            2412,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            945,&#xd;
            30,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;B0198110&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            958,&#xd;
            25,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 9,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            958,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            958,&#xd;
            21,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;24.92&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            945,&#xd;
            30,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;24.92&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2000,&#xd;
            945,&#xd;
            30,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1237,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;B0505889&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1250,&#xd;
            25,&#xd;
            166&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 10,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1250,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1237,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;98.80&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2279,&#xd;
            1237,&#xd;
            25,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;98.80&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2000,&#xd;
            1237,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1558,&#xd;
            21,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;B3001262&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1570,&#xd;
            25,&#xd;
            166&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 11,&#xd;
          &quot;position&quot;: [&#xd;
            300,&#xd;
            1570,&#xd;
            25,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;DEU&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1558,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;183.19&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2266,&#xd;
            1558,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;183.19&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            1558,&#xd;
            25,&#xd;
            92&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1845,&#xd;
            21,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;B30C1264&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1858,&#xd;
            25,&#xd;
            154&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 12,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1858,&#xd;
            25,&#xd;
            71&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;DEU&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1845,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;709.16&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2250,&#xd;
            1845,&#xd;
            25,&#xd;
            120&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;709.16&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            1845,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2133,&#xd;
            21,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 13,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2145,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;B3001343&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            2145,&#xd;
            25,&#xd;
            179&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            2133,&#xd;
            21,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;170.79&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            2133,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;170.79&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            2133,&#xd;
            21,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;1615&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2254,&#xd;
            2412,&#xd;
            33,&#xd;
            121&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;B3001357&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2433,&#xd;
            25,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 14,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2433,&#xd;
            21,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1575,&#xd;
            2425,&#xd;
            20,&#xd;
            75&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            2425,&#xd;
            20,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;161.51&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2016,&#xd;
            2412,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            2675,&#xd;
            20,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 15,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2687,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;BCO04866F&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            2687,&#xd;
            21,&#xd;
            162&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;ASM&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1595,&#xd;
            2675,&#xd;
            20,&#xd;
            59&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;88.16&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2291,&#xd;
            2675,&#xd;
            20,&#xd;
            79&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            958,&#xd;
            25,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;L1240098&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            970,&#xd;
            21,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 16,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            970,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;GBR&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            958,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;143.50&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2254,&#xd;
            958,&#xd;
            25,&#xd;
            108&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;143.50&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            958,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1245,&#xd;
            17,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 17,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1254,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;V0413535&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1254,&#xd;
            29,&#xd;
            179&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1245,&#xd;
            21,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;415.50&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            1245,&#xd;
            25,&#xd;
            121&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;207.75&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1983,&#xd;
            1245,&#xd;
            30,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;8&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1533,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO690672&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1533,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 18,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1545,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1533,&#xd;
            25,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;537.68&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1533,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;67.21&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            1533,&#xd;
            25,&#xd;
            80&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;126.90&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2250,&#xd;
            1920,&#xd;
            25,&#xd;
            116&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N0680676&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1929,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 19,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1929,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1566,&#xd;
            1920,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1920,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;63.45&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            1920,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;10&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            2208,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO770338&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2220,&#xd;
            25,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 20,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2208,&#xd;
            29,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            2208,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;2219.00&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            2208,&#xd;
            25,&#xd;
            129&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;221.90&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1991,&#xd;
            2208,&#xd;
            25,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N0770358&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            958,&#xd;
            21,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 21,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            958,&#xd;
            21,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1595,&#xd;
            958,&#xd;
            25,&#xd;
            55&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;310.57&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            958,&#xd;
            21,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;310.57&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            958,&#xd;
            21,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            1245,&#xd;
            21,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO770546&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            1245,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 22,&#xd;
          &quot;position&quot;: [&#xd;
            325,&#xd;
            1245,&#xd;
            21,&#xd;
            41&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1570,&#xd;
            1245,&#xd;
            25,&#xd;
            105&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;525.41&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            1245,&#xd;
            21,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;525.41&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2000,&#xd;
            1245,&#xd;
            21,&#xd;
            112&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            1529,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO774067&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            1529,&#xd;
            25,&#xd;
            171&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 23,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1529,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;AUS&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1529,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;406.42&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            1529,&#xd;
            25,&#xd;
            105&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;406.42&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1995,&#xd;
            1529,&#xd;
            25,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO775177&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            1816,&#xd;
            21,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 24,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1824,&#xd;
            21,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1595,&#xd;
            1816,&#xd;
            21,&#xd;
            55&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;906.057&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2250,&#xd;
            1816,&#xd;
            25,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;181.21&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2016,&#xd;
            1816,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;242.93&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            2100,&#xd;
            29,&#xd;
            105&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO775325&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2100,&#xd;
            37,&#xd;
            191&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 25,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2100,&#xd;
            29,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1595,&#xd;
            2100,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            2100,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;24293&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2000,&#xd;
            2100,&#xd;
            25,&#xd;
            112&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;479.37&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            2391,&#xd;
            25,&#xd;
            105&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO776052&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2391,&#xd;
            25,&#xd;
            179&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 26,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2391,&#xd;
            21,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2029,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1783,&#xd;
            2391,&#xd;
            25,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;479.37&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            2391,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            962,&#xd;
            25,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NOT77410&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            962,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 27,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            962,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;AUS&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            962,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;503.27&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            962,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;503.27&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            962,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1216,&#xd;
            21,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO780130&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1216,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 28,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1216,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1216,&#xd;
            29,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;266.33&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1216,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;266.33&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            1216,&#xd;
            21,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;4&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            1604,&#xd;
            21,&#xd;
            38&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO781007&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1604,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 29,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1604,&#xd;
            21,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1604,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;498.36&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1604,&#xd;
            21,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;124.59&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            1604,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1891,&#xd;
            21,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO790141&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1891,&#xd;
            21,&#xd;
            162&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 30,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1900,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1891,&#xd;
            21,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;29.95&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1891,&#xd;
            17,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;29.95&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            1891,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2175,&#xd;
            20,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050103&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2183,&#xd;
            25,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 31,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2183,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2175,&#xd;
            25,&#xd;
            63&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;249.28&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2245,&#xd;
            2175,&#xd;
            25,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;249.28&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1987,&#xd;
            2175,&#xd;
            20,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;825.63&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2266,&#xd;
            2462,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050115&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            445,&#xd;
            2462,&#xd;
            25,&#xd;
            159&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 32,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2462,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2462,&#xd;
            25,&#xd;
            63&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;3&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2462,&#xd;
            25,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;275.21&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1991,&#xd;
            2462,&#xd;
            25,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            962,&#xd;
            21,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050119&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            962,&#xd;
            25,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 33,&#xd;
          &quot;position&quot;: [&#xd;
            308,&#xd;
            962,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            962,&#xd;
            25,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;238.27&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            962,&#xd;
            21,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;239.27&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            962,&#xd;
            29,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1250,&#xd;
            20,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050121&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1250,&#xd;
            25,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 34,&#xd;
          &quot;position&quot;: [&#xd;
            304,&#xd;
            1250,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1250,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;206.88&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1250,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;206.88&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1991,&#xd;
            1250,&#xd;
            25,&#xd;
            109&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1537,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050126&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1537,&#xd;
            25,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 35,&#xd;
          &quot;position&quot;: [&#xd;
            287,&#xd;
            1537,&#xd;
            25,&#xd;
            75&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1537,&#xd;
            21,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;213.47&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            1537,&#xd;
            25,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;213.47&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1991,&#xd;
            1537,&#xd;
            21,&#xd;
            109&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            1824,&#xd;
            21,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050145&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1824,&#xd;
            21,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 36,&#xd;
          &quot;position&quot;: [&#xd;
            308,&#xd;
            1824,&#xd;
            21,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1824,&#xd;
            21,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;486.42&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1824,&#xd;
            21,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;243.21&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            1824,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            2108,&#xd;
            25,&#xd;
            330&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050152&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            2108,&#xd;
            25,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 37,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2108,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2108,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;425.46&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            2108,&#xd;
            25,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050157 LuminaHollowCathode2Lamp-Pb&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            2400,&#xd;
            29,&#xd;
            720&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 38,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2400,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2400,&#xd;
            20,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;1519.60&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2225,&#xd;
            2387,&#xd;
            38,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;303.92&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            2387,&#xd;
            29,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            962,&#xd;
            25,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050173&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            962,&#xd;
            25,&#xd;
            171&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 39,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            962,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            962,&#xd;
            25,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;297.49&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            962,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;297.49&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            962,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1250,&#xd;
            20,&#xd;
            34&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N61C1799&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1250,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 40,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1250,&#xd;
            25,&#xd;
            38&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1250,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;30.14&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2279,&#xd;
            1250,&#xd;
            25,&#xd;
            83&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;15.07&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            1250,&#xd;
            25,&#xd;
            80&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1570,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N6121002&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1570,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 41,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1570,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1570,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;12.47&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2283,&#xd;
            1570,&#xd;
            25,&#xd;
            83&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;12.47&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            1570,&#xd;
            25,&#xd;
            80&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1958,&#xd;
            21,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NG62C0119&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1958,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 42,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1958,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1958,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;237.38&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            1958,&#xd;
            21,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;143.69&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1991,&#xd;
            1958,&#xd;
            25,&#xd;
            113&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            2212,&#xd;
            21,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N6356478&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2212,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 43,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2212,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            2212,&#xd;
            21,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;20.11&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2279,&#xd;
            2212,&#xd;
            25,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;20.11&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            2212,&#xd;
            25,&#xd;
            84&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            962,&#xd;
            25,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 44,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            975,&#xd;
            25,&#xd;
            288&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            962,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;158.66&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2250,&#xd;
            962,&#xd;
            25,&#xd;
            116&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;11866&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            962,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;0&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1283,&#xd;
            17,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N8152372&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            1283,&#xd;
            25,&#xd;
            142&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 45,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1283,&#xd;
            29,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1283,&#xd;
            21,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;1309.44&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2225,&#xd;
            1283,&#xd;
            25,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;654.72&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1987,&#xd;
            1283,&#xd;
            25,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            1412,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N8152373&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1412,&#xd;
            25,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 46,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1412,&#xd;
            29,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1412,&#xd;
            29,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;408.41&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2245,&#xd;
            1412,&#xd;
            25,&#xd;
            121&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;408.41&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            1412,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;3&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1541,&#xd;
            21,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N8152378&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1550,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 47,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1550,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1541,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;742.83&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2266,&#xd;
            1541,&#xd;
            21,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;742.83&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            1541,&#xd;
            21,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            1670,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N8162472N9301357&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1683,&#xd;
            121,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 48,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1683,&#xd;
            21,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1670,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;257.18&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2245,&#xd;
            1670,&#xd;
            25,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;257.18&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            1670,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            1804,&#xd;
            20,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 49,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1804,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1595,&#xd;
            1804,&#xd;
            20,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;75.88&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2283,&#xd;
            1804,&#xd;
            20,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;75.88&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            1804,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;9.00&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2304,&#xd;
            2191,&#xd;
            21,&#xd;
            71&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9302783&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            2200,&#xd;
            25,&#xd;
            171&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 50,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            2191,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;ASM&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            2191,&#xd;
            21,&#xd;
            59&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;4&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2191,&#xd;
            17,&#xd;
            37&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;2.25&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            2191,&#xd;
            21,&#xd;
            88&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;12&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2475,&#xd;
            25,&#xd;
            41&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9302945&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            2487,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 51,&#xd;
          &quot;position&quot;: [&#xd;
            325,&#xd;
            2487,&#xd;
            25,&#xd;
            33&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1595,&#xd;
            2475,&#xd;
            25,&#xd;
            55&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;160.44&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            2475,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;3.37&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            2475,&#xd;
            20,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;6&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            958,&#xd;
            21,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 52,&#xd;
          &quot;position&quot;: [&#xd;
            308,&#xd;
            966,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9303420&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            966,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;ASM&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1579,&#xd;
            958,&#xd;
            25,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;42.24&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            958,&#xd;
            21,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;7.04&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2037,&#xd;
            958,&#xd;
            21,&#xd;
            63&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;6&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            1279,&#xd;
            21,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9303421&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1291,&#xd;
            21,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 53,&#xd;
          &quot;position&quot;: [&#xd;
            308,&#xd;
            1291,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1279,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;38.76&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            1279,&#xd;
            21,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;6.46&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2037,&#xd;
            1279,&#xd;
            25,&#xd;
            63&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;12&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1762,&#xd;
            1600,&#xd;
            20,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9303442&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1612,&#xd;
            21,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 54,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1612,&#xd;
            21,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1600,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;126.96&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1600,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;10.58&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            1600,&#xd;
            20,&#xd;
            76&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;10&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            1920,&#xd;
            21,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9306067&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1929,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 55,&#xd;
          &quot;position&quot;: [&#xd;
            308,&#xd;
            1929,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1920,&#xd;
            21,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;1207.30&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            1920,&#xd;
            25,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;120.73&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            1920,&#xd;
            25,&#xd;
            92&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2204,&#xd;
            25,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9306112&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2216,&#xd;
            25,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 56,&#xd;
          &quot;position&quot;: [&#xd;
            308,&#xd;
            2216,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2204,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;180.53&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2250,&#xd;
            2204,&#xd;
            25,&#xd;
            120&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;180.53&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            2204,&#xd;
            21,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            2458,&#xd;
            25,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9306220&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2458,&#xd;
            29,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 57,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2470,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2458,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;11.98&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2283,&#xd;
            2458,&#xd;
            25,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;11.98&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2029,&#xd;
            2458,&#xd;
            29,&#xd;
            75&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            958,&#xd;
            21,&#xd;
            38&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9307005&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            970,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 58,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            970,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            958,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;1135.90&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            958,&#xd;
            25,&#xd;
            129&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;667.95&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1991,&#xd;
            958,&#xd;
            25,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            1250,&#xd;
            25,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9307832&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1250,&#xd;
            29,&#xd;
            179&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 59,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1250,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;DEU&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1250,&#xd;
            20,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;320.84&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2250,&#xd;
            1241,&#xd;
            29,&#xd;
            120&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;320.811&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2016,&#xd;
            1241,&#xd;
            25,&#xd;
            92&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1533,&#xd;
            25,&#xd;
            37&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9308801&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1545,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 60,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1545,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;GBR&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1533,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;335.64&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            1533,&#xd;
            25,&#xd;
            105&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;167.82&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            1533,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1783,&#xd;
            1820,&#xd;
            21,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N5316549&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            1820,&#xd;
            34,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 61,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1829,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;ASM&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1820,&#xd;
            25,&#xd;
            59&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;272.67&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            1820,&#xd;
            25,&#xd;
            105&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;272.67&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            1820,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            2104,&#xd;
            21,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 62,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            2116,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;WE021816&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            2116,&#xd;
            25,&#xd;
            162&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;CAN&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            2104,&#xd;
            25,&#xd;
            63&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;480.86&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            2104,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;240.43&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2016,&#xd;
            2104,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      }&#xd;
    ],&#xd;
    &quot;attached_info&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;different_info&quot;: {&#xd;
      &quot;basic&quot;: &quot;&quot;,&#xd;
      &quot;goods&quot;: {&#xd;
        &#xd;
      }&#xd;
    },&#xd;
    &quot;contract_goods&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;container_info&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;complete&quot;: 100,&#xd;
    &quot;basic_info&quot;: {&#xd;
      &quot;origin&quot;: {&#xd;
        &quot;content&quot;: &quot;US&quot;,&#xd;
        &quot;position&quot;: [&#xd;
          1587,&#xd;
          2029,&#xd;
          25,&#xd;
          58&#xd;
        ],&#xd;
        &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
        &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
        &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;origin_certificate&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;way_info&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;companyName&quot;: &quot;中外运·敦豪保税仓储（北京）有限公司&quot;,&#xd;
    &quot;declaration_info&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;file_info&quot;: {&#xd;
      &quot;invoice_file&quot;: [&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;path&quot;: &quot;/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002&quot;,&#xd;
  &quot;customs_broker_id&quot;: &quot;000000001&quot;,&#xd;
  &quot;declare_type&quot;: &quot;bws_inv&quot;,&#xd;
  &quot;app_name&quot;: &quot;bws&quot;,&#xd;
  &quot;in_out_type&quot;: &quot;I&quot;,&#xd;
  &quot;overseas_consignor_en_name&quot;: &quot;泊金埃尔默企业管理（上海）有限公司&quot;,&#xd;
  &quot;project_id&quot;: &quot;8441c9c1e3f2407db4694721266c8709&quot;,&#xd;
  &quot;account_id&quot;: &quot;f29a9166939649eb81759c020e14ed96&quot;,&#xd;
  &quot;logger_record_path&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/detect_image/callback.json&quot;,&#xd;
  &quot;template_id&quot;: &quot;&quot;,&#xd;
  &quot;provider&quot;: &quot;泊金埃尔默企业管理（上海）有限公司&quot;,&#xd;
  &quot;error_info&quot;: [&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrTouchingList/test2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="test测试" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="myHost" elementType="Argument">
              <stringProp name="Argument.name">myHost</stringProp>
              <stringProp name="Argument.value">rpa.test.anjie.superlucy.net</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">开发</stringProp>
            </elementProp>
            <elementProp name="myPort" elementType="Argument">
              <stringProp name="Argument.name">myPort</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="myCoding" elementType="Argument">
              <stringProp name="Argument.name">myCoding</stringProp>
              <stringProp name="Argument.value">utf-8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamedec" elementType="Argument">
              <stringProp name="Argument.name">appnamedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.desc">货物申报</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypedec" elementType="Argument">
              <stringProp name="Argument.name">declareTypedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamebws" elementType="Argument">
              <stringProp name="Argument.name">appnamebws</stringProp>
              <stringProp name="Argument.value">bws</stringProp>
              <stringProp name="Argument.desc">保税物流</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypebws" elementType="Argument">
              <stringProp name="Argument.name">declareTypebws</stringProp>
              <stringProp name="Argument.value">bws_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameems" elementType="Argument">
              <stringProp name="Argument.name">appnameems</stringProp>
              <stringProp name="Argument.value">ems</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册</stringProp>
            </elementProp>
            <elementProp name="declareTypeems" elementType="Argument">
              <stringProp name="Argument.name">declareTypeems</stringProp>
              <stringProp name="Argument.value">nems_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamesas" elementType="Argument">
              <stringProp name="Argument.name">appnamesas</stringProp>
              <stringProp name="Argument.value">sas</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">海关特殊</stringProp>
            </elementProp>
            <elementProp name="declareTypesas" elementType="Argument">
              <stringProp name="Argument.name">declareTypesas</stringProp>
              <stringProp name="Argument.value">sas_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameeml" elementType="Argument">
              <stringProp name="Argument.name">appnameeml</stringProp>
              <stringProp name="Argument.value">eml</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册手册</stringProp>
            </elementProp>
            <elementProp name="declareTypeeml" elementType="Argument">
              <stringProp name="Argument.name">declareTypeeml</stringProp>
              <stringProp name="Argument.value">npts_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshz" elementType="Argument">
              <stringProp name="Argument.name">companyNameshz</stringProp>
              <stringProp name="Argument.value">hz_001</stringProp>
              <stringProp name="Argument.desc">公司名称</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNamesdec" elementType="Argument">
              <stringProp name="Argument.name">companyNamesdec</stringProp>
              <stringProp name="Argument.value">bgd001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshzs" elementType="Argument">
              <stringProp name="Argument.name">companyNameshzs</stringProp>
              <stringProp name="Argument.value">jc_test001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="operCusRegcode" elementType="Argument">
              <stringProp name="Argument.name">operCusRegcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(10,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sccdcode" elementType="Argument">
              <stringProp name="Argument.name">sccdcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(18,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="icCardNo" elementType="Argument">
              <stringProp name="Argument.name">icCardNo</stringProp>
              <stringProp name="Argument.value">${__RandomString(13,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="icCardname" elementType="Argument">
              <stringProp name="Argument.name">icCardname</stringProp>
              <stringProp name="Argument.value">${__RandomString(8,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="idcode" elementType="Argument">
              <stringProp name="Argument.name">idcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(32,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">rpa.test.anjie.superlucy.net</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">http://rpa.test.anjie.superlucy.net</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">http://rpa.test.anjie.superlucy.net</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">responseType</stringProp>
              <stringProp name="Header.value">blob</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 识别文件" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/识别文件.txt</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">filePathBG,filePathHZ</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV账号密码" enabled="true">
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/账号密码.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">login,password</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV进出口" enabled="true">
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/进出口.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">impexpMarkcds,appnames,declareTypes,companyNames</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="登陆事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成 RSA 加密的公钥和私钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数&#xd;
  &quot;nonce&quot;:&quot;959227&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/generateRsaKeyPair</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取默认的 RSA 公钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数获取公钥&#xd;
  &quot;nonce&quot;: &quot;955095&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/getRsaPublicKey</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SHA-1 方式加密" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;text&quot;: &quot;123456955095&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/encryptSha1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeysQ</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置" enabled="false">
            <stringProp name="TestPlan.comments">对密码进行加密</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;
import java.io.ByteArrayOutputStream;
import java.security.Key;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.Signature;
import java.security.interfaces.RSAPrivateKey;
import java.security.interfaces.RSAPublicKey;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
import java.util.HashMap;
import java.util.Map;
import javax.crypto.Cipher;
//获取公钥
String RSA_PUB_KEY=&quot;${getRsaPublicKeys}&quot;;
String KEY_ALGORITHM = &quot;RSA&quot;;
String SIGNATURE_ALGORITHM = &quot;MD5withRSA&quot;;
int MAX_ENCRYPT_BLOCK = 117;
int MAX_DECRYPT_BLOCK = 128;

public static byte[] decryptByPublicKey(byte[] encryptedData, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.DECRYPT_MODE, publicK);
        int inputLen = encryptedData.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段解密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_DECRYPT_BLOCK) {
                cache = cipher.doFinal(encryptedData, offSet, MAX_DECRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(encryptedData, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_DECRYPT_BLOCK;
        }
        byte[] decryptedData = out.toByteArray();
        out.close();
        return decryptedData;
    }

    public static byte[] encryptByPublicKey(byte[] data, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        // 对数据加密
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.ENCRYPT_MODE, publicK);
        int inputLen = data.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段加密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_ENCRYPT_BLOCK) {
                cache = cipher.doFinal(data, offSet, MAX_ENCRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(data, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_ENCRYPT_BLOCK;
        }
        byte[] encryptedData = out.toByteArray();
        out.close();
        return encryptedData;
    }
    //需要加密的用户密码
   //String str = &quot;idNum=633335199606143151&amp;name=蔺四十&amp;phone=17610010005&quot;;
   String str = &quot;${password}&quot;;
String result =&quot;&quot;;
try {
    result = Base64.encodeBase64String(encryptByPublicKey(str.getBytes(), RSA_PUB_KEY));
    System.out.println(result);
} catch (Exception e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
}
    
print(result);
vars.put(&quot;sign&quot;,result);
return result;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
//  &quot;loginName&quot;: &quot;${login}&quot;,&#xd;
  &quot;loginName&quot;: &quot;shudalong2&quot;,&#xd;
  &quot;password&quot;: &quot;123456&quot;,&#xd;
   //账号密码&#xd;
//  &quot;password&quot;: &quot;${password}&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取登陆个人用户信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//根据token获取当前用户的个人信息&#xd;
  &quot;accessToken&quot;: &quot;${token}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/me</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">基本信息</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//用户id获取员工信息&#xd;
  &quot;id&quot;: &quot;${accountIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">员工所属报关行、组织、权限</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationNames</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织id" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accountId&quot;: &quot;${accountIds}&quot;,&#xd;
  &quot;organizationId&quot;: &quot;$.{organizationIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/accountOrganizationHistory/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIdsnow</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationUnitId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织名称" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/membership/organizationUnit/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织名称" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">projectname</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="事务控制器" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="入库" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;code&quot;: 0,&#xd;
  &quot;message&quot;: &quot;执行成功&quot;,&#xd;
  &quot;token&quot;: null,&#xd;
  &quot;id&quot;: &quot;BSHZ2020062800002&quot;,&#xd;
  &quot;companyName&quot;: &quot;中外运·敦豪保税仓储（北京）有限公司&quot;,&#xd;
  &quot;data&quot;: {&#xd;
    &quot;ocr_alarm&quot;: {&#xd;
      &quot;unfilled&quot;: 0,&#xd;
      &quot;difference&quot;: 0,&#xd;
      &quot;rule&quot;: 0&#xd;
    },&#xd;
    &quot;face_sheet_goods&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;invoice_file_goods&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;box_list_goods&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;goods_info&quot;: [&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;66.84&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2200,&#xd;
            2029,&#xd;
            25,&#xd;
            166&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;00473550&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            2041,&#xd;
            21,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 1,&#xd;
          &quot;position&quot;: [&#xd;
            325,&#xd;
            2041,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2029,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;3&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            2029,&#xd;
            21,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;22.28&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            2029,&#xd;
            25,&#xd;
            84&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2350,&#xd;
            25,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;09200092&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2362,&#xd;
            21,&#xd;
            137&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 2,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2362,&#xd;
            21,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2350,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;26.55&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2283,&#xd;
            2350,&#xd;
            25,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;26.55&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            2350,&#xd;
            25,&#xd;
            84&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            954,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;092000 93&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            966,&#xd;
            17,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 3,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            954,&#xd;
            21,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1579,&#xd;
            954,&#xd;
            25,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;25.07&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            941,&#xd;
            34,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;34.58&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2254,&#xd;
            1237,&#xd;
            25,&#xd;
            108&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;09210012”―&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1237,&#xd;
            33,&#xd;
            166&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 4,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1237,&#xd;
            25,&#xd;
            34&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1579,&#xd;
            1237,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;19&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1762,&#xd;
            1237,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;1.82&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2037,&#xd;
            1237,&#xd;
            25,&#xd;
            63&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1525,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;09908265&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1533,&#xd;
            25,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 5,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1533,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1525,&#xd;
            20,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;19.73&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            1525,&#xd;
            25,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;19.73&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            1525,&#xd;
            25,&#xd;
            76&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;3&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            1845,&#xd;
            25,&#xd;
            38&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;09920593&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1854,&#xd;
            25,&#xd;
            162&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 6,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1854,&#xd;
            21,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;CHE&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1845,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;39.45&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2258,&#xd;
            1845,&#xd;
            25,&#xd;
            108&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;13.15&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            1845,&#xd;
            25,&#xd;
            92&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2133,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;09923037&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2145,&#xd;
            21,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 7,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2145,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2133,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;22.14&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2283,&#xd;
            2133,&#xd;
            21,&#xd;
            83&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;22.14&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            2133,&#xd;
            21,&#xd;
            80&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;14&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            2412,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;09992731&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2425,&#xd;
            25,&#xd;
            137&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 8,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2425,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2425,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;846.44&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2245,&#xd;
            2412,&#xd;
            33,&#xd;
            121&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;60.46&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            2412,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            945,&#xd;
            30,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;B0198110&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            958,&#xd;
            25,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 9,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            958,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            958,&#xd;
            21,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;24.92&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            945,&#xd;
            30,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;24.92&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2000,&#xd;
            945,&#xd;
            30,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1237,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;B0505889&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1250,&#xd;
            25,&#xd;
            166&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 10,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1250,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1237,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;98.80&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2279,&#xd;
            1237,&#xd;
            25,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;98.80&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2000,&#xd;
            1237,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1558,&#xd;
            21,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;B3001262&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1570,&#xd;
            25,&#xd;
            166&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 11,&#xd;
          &quot;position&quot;: [&#xd;
            300,&#xd;
            1570,&#xd;
            25,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;DEU&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1558,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;183.19&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2266,&#xd;
            1558,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;183.19&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            1558,&#xd;
            25,&#xd;
            92&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1845,&#xd;
            21,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;B30C1264&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1858,&#xd;
            25,&#xd;
            154&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 12,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1858,&#xd;
            25,&#xd;
            71&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;DEU&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1845,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;709.16&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2250,&#xd;
            1845,&#xd;
            25,&#xd;
            120&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;709.16&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            1845,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2133,&#xd;
            21,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 13,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2145,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;B3001343&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            2145,&#xd;
            25,&#xd;
            179&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            2133,&#xd;
            21,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;170.79&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            2133,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;170.79&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            2133,&#xd;
            21,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;1615&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2254,&#xd;
            2412,&#xd;
            33,&#xd;
            121&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;B3001357&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2433,&#xd;
            25,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 14,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2433,&#xd;
            21,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1575,&#xd;
            2425,&#xd;
            20,&#xd;
            75&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            2425,&#xd;
            20,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;161.51&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2016,&#xd;
            2412,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            2675,&#xd;
            20,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 15,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2687,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;BCO04866F&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            2687,&#xd;
            21,&#xd;
            162&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;ASM&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1595,&#xd;
            2675,&#xd;
            20,&#xd;
            59&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;88.16&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2291,&#xd;
            2675,&#xd;
            20,&#xd;
            79&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            958,&#xd;
            25,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;L1240098&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            970,&#xd;
            21,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 16,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            970,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;GBR&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            958,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;143.50&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2254,&#xd;
            958,&#xd;
            25,&#xd;
            108&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;143.50&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            958,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1245,&#xd;
            17,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 17,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1254,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;V0413535&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1254,&#xd;
            29,&#xd;
            179&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1245,&#xd;
            21,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;415.50&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            1245,&#xd;
            25,&#xd;
            121&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;207.75&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1983,&#xd;
            1245,&#xd;
            30,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;8&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1533,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO690672&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1533,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 18,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1545,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1533,&#xd;
            25,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;537.68&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1533,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;67.21&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            1533,&#xd;
            25,&#xd;
            80&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;126.90&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2250,&#xd;
            1920,&#xd;
            25,&#xd;
            116&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N0680676&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1929,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 19,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1929,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1566,&#xd;
            1920,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1920,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;63.45&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            1920,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;10&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            2208,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO770338&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2220,&#xd;
            25,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 20,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2208,&#xd;
            29,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            2208,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;2219.00&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            2208,&#xd;
            25,&#xd;
            129&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;221.90&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1991,&#xd;
            2208,&#xd;
            25,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N0770358&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            958,&#xd;
            21,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 21,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            958,&#xd;
            21,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1595,&#xd;
            958,&#xd;
            25,&#xd;
            55&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;310.57&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            958,&#xd;
            21,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;310.57&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            958,&#xd;
            21,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            1245,&#xd;
            21,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO770546&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            1245,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 22,&#xd;
          &quot;position&quot;: [&#xd;
            325,&#xd;
            1245,&#xd;
            21,&#xd;
            41&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1570,&#xd;
            1245,&#xd;
            25,&#xd;
            105&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;525.41&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            1245,&#xd;
            21,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;525.41&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2000,&#xd;
            1245,&#xd;
            21,&#xd;
            112&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            1529,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO774067&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            1529,&#xd;
            25,&#xd;
            171&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 23,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1529,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;AUS&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1529,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;406.42&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            1529,&#xd;
            25,&#xd;
            105&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;406.42&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1995,&#xd;
            1529,&#xd;
            25,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO775177&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            1816,&#xd;
            21,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 24,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1824,&#xd;
            21,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1595,&#xd;
            1816,&#xd;
            21,&#xd;
            55&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;906.057&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2250,&#xd;
            1816,&#xd;
            25,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;181.21&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2016,&#xd;
            1816,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;242.93&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            2100,&#xd;
            29,&#xd;
            105&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO775325&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2100,&#xd;
            37,&#xd;
            191&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 25,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2100,&#xd;
            29,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1595,&#xd;
            2100,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            2100,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;24293&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2000,&#xd;
            2100,&#xd;
            25,&#xd;
            112&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;479.37&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            2391,&#xd;
            25,&#xd;
            105&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO776052&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2391,&#xd;
            25,&#xd;
            179&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 26,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            2391,&#xd;
            21,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2029,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1783,&#xd;
            2391,&#xd;
            25,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;479.37&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            2391,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            962,&#xd;
            25,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NOT77410&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            962,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 27,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            962,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;AUS&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            962,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;503.27&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            962,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;503.27&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            962,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1216,&#xd;
            21,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO780130&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1216,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 28,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1216,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1216,&#xd;
            29,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;266.33&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1216,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;266.33&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            1216,&#xd;
            21,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;4&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            1604,&#xd;
            21,&#xd;
            38&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO781007&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1604,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 29,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1604,&#xd;
            21,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1604,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;498.36&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1604,&#xd;
            21,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;124.59&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            1604,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1891,&#xd;
            21,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NO790141&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1891,&#xd;
            21,&#xd;
            162&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 30,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1900,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1891,&#xd;
            21,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;29.95&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1891,&#xd;
            17,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;29.95&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            1891,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2175,&#xd;
            20,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050103&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2183,&#xd;
            25,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 31,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2183,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2175,&#xd;
            25,&#xd;
            63&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;249.28&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2245,&#xd;
            2175,&#xd;
            25,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;249.28&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1987,&#xd;
            2175,&#xd;
            20,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;825.63&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2266,&#xd;
            2462,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050115&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            445,&#xd;
            2462,&#xd;
            25,&#xd;
            159&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 32,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2462,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2462,&#xd;
            25,&#xd;
            63&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;3&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2462,&#xd;
            25,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;275.21&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1991,&#xd;
            2462,&#xd;
            25,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            962,&#xd;
            21,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050119&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            962,&#xd;
            25,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 33,&#xd;
          &quot;position&quot;: [&#xd;
            308,&#xd;
            962,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            962,&#xd;
            25,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;238.27&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            962,&#xd;
            21,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;239.27&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            962,&#xd;
            29,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1250,&#xd;
            20,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050121&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1250,&#xd;
            25,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 34,&#xd;
          &quot;position&quot;: [&#xd;
            304,&#xd;
            1250,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1250,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;206.88&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1250,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;206.88&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1991,&#xd;
            1250,&#xd;
            25,&#xd;
            109&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1537,&#xd;
            25,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050126&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1537,&#xd;
            25,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 35,&#xd;
          &quot;position&quot;: [&#xd;
            287,&#xd;
            1537,&#xd;
            25,&#xd;
            75&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1537,&#xd;
            21,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;213.47&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            1537,&#xd;
            25,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;213.47&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1991,&#xd;
            1537,&#xd;
            21,&#xd;
            109&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            1824,&#xd;
            21,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050145&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1824,&#xd;
            21,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 36,&#xd;
          &quot;position&quot;: [&#xd;
            308,&#xd;
            1824,&#xd;
            21,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1824,&#xd;
            21,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;486.42&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1824,&#xd;
            21,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;243.21&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            1824,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            2108,&#xd;
            25,&#xd;
            330&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050152&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            2108,&#xd;
            25,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 37,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2108,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2108,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;425.46&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            2108,&#xd;
            25,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050157 LuminaHollowCathode2Lamp-Pb&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            2400,&#xd;
            29,&#xd;
            720&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 38,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2400,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2400,&#xd;
            20,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;1519.60&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2225,&#xd;
            2387,&#xd;
            38,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;303.92&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2004,&#xd;
            2387,&#xd;
            29,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            962,&#xd;
            25,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N3050173&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            962,&#xd;
            25,&#xd;
            171&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 39,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            962,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            962,&#xd;
            25,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;297.49&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            962,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;297.49&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            962,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1250,&#xd;
            20,&#xd;
            34&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N61C1799&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1250,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 40,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1250,&#xd;
            25,&#xd;
            38&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1250,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;30.14&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2279,&#xd;
            1250,&#xd;
            25,&#xd;
            83&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;15.07&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            1250,&#xd;
            25,&#xd;
            80&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1570,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N6121002&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1570,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 41,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1570,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1570,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;12.47&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2283,&#xd;
            1570,&#xd;
            25,&#xd;
            83&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;12.47&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            1570,&#xd;
            25,&#xd;
            80&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            1958,&#xd;
            21,&#xd;
            30&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;NG62C0119&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1958,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 42,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1958,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1958,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;237.38&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            1958,&#xd;
            21,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;143.69&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1991,&#xd;
            1958,&#xd;
            25,&#xd;
            113&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            2212,&#xd;
            21,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N6356478&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2212,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 43,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2212,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            2212,&#xd;
            21,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;20.11&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2279,&#xd;
            2212,&#xd;
            25,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;20.11&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            2212,&#xd;
            25,&#xd;
            84&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            962,&#xd;
            25,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 44,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            975,&#xd;
            25,&#xd;
            288&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            962,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;158.66&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2250,&#xd;
            962,&#xd;
            25,&#xd;
            116&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;11866&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            962,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;0&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1283,&#xd;
            17,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N8152372&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            1283,&#xd;
            25,&#xd;
            142&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 45,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1283,&#xd;
            29,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1283,&#xd;
            21,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;1309.44&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2225,&#xd;
            1283,&#xd;
            25,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;654.72&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1987,&#xd;
            1283,&#xd;
            25,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            1412,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N8152373&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1412,&#xd;
            25,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 46,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1412,&#xd;
            29,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1412,&#xd;
            29,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;408.41&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2245,&#xd;
            1412,&#xd;
            25,&#xd;
            121&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;408.41&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            1412,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;3&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1541,&#xd;
            21,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N8152378&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1550,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 47,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1550,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1541,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;742.83&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2266,&#xd;
            1541,&#xd;
            21,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;742.83&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            1541,&#xd;
            21,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            1670,&#xd;
            25,&#xd;
            25&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N8162472N9301357&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1683,&#xd;
            121,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 48,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1683,&#xd;
            21,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1670,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;257.18&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2245,&#xd;
            1670,&#xd;
            25,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;257.18&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            1670,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            1804,&#xd;
            20,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 49,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1804,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1595,&#xd;
            1804,&#xd;
            20,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;75.88&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2283,&#xd;
            1804,&#xd;
            20,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;75.88&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            1804,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;9.00&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2304,&#xd;
            2191,&#xd;
            21,&#xd;
            71&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9302783&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            2200,&#xd;
            25,&#xd;
            171&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 50,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            2191,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;ASM&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            2191,&#xd;
            21,&#xd;
            59&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;4&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2191,&#xd;
            17,&#xd;
            37&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;2.25&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            2191,&#xd;
            21,&#xd;
            88&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;12&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2475,&#xd;
            25,&#xd;
            41&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9302945&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            2487,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 51,&#xd;
          &quot;position&quot;: [&#xd;
            325,&#xd;
            2487,&#xd;
            25,&#xd;
            33&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1595,&#xd;
            2475,&#xd;
            25,&#xd;
            55&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;160.44&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            2475,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;3.37&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            2475,&#xd;
            20,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;6&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            958,&#xd;
            21,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 52,&#xd;
          &quot;position&quot;: [&#xd;
            308,&#xd;
            966,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9303420&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            966,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;ASM&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1579,&#xd;
            958,&#xd;
            25,&#xd;
            62&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;42.24&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            958,&#xd;
            21,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;7.04&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2037,&#xd;
            958,&#xd;
            21,&#xd;
            63&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;6&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            1279,&#xd;
            21,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9303421&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1291,&#xd;
            21,&#xd;
            141&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 53,&#xd;
          &quot;position&quot;: [&#xd;
            308,&#xd;
            1291,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1279,&#xd;
            25,&#xd;
            58&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;38.76&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            1279,&#xd;
            21,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;6.46&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2037,&#xd;
            1279,&#xd;
            25,&#xd;
            63&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;12&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1762,&#xd;
            1600,&#xd;
            20,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9303442&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1612,&#xd;
            21,&#xd;
            145&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 54,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            1612,&#xd;
            21,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1583,&#xd;
            1600,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;126.96&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2262,&#xd;
            1600,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;10.58&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2024,&#xd;
            1600,&#xd;
            20,&#xd;
            76&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;10&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1766,&#xd;
            1920,&#xd;
            21,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9306067&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            450,&#xd;
            1929,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 55,&#xd;
          &quot;position&quot;: [&#xd;
            308,&#xd;
            1929,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1920,&#xd;
            21,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;1207.30&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            1920,&#xd;
            25,&#xd;
            125&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;120.73&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            1920,&#xd;
            25,&#xd;
            92&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            2204,&#xd;
            25,&#xd;
            20&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9306112&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2216,&#xd;
            25,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 56,&#xd;
          &quot;position&quot;: [&#xd;
            308,&#xd;
            2216,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;SGP&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2204,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;180.53&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2250,&#xd;
            2204,&#xd;
            25,&#xd;
            120&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;180.53&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2008,&#xd;
            2204,&#xd;
            21,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            2458,&#xd;
            25,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9306220&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            2458,&#xd;
            29,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 57,&#xd;
          &quot;position&quot;: [&#xd;
            312,&#xd;
            2470,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            2458,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;11.98&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2283,&#xd;
            2458,&#xd;
            25,&#xd;
            87&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;11.98&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2029,&#xd;
            2458,&#xd;
            29,&#xd;
            75&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1770,&#xd;
            958,&#xd;
            21,&#xd;
            38&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9307005&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            970,&#xd;
            25,&#xd;
            175&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 58,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            970,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;USA&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            958,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;1135.90&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2241,&#xd;
            958,&#xd;
            25,&#xd;
            129&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;667.95&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1991,&#xd;
            958,&#xd;
            25,&#xd;
            117&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            1250,&#xd;
            25,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9307832&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1250,&#xd;
            29,&#xd;
            179&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 59,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1250,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;DEU&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1587,&#xd;
            1250,&#xd;
            20,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;320.84&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2250,&#xd;
            1241,&#xd;
            29,&#xd;
            120&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;320.811&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2016,&#xd;
            1241,&#xd;
            25,&#xd;
            92&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1775,&#xd;
            1533,&#xd;
            25,&#xd;
            37&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N9308801&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            454,&#xd;
            1545,&#xd;
            25,&#xd;
            146&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 60,&#xd;
          &quot;position&quot;: [&#xd;
            320,&#xd;
            1545,&#xd;
            25,&#xd;
            42&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;GBR&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1533,&#xd;
            25,&#xd;
            54&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;335.64&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            1533,&#xd;
            25,&#xd;
            105&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;167.82&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            1533,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;1&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1783,&#xd;
            1820,&#xd;
            21,&#xd;
            21&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;N5316549&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            1820,&#xd;
            34,&#xd;
            150&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 61,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            1829,&#xd;
            25,&#xd;
            46&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;ASM&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            1820,&#xd;
            25,&#xd;
            59&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;272.67&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2270,&#xd;
            1820,&#xd;
            25,&#xd;
            105&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;272.67&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2012,&#xd;
            1820,&#xd;
            25,&#xd;
            100&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;quantity&quot;: {&#xd;
          &quot;content&quot;: &quot;2&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1779,&#xd;
            2104,&#xd;
            21,&#xd;
            29&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;item_number&quot;: {&#xd;
          &quot;content&quot;: 62,&#xd;
          &quot;position&quot;: [&#xd;
            316,&#xd;
            2116,&#xd;
            25,&#xd;
            50&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;gds_mtno&quot;: {&#xd;
          &quot;content&quot;: &quot;WE021816&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            458,&#xd;
            2116,&#xd;
            25,&#xd;
            162&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;origin_country&quot;: {&#xd;
          &quot;content&quot;: &quot;CAN&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            1591,&#xd;
            2104,&#xd;
            25,&#xd;
            63&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;total_price&quot;: {&#xd;
          &quot;content&quot;: &quot;480.86&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2275,&#xd;
            2104,&#xd;
            25,&#xd;
            104&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        },&#xd;
        &quot;unit_price&quot;: {&#xd;
          &quot;content&quot;: &quot;240.43&quot;,&#xd;
          &quot;position&quot;: [&#xd;
            2016,&#xd;
            2104,&#xd;
            25,&#xd;
            96&#xd;
          ],&#xd;
          &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;,&#xd;
          &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
          &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
        }&#xd;
      }&#xd;
    ],&#xd;
    &quot;attached_info&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;different_info&quot;: {&#xd;
      &quot;basic&quot;: &quot;&quot;,&#xd;
      &quot;goods&quot;: {&#xd;
        &#xd;
      }&#xd;
    },&#xd;
    &quot;contract_goods&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;container_info&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;complete&quot;: 100,&#xd;
    &quot;basic_info&quot;: {&#xd;
      &quot;origin&quot;: {&#xd;
        &quot;content&quot;: &quot;US&quot;,&#xd;
        &quot;position&quot;: [&#xd;
          1587,&#xd;
          2029,&#xd;
          25,&#xd;
          58&#xd;
        ],&#xd;
        &quot;img_src&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
        &quot;source&quot;: &quot;invoice_file&quot;,&#xd;
        &quot;from_file_type&quot;: &quot;image_to_excel&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;origin_certificate&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;way_info&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;companyName&quot;: &quot;中外运·敦豪保税仓储（北京）有限公司&quot;,&#xd;
    &quot;declaration_info&quot;: [&#xd;
      &#xd;
    ],&#xd;
    &quot;file_info&quot;: {&#xd;
      &quot;invoice_file&quot;: [&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/74e02b45-1c80-45ce-8b3c-e6e2b9bafde0_1.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/f9bc05db-368a-4432-85e7-bbf12d5bda54_2.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2fe6df43-5886-4573-b6e2-419a293ca3ff_3.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/1fa555ee-6d90-47aa-bc54-49b934d33595_4.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/015780b5-1eb3-4096-b283-f57e58afc2da_5.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/41bd10c7-07b7-4db2-b82a-c9ec42c1b5cd_6.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/24560bf6-f5ae-46c2-a0cd-e443ff26ad17_7.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/c2fef1b6-161c-4890-9077-806b26479939_8.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/2669b5f5-b271-4323-ab67-9742873f188d_9.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/434e2ad5-a576-4517-b4f4-72af757e4e99_10.png&quot;,&#xd;
        &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/invoice_file/e6e5604a-6231-4edb-abf7-283fca760a7a_11.png&quot;&#xd;
      ]&#xd;
    }&#xd;
  },&#xd;
  &quot;path&quot;: &quot;/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002&quot;,&#xd;
  &quot;customs_broker_id&quot;: &quot;000000001&quot;,&#xd;
  &quot;declare_type&quot;: &quot;bws_inv&quot;,&#xd;
  &quot;app_name&quot;: &quot;bws&quot;,&#xd;
  &quot;in_out_type&quot;: &quot;I&quot;,&#xd;
  &quot;overseas_consignor_en_name&quot;: &quot;泊金埃尔默企业管理（上海）有限公司&quot;,&#xd;
  &quot;project_id&quot;: &quot;8441c9c1e3f2407db4694721266c8709&quot;,&#xd;
  &quot;account_id&quot;: &quot;f29a9166939649eb81759c020e14ed96&quot;,&#xd;
  &quot;logger_record_path&quot;: &quot;http://test.rpa.anjie.superlucy.net:8080/uploads/amiintellect-customs/bws/2020/2Q/6/000000001/中外运·敦豪保税仓储（北京）有限公司/BSHZ2020062800002/detect_image/callback.json&quot;,&#xd;
  &quot;template_id&quot;: &quot;&quot;,&#xd;
  &quot;provider&quot;: &quot;泊金埃尔默企业管理（上海）有限公司&quot;,&#xd;
  &quot;error_info&quot;: [&#xd;
    &#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrTouchingList/test2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="v2" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="myHost" elementType="Argument">
              <stringProp name="Argument.name">myHost</stringProp>
              <stringProp name="Argument.value">http://v2.rpa.anjie.superlucy.net</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">开发</stringProp>
            </elementProp>
            <elementProp name="myPort" elementType="Argument">
              <stringProp name="Argument.name">myPort</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="myCoding" elementType="Argument">
              <stringProp name="Argument.name">myCoding</stringProp>
              <stringProp name="Argument.value">utf-8</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamedec" elementType="Argument">
              <stringProp name="Argument.name">appnamedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.desc">货物申报</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypedec" elementType="Argument">
              <stringProp name="Argument.name">declareTypedec</stringProp>
              <stringProp name="Argument.value">dec</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamebws" elementType="Argument">
              <stringProp name="Argument.name">appnamebws</stringProp>
              <stringProp name="Argument.value">bws</stringProp>
              <stringProp name="Argument.desc">保税物流</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="declareTypebws" elementType="Argument">
              <stringProp name="Argument.name">declareTypebws</stringProp>
              <stringProp name="Argument.value">bws_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameems" elementType="Argument">
              <stringProp name="Argument.name">appnameems</stringProp>
              <stringProp name="Argument.value">ems</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册</stringProp>
            </elementProp>
            <elementProp name="declareTypeems" elementType="Argument">
              <stringProp name="Argument.name">declareTypeems</stringProp>
              <stringProp name="Argument.value">nems_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnamesas" elementType="Argument">
              <stringProp name="Argument.name">appnamesas</stringProp>
              <stringProp name="Argument.value">sas</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">海关特殊</stringProp>
            </elementProp>
            <elementProp name="declareTypesas" elementType="Argument">
              <stringProp name="Argument.name">declareTypesas</stringProp>
              <stringProp name="Argument.value">sas_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="appnameeml" elementType="Argument">
              <stringProp name="Argument.name">appnameeml</stringProp>
              <stringProp name="Argument.value">eml</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">区外加工账册手册</stringProp>
            </elementProp>
            <elementProp name="declareTypeeml" elementType="Argument">
              <stringProp name="Argument.name">declareTypeeml</stringProp>
              <stringProp name="Argument.value">npts_inv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshz" elementType="Argument">
              <stringProp name="Argument.name">companyNameshz</stringProp>
              <stringProp name="Argument.value">hz_001</stringProp>
              <stringProp name="Argument.desc">公司名称</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNamesdec" elementType="Argument">
              <stringProp name="Argument.name">companyNamesdec</stringProp>
              <stringProp name="Argument.value">bgd001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="companyNameshzs" elementType="Argument">
              <stringProp name="Argument.name">companyNameshzs</stringProp>
              <stringProp name="Argument.value">jc_test001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="operCusRegcode" elementType="Argument">
              <stringProp name="Argument.name">operCusRegcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(10,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">海关编码</stringProp>
            </elementProp>
            <elementProp name="sccdcode" elementType="Argument">
              <stringProp name="Argument.name">sccdcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(18,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">十八位信用代码</stringProp>
            </elementProp>
            <elementProp name="icCardNo" elementType="Argument">
              <stringProp name="Argument.name">icCardNo</stringProp>
              <stringProp name="Argument.value">${__RandomString(13,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="icCardname" elementType="Argument">
              <stringProp name="Argument.name">icCardname</stringProp>
              <stringProp name="Argument.value">${__RandomString(8,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">名称</stringProp>
            </elementProp>
            <elementProp name="idcode" elementType="Argument">
              <stringProp name="Argument.name">idcode</stringProp>
              <stringProp name="Argument.value">${__RandomString(32,ABCD1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">v2.rpa.anjie.superlucy.net:8080</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Origin</stringProp>
              <stringProp name="Header.value">http://v2.rpa.anjie.superlucy.net:8080</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">http://v2.rpa.anjie.superlucy.net:8080</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">responseType</stringProp>
              <stringProp name="Header.value">blob</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV 识别文件" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/识别文件.txt</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">filePathBG,filePathHZ</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV账号密码" enabled="true">
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/账号密码.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">login,password</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV进出口" enabled="true">
          <stringProp name="filename">D:/jmeter/rpafile/开发环境文件/进出口.txt</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">impexpMarkcds,appnames,declareTypes,companyNames</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="登陆事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成 RSA 加密的公钥和私钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数&#xd;
  &quot;nonce&quot;:&quot;959227&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/generateRsaKeyPair</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取默认的 RSA 公钥" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  // 随机数获取公钥&#xd;
  &quot;nonce&quot;: &quot;955095&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/getRsaPublicKey</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeys</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SHA-1 方式加密" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;text&quot;: &quot;123456955095&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/sys/security/encrypter/encryptSha1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">getRsaPublicKeysQ</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell 后置" enabled="false">
            <stringProp name="TestPlan.comments">对密码进行加密</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.apache.commons.codec.binary.Base64;
import java.io.ByteArrayOutputStream;
import java.security.Key;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.Signature;
import java.security.interfaces.RSAPrivateKey;
import java.security.interfaces.RSAPublicKey;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;
import java.util.HashMap;
import java.util.Map;
import javax.crypto.Cipher;
//获取公钥
String RSA_PUB_KEY=&quot;${getRsaPublicKeys}&quot;;
String KEY_ALGORITHM = &quot;RSA&quot;;
String SIGNATURE_ALGORITHM = &quot;MD5withRSA&quot;;
int MAX_ENCRYPT_BLOCK = 117;
int MAX_DECRYPT_BLOCK = 128;

public static byte[] decryptByPublicKey(byte[] encryptedData, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.DECRYPT_MODE, publicK);
        int inputLen = encryptedData.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段解密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_DECRYPT_BLOCK) {
                cache = cipher.doFinal(encryptedData, offSet, MAX_DECRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(encryptedData, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_DECRYPT_BLOCK;
        }
        byte[] decryptedData = out.toByteArray();
        out.close();
        return decryptedData;
    }

    public static byte[] encryptByPublicKey(byte[] data, String publicKey)
            throws Exception {
        byte[] keyBytes = Base64.decodeBase64(publicKey);
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);
        Key publicK = keyFactory.generatePublic(x509KeySpec);
        // 对数据加密
        Cipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());
        cipher.init(Cipher.ENCRYPT_MODE, publicK);
        int inputLen = data.length;
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        int offSet = 0;
        byte[] cache;
        int i = 0;
        // 对数据分段加密
        while (inputLen - offSet &gt; 0) {
            if (inputLen - offSet &gt; MAX_ENCRYPT_BLOCK) {
                cache = cipher.doFinal(data, offSet, MAX_ENCRYPT_BLOCK);
            } else {
                cache = cipher.doFinal(data, offSet, inputLen - offSet);
            }
            out.write(cache, 0, cache.length);
            i++;
            offSet = i * MAX_ENCRYPT_BLOCK;
        }
        byte[] encryptedData = out.toByteArray();
        out.close();
        return encryptedData;
    }
    //需要加密的用户密码
   //String str = &quot;idNum=633335199606143151&amp;name=蔺四十&amp;phone=17610010005&quot;;
   String str = &quot;${password}&quot;;
String result =&quot;&quot;;
try {
    result = Base64.encodeBase64String(encryptByPublicKey(str.getBytes(), RSA_PUB_KEY));
    System.out.println(result);
} catch (Exception e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
}
    
print(result);
vars.put(&quot;sign&quot;,result);
return result;</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${login}&quot;,&#xd;
// &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
  &quot;password&quot;: &quot;${password}&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取登陆个人用户信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//根据token获取当前用户的个人信息&#xd;
  &quot;accessToken&quot;: &quot;${token}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/me</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">基本信息</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//用户id获取员工信息&#xd;
  &quot;id&quot;: &quot;${accountIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">员工所属报关行、组织、权限</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationNames</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIds</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织id" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;accountId&quot;: &quot;${accountIds}&quot;,&#xd;
  &quot;organizationId&quot;: &quot;$.{organizationIds}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/accountOrganizationHistory/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIdsnow</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationUnitId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工当前组织名称" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">/api/membership/organizationUnit/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON当前组织名称" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">projectname</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="客户管理" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增客户" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;companyName&quot;: &quot;测试用客户&quot;, //用户名称&#xd;
    &quot;socialCode&quot;: &quot;141341244314134124&quot;,//十八位信用代码&#xd;
    &quot;customsCode&quot;: &quot;1413412443&quot;,//海关编号&#xd;
    &quot;declareToCustoms&quot;: &quot;0000&quot;,//常用申报地海关&#xd;
    &quot;checkNumber&quot;: &quot;1232312313&quot;,//国检编号&#xd;
    &quot;clearance&quot;: &quot;0100;0102&quot;,//进出境关别&#xd;
    &quot;record&quot;: &quot;1234123124242&quot;,//备案号&#xd;
    &quot;portEntry&quot;: &quot;110003&quot;,//离入境口岸&#xd;
    &quot;designatedArea&quot;: &quot;货物地点&quot;,//货物地点&#xd;
    &quot;customsType&quot;: &quot;Z&quot;,//常用报关单类型&#xd;
    &quot;authorityMatter&quot;: &quot;115100&quot;,//检验检疫&#xd;
    &quot;portAuthority&quot;: &quot;115200&quot;,//口岸检疫&#xd;
    &quot;licenseAuthority&quot;: &quot;115100&quot;,//领证机关&#xd;
    &quot;destinationAuthority&quot;: &quot;115200&quot;,//目的地检疫&#xd;
    &quot;enterpriseNature&quot;: &quot;1&quot;,//企业性质&#xd;
    &quot;destination&quot;: &quot;110102;110101;110000&quot;,//目的地&#xd;
    &quot;incountryDestination&quot;: &quot;11039;11029;11023&quot;,//境内目的地&#xd;
    &quot;customsBondedArea&quot;: &quot;1231&quot;,//所属海关保税区&#xd;
    &quot;enterpriseProperty&quot;: &quot;1&quot;,//企业属性&#xd;
    &quot;tradeTypeName&quot;: &quot;6&quot;,//申请人种类&#xd;
    &quot;contactPhone&quot;: &quot;6782332&quot;,//固定电话&#xd;
    &quot;other&quot;: &quot;000&quot;,//其它事项&#xd;
    &quot;templateId&quot;: &quot;00000000-0000-0000-0000-000000000006&quot;,//模板&#xd;
    &quot;note&quot;: &quot;测试备注&quot;,//备注&#xd;
    &quot;companyId&quot;: &quot;1413412443&quot;,//公司id == 当前公司的海关编号 &#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;//当前登录用户组织id&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrCustomerInfo/saveCustomerInfo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">companyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增客户的权限" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;companyIds&quot;: [&#xd;
    &quot;1413412443&quot;  //公司id&#xd;
  ],&#xd;
  &quot;users&quot;: [&#xd;
    {&#xd;
      &quot;userId&quot;: &quot;&quot;,&#xd;
      &quot;orgaName&quot;: &quot;测试6&quot;,   //组织名称 &#xd;
      &quot;userName&quot;: &quot;d462eb9d-6f6c-4496-a056-8eed48ec7233&quot;    //组织id&#xd;
    },&#xd;
    {&#xd;
      &quot;userId&quot;: &quot;&quot;,&#xd;
      &quot;orgaName&quot;: &quot;测试1&quot;,    //组织名称&#xd;
      &quot;userName&quot;: &quot;3a7c31e6-89cf-45eb-b299-32864ef032f6&quot;    //组织id&#xd;
    }&#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  //组织id&#xd;
  &quot;customsBrokerId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  //报关行id&#xd;
  &quot;isSaveCus&quot;: &quot;isSaveCus&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/ocr/edge/ocrCustomerInfo/saveUserAndCompanyRelation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">companyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="识别事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="货物申报上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,  //&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;, //上传用户&#xd;
  &quot;appName&quot;: &quot;${appnamedec}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypedec}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;  //报关行id&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgiddec</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathdec</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathBG}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathBG}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">multipart/form-data</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgiddec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamedec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNamesdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathBG}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathBG}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">multipart/form-data</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgiddec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">way_bill</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamedec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNamesdec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnamedec}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypedec}&quot;, //&#xd;
    &quot;inOutType&quot;: &quot;${impexpMarkcds}&quot;,  //进出口&#xd;
    &quot;entrustCompanyId&quot;: &quot;5c859d57-443c-44ad-928e-48c7ae802c0f&quot;, //委托单位&#xd;
    &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgiddec}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathdec}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
    &quot;source&quot;: &quot;1&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
    {&#xd;
    	&quot;name&quot;:&quot;运单文件&quot;,&#xd;
    	&quot;fileStatus&quot;:&quot;0&quot;&#xd;
    	}&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="流水号暂存表头" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;06|undefined&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;123&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: [&#xd;
      &quot;国际赛事&quot;,&#xd;
      &quot;特殊进出军工物资&quot;,&#xd;
      &quot;国际援助物资&quot;,&#xd;
      &quot;国际会议&quot;&#xd;
    ],&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;${pkgiddec}&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;tempSaveType&quot;: &quot;1&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;包/袋&quot;,&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;纸制或纤维板制盒/箱&quot;,&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//当前组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="海关特殊区域上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypesas}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgidsas</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathsas</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgidsas}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathsas}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamesas}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;invtMakeManage&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgidsas}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathsas}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;importId&quot;: &quot;&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;运单文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="区外加工账册上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypeems}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgidems</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathems</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgidems}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathems}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnameems}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;invtMakeManage&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypeems}&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgidems}&quot;,&#xd;
    &quot;path&quot;: &quot;${pathems}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;importId&quot;: &quot;&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="区外加工手册上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">	 &#xd;
{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypeeml}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgideml</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">patheml</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgideml}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${patheml}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnameeml}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;invtMakeManage&quot;: {&#xd;
    &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
    &quot;declareType&quot;: &quot;${declareTypeeml}&quot;,&#xd;
    &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
    &quot;id&quot;: &quot;${pkgideml}&quot;,&#xd;
    &quot;path&quot;: &quot;${patheml}&quot;,&#xd;
    &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
    &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
    &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;importId&quot;: &quot;&quot;,&#xd;
    &quot;agent&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;provider&quot;: &quot;&quot;,&#xd;
  &quot;nameFileList&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;发票文件&quot;,&#xd;
      &quot;fileStatus&quot;: &quot;0&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="保税物流上传事务" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="生成文件路径" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;overseasConsignorEnName&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;declareType&quot;: &quot;${declareTypebws}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/core/file/createDirectories</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取报关单编号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pkgidbws</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.pkgId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取文件路径" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">pathbws</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.path</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="上传文件" enabled="true">
              <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                <collectionProp name="HTTPFileArgs.files">
                  <elementProp name="${filePathHZ}" elementType="HTTPFileArg">
                    <stringProp name="File.path">${filePathHZ}</stringProp>
                    <stringProp name="File.paramname">file</stringProp>
                    <stringProp name="File.mimetype">application/octet-stream</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="file" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">(binary)</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">file</stringProp>
                  </elementProp>
                  <elementProp name="pkgId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pkgidbws}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">pkgId</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">invoice_file</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="path" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${pathbws}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">path</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${appnamebws}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="customsBrokerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${standardOrganizationIds}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">customsBrokerId</stringProp>
                  </elementProp>
                  <elementProp name="companyName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${companyNameshz}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">companyName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">/api/customs/core/file/fileupload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1120431564">文件上传成功</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;invtMakeManage&quot;: {&#xd;
      &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
      &quot;declareType&quot;: &quot;${declareTypebws}&quot;,&#xd;
      &quot;companyName&quot;: &quot;${companyNameshz}&quot;,&#xd;
      &quot;id&quot;: &quot;${pkgidbws}&quot;,&#xd;
      &quot;path&quot;: &quot;${pathbws}&quot;,&#xd;
      &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
      &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
      &quot;impexpMarkcd&quot;: &quot;${impexpMarkcds}&quot;,&#xd;
      &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
      &quot;importId&quot;: &quot;&quot;,&#xd;
      &quot;agent&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;provider&quot;: &quot;&quot;,&#xd;
    &quot;nameFileList&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;发票文件&quot;,&#xd;
        &quot;fileStatus&quot;: &quot;0&quot;&#xd;
      }&#xd;
    ]&#xd;
 }</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/ocr/saveMakeManage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="手动新增事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="货物申报手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;2|单价&quot;,&#xd;
    &quot;insurance&quot;: &quot;1|率&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;222222222222&quot;,&#xd;
    &quot;contractNo&quot;: &quot;333333333333333&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;CU0293&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;billNo&quot;: &quot;4444444444&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;HKD|港币&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;0.3&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;1&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;CNY|人民币&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;04|undefined&quot;,  //&#xd;
    &quot;grossWeight&quot;: &quot;12&quot;,&#xd;
    &quot;netWeight&quot;: &quot;12&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;6666666&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;1|通关单超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;specialFlag&quot;: [&#xd;
      &quot;国际赛事&quot;,&#xd;
      &quot;特殊进出军工物资&quot;,&#xd;
      &quot;国际援助物资&quot;&#xd;
    ],&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20200202&quot;,&#xd;
    &quot;BL&quot;: &quot;bl&quot;,&#xd;
    &quot;originalBoxTransportation&quot;: &quot;原箱运输&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,//来源（1：识别；2：手动新增；3：复制；4：）&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,  //进出口&#xd;
  &quot;tempSaveType&quot;: &quot;1&quot;, //暂存（1：表头；2：表体）&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,//上传客户名称&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;球状罐类&quot;,&#xd;
      &quot;code&quot;: &quot;04&quot;,&#xd;
      &quot;wId&quot;: &quot;3&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;包/袋&quot;,&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,  //组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//当前组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bizidhead</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;${bizidhead}&quot;,   //流水号&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,   //进出口&#xd;
  &quot;tempSaveType&quot;: &quot;2&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,  //上传公司名称&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;refresh_type&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarCargoSize&quot;: &quot;&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;basicId&quot;: &quot;${bizidhead}&quot;,&#xd;
      &quot;reportElement&quot;: {&#xd;
        &#xd;
      },&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;packages&quot;: &quot;&quot;,&#xd;
      &quot;grossWeight&quot;: &quot;&quot;,&#xd;
      &quot;netWeight&quot;: &quot;&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidhead}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 1,   //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidhead}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表体生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;&quot;,   //流水号&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,   //进出口&#xd;
  &quot;tempSaveType&quot;: &quot;2&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,  //上传公司名称&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;refresh_type&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarCargoSize&quot;: &quot;&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;basicId&quot;: &quot;BG2020050700005&quot;,&#xd;
      &quot;reportElement&quot;: {&#xd;
        &#xd;
      },&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;packages&quot;: &quot;&quot;,&#xd;
      &quot;grossWeight&quot;: &quot;&quot;,&#xd;
      &quot;netWeight&quot;: &quot;&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,//报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交表体生成的流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bizidlist</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表体流水号暂存表头" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;06|undefined&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;123&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: [&#xd;
      &quot;国际赛事&quot;,&#xd;
      &quot;特殊进出军工物资&quot;,&#xd;
      &quot;国际援助物资&quot;,&#xd;
      &quot;国际会议&quot;&#xd;
    ],&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;oldId&quot;: &quot;${bizidlist}&quot;,&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;tempSaveType&quot;: &quot;1&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;包/袋&quot;,&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;cnName&quot;: &quot;纸制或纤维板制盒/箱&quot;,&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,//报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,//当前组织名称&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/tempSave</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">bizidtwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.bizId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 1,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="驳回" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 3,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="再次提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 1,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${bizidtwo}&quot;, //流水号&#xd;
  &quot;source&quot;: &quot;2&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/selectOne</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;inOutType&quot;: &quot;I&quot;,&#xd;
    &quot;trafMode&quot;: &quot;3|铁路运输&quot;,&#xd;
    &quot;declaredUnit&quot;: &quot;4143443343|0215测试001&quot;,&#xd;
    &quot;iECusClearance&quot;: &quot;1511|龙嘉机场&quot;,&#xd;
    &quot;inReceiveShipperCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;inReceiveShipperCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;customsDeclarationTypeTop&quot;: &quot;001|一般报关单&quot;,&#xd;
    &quot;freight&quot;: &quot;1|率&quot;,&#xd;
    &quot;insurance&quot;: &quot;3|总价&quot;,&#xd;
    &quot;extras&quot;: &quot;3|总价&quot;,&#xd;
    &quot;soldFor&quot;: &quot;2|C&amp;F&quot;,&#xd;
    &quot;packages&quot;: &quot;12&quot;,&#xd;
    &quot;note&quot;: &quot;&quot;,&#xd;
    &quot;marksNos&quot;: &quot;N/M&quot;,&#xd;
    &quot;declarationPlaceCustoms&quot;: &quot;0101|京机场关&quot;,&#xd;
    &quot;customsDeclarationTransferType&quot;: &quot;001|普通报关&quot;,&#xd;
    &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
    &quot;material_finishedProduct&quot;: 0,&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;cusCode&quot;: &quot;&quot;,&#xd;
    &quot;eori&quot;: &quot;1111111111&quot;,&#xd;
    &quot;contractNo&quot;: &quot;222222222&quot;,&#xd;
    &quot;iEDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;declaredDate&quot;: &quot;&quot;,&#xd;
    &quot;usci&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;inReceiveShipperCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;aeoCode&quot;: &quot;aeo&quot;,&#xd;
    &quot;consigneeIsNameAndAddress&quot;: &quot;进口123&quot;,&#xd;
    &quot;consumerUseCusCode&quot;: &quot;6897955645|bgd001&quot;,&#xd;
    &quot;consumerUseCusName&quot;: &quot;bgd001&quot;,&#xd;
    &quot;consumerUseUnitCode&quot;: &quot;689795564568979556&quot;,&#xd;
    &quot;consumerUseCommCode&quot;: &quot;1233123333&quot;,&#xd;
    &quot;declaredUnitUseCusName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;declaredUnitUseUsciCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;declaredUnitUseCommCode&quot;: &quot;&quot;,&#xd;
    &quot;trafName&quot;: &quot;运输工具&quot;,&#xd;
    &quot;requestedFlight&quot;: &quot;su3309&quot;,&#xd;
    &quot;billNo&quot;: &quot;3333333333&quot;,&#xd;
    &quot;licenseNo&quot;: &quot;许12可证号&quot;,&#xd;
    &quot;supervisorMode&quot;: &quot;0110|一般贸易&quot;,&#xd;
    &quot;exemptionNature&quot;: &quot;101|一般征税&quot;,&#xd;
    &quot;airportOfDeparture&quot;: &quot;BRB|巴巴多斯&quot;,&#xd;
    &quot;tradeCountry&quot;: &quot;PAK|巴基斯坦&quot;,&#xd;
    &quot;portOfDestination&quot;: &quot;995105|绵阳出口加工区&quot;,&#xd;
    &quot;freightMark&quot;: &quot;1&quot;,&#xd;
    &quot;freightCoinage&quot;: &quot;&quot;,&#xd;
    &quot;insuranceMark&quot;: &quot;222&quot;,&#xd;
    &quot;insuranceCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;extrasMark&quot;: &quot;333&quot;,&#xd;
    &quot;extrasCoinage&quot;: &quot;MYR|马来西亚林吉特&quot;,&#xd;
    &quot;wrapType&quot;: &quot;99|其他包装&quot;,&#xd;
    &quot;wrapTypeOther&quot;: &quot;&quot;,&#xd;
    &quot;grossWeight&quot;: &quot;12311&quot;,&#xd;
    &quot;netWeight&quot;: &quot;1233&quot;,&#xd;
    &quot;goodsPlace&quot;: &quot;铁路办事处&quot;,&#xd;
    &quot;entryPort&quot;: &quot;220001|长春&quot;,&#xd;
    &quot;shipmentPort&quot;: &quot;991101|北京天竺综合保税区&quot;,&#xd;
    &quot;customsDeclarationType&quot;: &quot;M|通关无纸化&quot;,&#xd;
    &quot;specialRelationAffirm&quot;: &quot;1&quot;,&#xd;
    &quot;priceImpactAffirm&quot;: &quot;0&quot;,&#xd;
    &quot;paymentOfRoyaltyRecognition&quot;: &quot;9&quot;,&#xd;
    &quot;businessMatters&quot;: [&#xd;
      1,&#xd;
      2&#xd;
    ],&#xd;
    &quot;orgCode&quot;: &quot;440000|广州海关本部&quot;,&#xd;
    &quot;insporgCode&quot;: &quot;310000|上海海关本部&quot;,&#xd;
    &quot;vsaorgCode&quot;: &quot;110000|北京海关本部&quot;,&#xd;
    &quot;purporgCode&quot;: &quot;220000|长春海关本部&quot;,&#xd;
    &quot;correlationNo&quot;: &quot;2020&quot;,&#xd;
    &quot;correlationReasonFlag&quot;: &quot;2|换证凭单/条超过有效期&quot;,&#xd;
    &quot;enterpriseQua&quot;: &quot;&quot;,&#xd;
    &quot;shipmentDate&quot;: &quot;20201212&quot;,&#xd;
    &quot;BL&quot;: &quot;23bl&quot;,&#xd;
    &quot;specialFlag&quot;: &quot;[\&quot;国际赛事\&quot;,\&quot;特殊进出军工物资\&quot;,\&quot;国际援助物资\&quot;,\&quot;国际会议\&quot;]&quot;,&#xd;
    &quot;theOriginalTransport&quot;: &quot;原箱&quot;,&#xd;
    &quot;requiredDocument&quot;: &quot;&quot;,&#xd;
    &quot;associatedCustomsDeclaration&quot;: &quot;&quot;,&#xd;
    &quot;correlationRecordNumber&quot;: &quot;&quot;,&#xd;
    &quot;correlationCustomsDeclarationNumber&quot;: &quot;&quot;,&#xd;
    &quot;id&quot;: &quot;${bizidlist}&quot;,&#xd;
    &quot;operationalMatters&quot;: &quot;1,2&quot;&#xd;
  },&#xd;
  &quot;source&quot;: &quot;2&quot;,&#xd;
  &quot;inOutType&quot;: &quot;I&quot;,&#xd;
  &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;companyName&quot;: &quot;${companyNamesdec}&quot;,&#xd;
  &quot;otherWrapType&quot;: [&#xd;
    {&#xd;
      &quot;code&quot;: &quot;06&quot;,&#xd;
      &quot;wId&quot;: &quot;4&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;code&quot;: &quot;22&quot;,&#xd;
      &quot;wId&quot;: &quot;5&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;tempOrderId&quot;: &quot;&quot;,&#xd;
  &quot;oprType&quot;: 2,    //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交&#xd;
  &quot;productList&quot;: [&#xd;
    {&#xd;
      &quot;basicId&quot;: &quot;${bizidlist}&quot;,&#xd;
      &quot;productSerialNumber&quot;: 1,&#xd;
      &quot;isCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isNewCurrRed&quot;: &quot;1&quot;,&#xd;
      &quot;isUnitPriceDiff&quot;: 1,&#xd;
      &quot;isNewUnitPriceDiff&quot;: 1,&#xd;
      &quot;commodityCode&quot;: &quot;8544422900&quot;,&#xd;
      &quot;countryOfDelivery&quot;: &quot;11059|朝阳区&quot;,&#xd;
      &quot;curr&quot;: &quot;USD|美元&quot;,&#xd;
      &quot;description&quot;: &quot;电源线&quot;,&#xd;
      &quot;destinationCountry&quot;: &quot;CHN|中国&quot;,&#xd;
      &quot;destinationOriginCode&quot;: &quot;110103|北京市崇文区&quot;,&#xd;
      &quot;exemptionNature&quot;: &quot;3|全免&quot;,&#xd;
      &quot;inspQuarName&quot;: &quot;&quot;,&#xd;
      &quot;inspQuarCode&quot;: &quot;&quot;,&#xd;
      &quot;itemNo&quot;: &quot;222222&quot;,&#xd;
      &quot;legalQuantity&quot;: &quot;1223&quot;,&#xd;
      &quot;legalQuantityByCode&quot;: &quot;1223&quot;,&#xd;
      &quot;legalSecondQuantity&quot;: &quot;12&quot;,&#xd;
      &quot;legalSecondUnit&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalSecondUnitByCode&quot;: &quot;110|平方码&quot;,&#xd;
      &quot;legalUnit&quot;: &quot;035|千克&quot;,&#xd;
      &quot;legalUnitByCode&quot;: &quot;035|千克&quot;,&#xd;
      &quot;model&quot;: &quot;4|3|连接插头设备|有接头:有接头|Linetek规格:1pc牌|LP54+LS15|16A250V|无GTIN&quot;,&#xd;
      &quot;originArea&quot;: &quot;100|保加利亚&quot;,&#xd;
      &quot;originCountry&quot;: &quot;AFG|阿富汗&quot;,&#xd;
      &quot;productSingleVersionNumber&quot;: &quot;111111&quot;,&#xd;
      &quot;quantity&quot;: &quot;25000&quot;,&#xd;
      &quot;recordsNumber&quot;: &quot;123&quot;,&#xd;
      &quot;soldUnit&quot;: &quot;007|个&quot;,&#xd;
      &quot;soldUnitByCode&quot;: &quot;007|个&quot;,&#xd;
      &quot;totalPrice&quot;: &quot;29750&quot;,&#xd;
      &quot;unitPrice&quot;: &quot;1.19&quot;,&#xd;
      &quot;reportElement&quot;: &quot;{}&quot;,&#xd;
      &quot;cargoAttribute&quot;: &quot;17|非转基因产品&quot;,&#xd;
      &quot;purpose&quot;: &quot;19|食品包装材料&quot;,&#xd;
      &quot;productPermitList&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;reCols&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;regulatoryConditions&quot;: &quot;333333&quot;,&#xd;
      &quot;remarkIndex&quot;: &quot;&quot;,&#xd;
      &quot;pn&quot;: &quot;&quot;,&#xd;
      &quot;quantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityCal&quot;: &quot;&quot;,&#xd;
      &quot;quantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalQuantityDiff&quot;: &quot;&quot;,&#xd;
      &quot;legalSecondQuantityDiff&quot;: &quot;&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;containerList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;attachedList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;userList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;enterpriseQualificationList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;inspectionQuarantineVisa&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;inspQuarCargoSize&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;productPermitList&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;dangerCargo&quot;: {&#xd;
    &#xd;
  },&#xd;
  &quot;nowOriginArea&quot;: [&#xd;
    &#xd;
  ],&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;,//组织id&#xd;
  &quot;accountOrginzationId&quot;: &quot;${organizationIdsnow}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;,  //报关行名称&#xd;
  &quot;accountOrginzationName&quot;: &quot;${projectname}&quot;,  //用户组织&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/ocr/edge/ocrForm/updateBasic</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;oprType&quot;: //1制单保存 2审核通过 3驳回 4回执失败审核通过 5回执失败驳回 6驳回制单保存 7已提交再次提交</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="789079806">操作成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="海关特殊区域手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">headsasid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listsaszero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号新增表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号新增表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listsaszero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listsaszero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypesasone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listsasone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypesasone},&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listsasone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypesastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypesastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdsastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdsastwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 3,&#xd;
  &quot;values&quot;: ${invtHeadTypesastwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdsastwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;2341244&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdsastwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypesastwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;,&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${headsasid}&quot;,  //流水号&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,  //进出口类型&#xd;
  &quot;decType&quot;: &quot;1&quot;,   //&#xd;
  &quot;dclcusTypecd&quot;: &quot;1&quot;,  //&#xd;
  &quot;appName&quot;: &quot;${appnamesas}&quot;  //模块&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/sas/sasInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="加工账册手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">heademsid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listemszero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listemszero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemszero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listemsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypeemsone},&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemsone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="invtlisttypeemstwo--表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="invtHeadTypeemstwo--表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypeemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="impexpMarkcdemstwo--进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="mtpckEndprdMarkcdemstwo---成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdemstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;values&quot;: ${invtHeadTypeemstwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdemstwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;412341243414&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdemstwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypeemstwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;,&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${heademsid}&quot;,  //流水号&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,  //进出口类型&#xd;
  &quot;decType&quot;: &quot;1&quot;,   //&#xd;
  &quot;dclcusTypecd&quot;: &quot;1&quot;,  //&#xd;
  &quot;appName&quot;: &quot;${appnameems}&quot;  //模块&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/ems/emsInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="加工手册手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
 &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;124312444443&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">heademlid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listemlzero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listemlzero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemlzero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemlone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listemlone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypeemlone},&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listemlone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="表体-invtlisttypeemltwo" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypeemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="表头--invtHeadTypeemltwo" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypeemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="进出口--impexpMarkcdemltwo" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="成品、料件标志--mtpckEndprdMarkcdemltwo" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdemltwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 3,&#xd;
  &quot;values&quot;: ${invtHeadTypeemltwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdemltwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;124312444443&quot;,&#xd;
  &quot;bizId&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdemltwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypeemltwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnameeml}&quot;,&#xd;
  &quot;id&quot;: &quot;${heademlid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;impexpMarkcd&quot;: &quot;E&quot;,&#xd;
  &quot;values&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;124312444443&quot;,&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;,&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,&#xd;
    &quot;decType&quot;: &quot;3&quot;,&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;id&quot;: &quot;SCHZ2020051300012&quot;&#xd;
  },&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;appName&quot;: &quot;eml&quot;,&#xd;
  &quot;id&quot;: &quot;SCHZ2020051300012&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/eml/emlInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="保税物流手动新增" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="暂存表头并生成流水号" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,  //&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,  //手账册号&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,   //经营单位编码&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,//经营单位18位代码&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;, //经营单位名称&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,//加工单位编码&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,//加工单位18位&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,//加工单位名称&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,//申报单位编码&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,//申报单位18位&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,//申报单位名称&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,//录入单位编码&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,//录入单位18位编码&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,//录入单位名称&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;JGHZZ2020050600128&quot;,//企业内部编码&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,//录入日期&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,//料件，成品&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,//监管方式&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,//运输方式&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,//进境关别&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,//主管海关&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,//启运国(地区)&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,//报关标志&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,//是否系统生成报关单&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,//报关类型&#xd;
    &quot;decType&quot;: &quot;3&quot;,//&#xd;
    &quot;corrEntryDclEtpsNo&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsSccd&quot;: &quot;&quot;,//&#xd;
    &quot;corrEntryDclEtpsNm&quot;: &quot;&quot;,//&#xd;
    &quot;rltInvtNo&quot;: &quot;11111&quot;,//关联清单编号&#xd;
    &quot;rltPutrecNo&quot;: &quot;2222&quot;,//关联手(账)册备案号&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;4565467123&quot;,//关联报关单境内收发货人编码&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,//关联报关单境内收发货人社会信用代码&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,//关联报关单境内收发货人名称&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,//关联报关单生产销售(消费使用)单位信用代码&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,//关联报关单生产销售(消费使用)单位编码&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,//关联报关单申报单位编码&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,//关联报关单申报单位信用代码&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;//关联报关单申报单位名称&#xd;
  },&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">headbwsid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号更改表头" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;entrustCompanyId&quot;: &quot;&quot;,&#xd;
    &quot;invtType&quot;: &quot;0&quot;,&#xd;
    &quot;putrecNo&quot;: &quot;412341243414&quot;,&#xd;
    &quot;bizopEtpsno&quot;: &quot;4565467444&quot;,&#xd;
    &quot;bizopEtpsSccd&quot;: &quot;456546744445654674&quot;,&#xd;
    &quot;bizopEtpsNm&quot;: &quot;hz_001&quot;,&#xd;
    &quot;rcvgdEtpsno&quot;: &quot;4565467111&quot;,&#xd;
    &quot;rvsngdEtpsSccd&quot;: &quot;45654674444511111&quot;,&#xd;
    &quot;rcvgdEtpsNm&quot;: &quot;hz_00111&quot;,&#xd;
    &quot;dclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;dclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;dclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;inputCode&quot;: &quot;4143443343&quot;,&#xd;
    &quot;inputCreditCode&quot;: &quot;414344334341434431&quot;,&#xd;
    &quot;inputName&quot;: &quot;0215测试001&quot;,&#xd;
    &quot;etpsInnerInvtNo&quot;: &quot;bws2020050600128&quot;,&#xd;
    &quot;inputTime&quot;: &quot;20200507&quot;,&#xd;
    &quot;mtpckEndprdMarkcd&quot;: &quot;E&quot;,&#xd;
    &quot;supvModecd&quot;: &quot;1039&quot;,&#xd;
    &quot;trspModecd&quot;: &quot;1&quot;,&#xd;
    &quot;impexpPortcd&quot;: &quot;1501&quot;,&#xd;
    &quot;dclPlcCuscd&quot;: &quot;1511&quot;,&#xd;
    &quot;stshipTrsarvNatcd&quot;: &quot;138&quot;,&#xd;
    &quot;dclcusFlag&quot;: &quot;1&quot;,&#xd;
    &quot;genDecFlag&quot;: &quot;2&quot;,&#xd;
    &quot;dclcusTypecd&quot;: &quot;1&quot;,&#xd;
    &quot;decType&quot;: &quot;1&quot;,&#xd;
    &quot;rltInvtNo&quot;: &quot;333333&quot;,&#xd;
    &quot;rltPutrecNo&quot;: &quot;3333333&quot;,&#xd;
    &quot;rltEntryBizopEtpsno&quot;: &quot;45654671231&quot;,&#xd;
    &quot;rltEntryBizopEtpsSccd&quot;: &quot;424341441&quot;,&#xd;
    &quot;rltEntryBizopEtpsNm&quot;: &quot;hz_2341&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsno&quot;: &quot;1121567897&quot;,&#xd;
    &quot;rltEntryRvsngdEtpsSccd&quot;: &quot;121416789712345678&quot;,&#xd;
    &quot;rltEntryRcvgdEtpsNm&quot;: &quot;安捷32141&quot;,&#xd;
    &quot;rltEntryDclEtpsno&quot;: &quot;1234141343&quot;,&#xd;
    &quot;rltEntryDclEtpsSccd&quot;: &quot;123414134312341413&quot;,&#xd;
    &quot;rltEntryDclEtpsNm&quot;: &quot;jc_test001&quot;,&#xd;
    &quot;rmk&quot;: &quot;撒地方备注&quot;,&#xd;
    &quot;id&quot;: &quot;${headbwsid}&quot;&#xd;
  },&#xd;
&#xd;
  &quot;source&quot;: 2,&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;, //进出口类型&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;customsBroker&quot;: &quot;${standardOrganizationNames}&quot;, //报关行名称&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;, //组织id&#xd;
  &quot;agentCompanyId&quot;: &quot;&quot;,&#xd;
  &quot;agentCompany&quot;: &quot;&quot;,&#xd;
  &quot;edgeAppId&quot;: &quot;0&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;  //模块&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/headType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提交生成存流水号" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">headbwsid</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="根据流水号暂存表体" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;data&quot;: {&#xd;
    &quot;secdLawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;secdLawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;putrecSeqno&quot;: &quot;1234124&quot;,&#xd;
    &quot;gdsMtno&quot;: &quot;23414141414&quot;,&#xd;
    &quot;entryGdsSeqno&quot;: &quot;123414124&quot;,&#xd;
    &quot;applyTbSeqno&quot;: &quot;1341&quot;,&#xd;
    &quot;gdecd&quot;: &quot;1234141444&quot;,&#xd;
    &quot;gdsNm&quot;: &quot;骑单车&quot;,&#xd;
    &quot;gdsSpcfModelDesc&quot;: &quot; LP54+LS15&quot;,&#xd;
    &quot;dclCurrcd&quot;: &quot;142&quot;,&#xd;
    &quot;dclUnitcd&quot;: &quot;120&quot;,&#xd;
    &quot;lawfUnitcd&quot;: &quot;111&quot;,&#xd;
    &quot;dclQty&quot;: &quot;123&quot;,&#xd;
    &quot;lawfQty&quot;: &quot;12&quot;,&#xd;
    &quot;dclUprcAmt&quot;: &quot;123&quot;,&#xd;
    &quot;dclTotalAmt&quot;: &quot;15129.00&quot;,&#xd;
    &quot;natcd&quot;: &quot;110&quot;,&#xd;
    &quot;destinationNatcd&quot;: &quot;101&quot;,&#xd;
    &quot;lvyrlfModecd&quot;: &quot;3&quot;,&#xd;
    &quot;ucnsVerno&quot;: &quot;3241&quot;,&#xd;
    &quot;rmk&quot;: &quot;23414&quot;&#xd;
  },&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/listType/save</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">listbwszero</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="TestPlan.comments">获取表体id</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否存在表体数据" enabled="true">
              <stringProp name="TestPlan.comments">判断获取的表体数量是否为空</stringProp>
              <stringProp name="IfController.condition">${__jexl3(${listbwszero_matchNr}!=0,)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复制表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listbwszero}&quot; //id，根据id进行复制&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/copy</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="700170008">复制成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="827564012">查询成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">invtlisttypebwsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器id" enabled="true">
                  <stringProp name="TestPlan.comments">获取一个表体id</stringProp>
                  <stringProp name="JSONPostProcessor.referenceNames">listbwsone</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType[*].id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="同步表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;invtListType&quot;: ${invtlisttypebwsone},&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/updateBatchInvtList</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="635285210">修改成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除表体" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;ids&quot;: [&#xd;
    &quot;${listbwsone}&quot;&#xd;
  ],&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
                <stringProp name="HTTPSampler.port">${myPort}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
                <stringProp name="HTTPSampler.path">api/customs/invt/listType/delete</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="664123859">删除成功</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypebwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypebwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdbwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdbwstwo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交下一步" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;source&quot;: 2,  //1.识别；2.手动新增&#xd;
  &quot;values&quot;: ${invtHeadTypebwstwo},&#xd;
&#xd;
  &quot;impexpMarkcdAdd&quot;: &quot;${impexpMarkcdbwstwo}&quot;,&#xd;
  &quot;putrecNo&quot;: &quot;2341244&quot;,&#xd;
  &quot;bizId&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;mtpckEndprdMarkcd&quot;: &quot;${mtpckEndprdMarkcdbwstwo}&quot;,&#xd;
  &quot;invtList&quot;:${invtlisttypebwstwo},&#xd;
  &quot;state&quot;: &quot;1&quot;,  //1：；2：&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;customsBrokerId&quot;: &quot;${standardOrganizationIds}&quot;,  //报关行id&#xd;
  &quot;projectId&quot;: &quot;${organizationIdsnow}&quot;  //组织id&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/approval</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="驳回" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/rejectInvt</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="632348394">保存成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="表头表体数据" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;,&#xd;
  &quot;listPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 2&#xd;
  },&#xd;
  &quot;draftPaging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;firstPage&quot;: 1,&#xd;
    &quot;lastPage&quot;: 1,&#xd;
    &quot;nextPage&quot;: 1,&#xd;
    &quot;offset&quot;: 0,&#xd;
    &quot;orderBy&quot;: &quot;&quot;,&#xd;
    &quot;pageCount&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10,&#xd;
    &quot;previousPage&quot;: 1,&#xd;
    &quot;total&quot;: 0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/invt/findDetail</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="827564012">查询成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表体" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtlisttypebwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtListType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器表头" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">invtHeadTypebwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="TestPlan.comments">获取表体同步参数</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器进出口" enabled="true">
                <stringProp name="TestPlan.comments">获取进出口类型</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">impexpMarkcdbwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.impexpMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器成品、料件标志" enabled="true">
                <stringProp name="TestPlan.comments">提取器成品、料件标志</stringProp>
                <stringProp name="JSONPostProcessor.referenceNames">mtpckEndprdMarkcdbwsthree</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.invtHeadType.mtpckEndprdMarkcd</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交单一窗口" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
{&#xd;
  &quot;id&quot;: &quot;${headbwsid}&quot;,  //流水号&#xd;
  &quot;impexpMarkcd&quot;: &quot;I&quot;,  //进出口类型&#xd;
  &quot;decType&quot;: &quot;1&quot;,   //&#xd;
  &quot;dclcusTypecd&quot;: &quot;1&quot;,  //&#xd;
  &quot;appName&quot;: &quot;${appnamebws}&quot;  //模块&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
              <stringProp name="HTTPSampler.port">${myPort}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
              <stringProp name="HTTPSampler.path">api/customs/sas/sasInvtChinaPortController/sendMessage</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="781365859">提交成功</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="海关特殊核放单" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="保税物流核放单" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="新建报关行事务" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建报关行" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;${icCardname}&quot;,//名称&#xd;
  &quot;operCusRegcode&quot;: &quot;${operCusRegcode}&quot;,//海关编码&#xd;
  &quot;sccd&quot;: &quot;${sccdcode}&quot;,//企业十八位信用代码&#xd;
  &quot;hdModel&quot;: 0,&#xd;
  &quot;type&quot;: 3,//新建公司类型&#xd;
  &quot;fileData&quot;: &quot;&quot;,&#xd;
  &quot;adminName&quot;: &quot;${icCardname}&quot;,//账号&#xd;
  &quot;clientNo&quot;: &quot;${operCusRegcode}&quot;,//客户端编号&#xd;
  &quot;icCardNo&quot;: &quot;${icCardNo}&quot;,//操作卡号&#xd;
  &quot;sendAddress&quot;: &quot;5671&quot;,&#xd;
  &quot;sendVirhost&quot;: &quot;/&quot;,&#xd;
  &quot;exchange&quot;: &quot;&quot;,&#xd;
  &quot;sendQuene&quot;: &quot;&quot;,&#xd;
  &quot;recvAddress&quot;: &quot;5671&quot;,&#xd;
  &quot;recvVirhost&quot;: &quot;/&quot;,&#xd;
  &quot;recvQuene&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysCustomsBrokerCore/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询报关行名称--${icCardname}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;paging&quot;: {&#xd;
    &quot;total&quot;: &quot;&quot;,&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysCustomsBrokerCore/queryAll</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">bghname</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[0].name</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${icCardname}&quot;,&#xd;
// &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
  &quot;password&quot;: &quot;123456&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshTokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取员工信息" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//用户id获取员工信息&#xd;
  &quot;id&quot;: &quot;${accountIdone}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/findOne</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">员工所属报关行、组织、权限</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-115307114">查询成功。</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行name" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationNameone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationName</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器组织id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">organizationIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.organizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="JSONPostProcessor.defaultValues">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器报关行id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">standardOrganizationIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.standardOrganizationId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建角色" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;&quot;,&#xd;
  &quot;status&quot;: &quot;1&quot;,&#xd;
  &quot;memberText&quot;: &quot;&quot;,&#xd;
  &quot;type&quot;: &quot;3&quot;,&#xd;
  &quot;organizationUnitId&quot;: &quot;${standardOrganizationIdone}&quot;,//&#xd;
  &quot;parentId&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,&#xd;
  &quot;name&quot;: &quot;测试001&quot;,&#xd;
  &quot;remark&quot;: &quot;测试角色&quot;,&#xd;
  &quot;permission&quot;: [&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;系统管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;字典表管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000101&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000102&quot;,&#xd;
          &quot;name&quot;: &quot;新增字典信息&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000103&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000104&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;字典表管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;商品预归类&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000003&quot;,&#xd;
          &quot;name&quot;: &quot;所有归类文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000004&quot;,&#xd;
          &quot;name&quot;: &quot;归类失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000005&quot;,&#xd;
          &quot;name&quot;: &quot;归类中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000006&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000007&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000008&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000010&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000011&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000012&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-010100000013&quot;,&#xd;
          &quot;name&quot;: &quot;查看&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010100000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;商品智能预归类&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010200000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-010100000002&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;申报要素库&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-010200000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;团队管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001001&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001002&quot;,&#xd;
          &quot;name&quot;: &quot;新建企业&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001003&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0007-0001-020000001004&quot;,&#xd;
          &quot;name&quot;: &quot;重置密码&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000001000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;企业管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-020000002001&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-020000002004&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0000-020000002005&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0007-0001-020000002000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;组织架构&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-020000003000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;角色权限&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;公众号管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;消息管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;推文管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;粉丝管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0007-0001-030400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;岗位管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0007-0001-030000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;海关特殊监管区域&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000012&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000013&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000014&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-010000000017&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-020000000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册报核&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000007&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-030000000018&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;物流账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-040000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-050000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-060000000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-060000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070100000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;一线一体化进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070200000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;二线进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070300000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;非报关进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070400000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;卡口登记货物&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070500000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;空车核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070600000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;先入区后报关&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000005&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000006&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070700000007&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;车辆管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000001&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000002&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000004&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000005&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000006&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000007&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0006-070800000008&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0006-080000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0006-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;保税物流管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-010000000018&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;物流账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-030000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-040000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-050000000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-050000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070100000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;一线一体化进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000007&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000008&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070200000009&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;二线进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070300000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;非报关进出区&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000007&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000008&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070400000009&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;卡口登记货物&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000007&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070500000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;空车核放单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000005&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000006&quot;,&#xd;
          &quot;name&quot;: &quot;申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000007&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000008&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070600000009&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;先入区后报关&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000001&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000002&quot;,&#xd;
          &quot;name&quot;: &quot;新建&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000003&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000005&quot;,&#xd;
          &quot;name&quot;: &quot;编辑&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000006&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070700000007&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070700000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;车辆管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000001&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000002&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000004&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000005&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000006&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000007&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0005-070800000008&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070800000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核放单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-070000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0005-080000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;物流账册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0005-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;区外加工贸易&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工账册管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000003&quot;,&#xd;
          &quot;name&quot;: &quot;已提交企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000004&quot;,&#xd;
          &quot;name&quot;: &quot;已申报企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000005&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000006&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000008&quot;,&#xd;
          &quot;name&quot;: &quot;新建企业&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000009&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000010&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000011&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000012&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000013&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010100000015&quot;,&#xd;
          &quot;name&quot;: &quot;已回执企业资质申请&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;企业资质申请&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有账册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000009&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000010&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000011&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000012&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000013&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000014&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000015&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000016&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010200000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建账册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010300000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册报核&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010400000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010500000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0001-010600000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010600000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-010000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-010700000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易账册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0001-020600000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易手册平账&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工手册管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册编号&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建手册信息(列表)&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000011&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000012&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000013&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000014&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020100000017&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020100000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易手册&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000004&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000005&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000006&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000007&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000010&quot;,&#xd;
          &quot;name&quot;: &quot;新建手册报核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000011&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000012&quot;,&#xd;
          &quot;name&quot;: &quot;新增&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000013&quot;,&#xd;
          &quot;name&quot;: &quot;暂存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000014&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000015&quot;,&#xd;
          &quot;name&quot;: &quot;导入&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000016&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020200000017&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020200000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;加工贸易手册报核&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020300000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020300000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（进口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000002&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000003&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000004&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000006&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000007&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000008&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000009&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000010&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000011&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000012&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000013&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000014&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000015&quot;,&#xd;
          &quot;name&quot;: &quot;提交至下一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000016&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020400000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020400000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单（出口）&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000002&quot;,&#xd;
          &quot;name&quot;: &quot;待提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000003&quot;,&#xd;
          &quot;name&quot;: &quot;提交中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000004&quot;,&#xd;
          &quot;name&quot;: &quot;提交失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000005&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000006&quot;,&#xd;
          &quot;name&quot;: &quot;已提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000007&quot;,&#xd;
          &quot;name&quot;: &quot;已申报&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000008&quot;,&#xd;
          &quot;name&quot;: &quot;已回执&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000009&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000010&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000011&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000012&quot;,&#xd;
          &quot;name&quot;: &quot;提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000013&quot;,&#xd;
          &quot;name&quot;: &quot;驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000014&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000015&quot;,&#xd;
          &quot;name&quot;: &quot;修改&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000016&quot;,&#xd;
          &quot;name&quot;: &quot;保存&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000017&quot;,&#xd;
          &quot;name&quot;: &quot;驳回至上一步&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000018&quot;,&#xd;
          &quot;name&quot;: &quot;通过并提交&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000019&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0002-0002-020500000020&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020500000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;核注清单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0002-0002-020000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;客户管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000001&quot;,&#xd;
          &quot;name&quot;: &quot;所有客户&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000002&quot;,&#xd;
          &quot;name&quot;: &quot;OCR新增待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000003&quot;,&#xd;
          &quot;name&quot;: &quot;全部已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000004&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;高级搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;新增客户信息&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;修改信息&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;分配组织&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0009-0001-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;导入客户&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0009-0001-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;主页&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;企业基础信息&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;应用平台管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;报关行管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0009-0001-050000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;字典管理&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0009-0001-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000005&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000006&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000007&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000008&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000009&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000010&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000011&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000012&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000013&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000014&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000015&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物申报制单(进口)&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000016&quot;,&#xd;
          &quot;name&quot;: &quot;所有制单&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000017&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000018&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000019&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000020&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000021&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000022&quot;,&#xd;
          &quot;name&quot;: &quot;识别失败&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000023&quot;,&#xd;
          &quot;name&quot;: &quot;制单中&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000024&quot;,&#xd;
          &quot;name&quot;: &quot;待审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000025&quot;,&#xd;
          &quot;name&quot;: &quot;已审核&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-010000000026&quot;,&#xd;
          &quot;name&quot;: &quot;已驳回&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-010000000001&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物申报制单(出口)&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000002&quot;,&#xd;
          &quot;name&quot;: &quot;搜索&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000003&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000004&quot;,&#xd;
          &quot;name&quot;: &quot;查看&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000005&quot;,&#xd;
          &quot;name&quot;: &quot;导出&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000006&quot;,&#xd;
          &quot;name&quot;: &quot;下载&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000007&quot;,&#xd;
          &quot;name&quot;: &quot;打印&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000008&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000014&quot;,&#xd;
          &quot;name&quot;: &quot;复制&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-020000000015&quot;,&#xd;
          &quot;name&quot;: &quot;准时达&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-020000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;货物报关单申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000002&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000003&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000005&quot;,&#xd;
          &quot;name&quot;: &quot;上传文件&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-030000000006&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-030000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;减免税制单&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000002&quot;,&#xd;
          &quot;name&quot;: &quot;批量删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000003&quot;,&#xd;
          &quot;name&quot;: &quot;查询&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000004&quot;,&#xd;
          &quot;name&quot;: &quot;重置&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        },&#xd;
        {&#xd;
          &quot;children&quot;: [&#xd;
            &#xd;
          ],&#xd;
          &quot;id&quot;: &quot;00000000-0006-0000-0002-040000000005&quot;,&#xd;
          &quot;name&quot;: &quot;删除&quot;,&#xd;
          &quot;parentId&quot;: &quot;00000000-0006-0000-0002-040000000000&quot;,&#xd;
          &quot;type&quot;: &quot;action&quot;,&#xd;
          &quot;virchildren&quot;: [&#xd;
            &#xd;
          ]&#xd;
        }&#xd;
      ],&#xd;
      &quot;name&quot;: &quot;减免税申报&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0002-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0011-000000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;经营分析&quot;,&#xd;
      &quot;parentId&quot;: &quot;#&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;id&quot;: &quot;00000000-0006-0000-0011-010000000000&quot;,&#xd;
      &quot;virchildren&quot;: [&#xd;
        &#xd;
      ],&#xd;
      &quot;name&quot;: &quot;经营分析&quot;,&#xd;
      &quot;parentId&quot;: &quot;00000000-0006-0000-0011-000000000000&quot;,&#xd;
      &quot;type&quot;: &quot;function&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysRole/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建组织" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;status&quot;: 1,&#xd;
  &quot;type&quot;: &quot;1&quot;,&#xd;
  &quot;parentId&quot;: &quot;${standardOrganizationIdone}&quot;,&#xd;
  &quot;name&quot;: &quot;${icCardNo}&quot;,&#xd;
  &quot;remark&quot;: &quot;组织备注&quot;,&#xd;
  &quot;originalName&quot;: &quot;${idcode}&quot;,&#xd;
  &quot;globalName&quot;: &quot;${idcode}&quot;,&#xd;
  &quot;originalGlobalName&quot;: &quot;${idcode}&quot;,&#xd;
  &quot;standardOrganizationUnitId&quot;: &quot;${standardOrganizationIdone}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/organizationUnit/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="632348394">保存成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询角色" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;paging&quot;: {&#xd;
    &quot;currentPage&quot;: 1,&#xd;
    &quot;pageSize&quot;: 10&#xd;
  },&#xd;
  &quot;query&quot;: {&#xd;
    &quot;where&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;organization_unit_id&quot;,&#xd;
        &quot;value&quot;: &quot;${standardOrganizationIdone}&quot;&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/membership/role/query</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="827564012">查询成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">authorizationObjectId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.[0].authorizationObjectId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新建员工" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;&quot;,&#xd;
  &quot;status&quot;: &quot;1&quot;,&#xd;
  &quot;organizationId&quot;: &quot;${standardOrganizationIdone}&quot;,&#xd;
  &quot;standardOrganizationId&quot;: &quot;${standardOrganizationIdone}&quot;,&#xd;
  &quot;standardOrganizationName&quot;: &quot;${standardOrganizationNameone}&quot;,//最高组织名称&#xd;
  &quot;loginName&quot;: &quot;${operCusRegcode}&quot;,//账号&#xd;
  &quot;password&quot;: &quot;123456&quot;,//密码&#xd;
  &quot;organizationName&quot;: &quot;${standardOrganizationNameone}&quot;,//&#xd;
  &quot;approve&quot;: 1,&#xd;
  &quot;roleId&quot;: [&#xd;
    &quot;${authorizationObjectId}&quot;&#xd;
  ],&#xd;
  &quot;name&quot;: &quot;发电房&quot;,//姓名&#xd;
  &quot;link&quot;: &quot;1345541&quot;//电话&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/customs/core/sysUser/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1906943542">新增员工成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${operCusRegcode} --rpa登陆" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  //账号密码&#xd;
  &quot;loginName&quot;: &quot;${operCusRegcode}&quot;,&#xd;
// &quot;password&quot;: &quot;${password}&quot;,&#xd;
   //账号密码&#xd;
  &quot;password&quot;: &quot;123456&quot;,&#xd;
  &quot;returnUrl&quot;: &quot;/home&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/authorize</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="941359866">登陆成功</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器accountId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">accountIdone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.accountId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器refreshToken" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">refreshTokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.refreshToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON提取器token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">tokenone</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="退出事务" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rpa退出" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	//通过当前用户的token退出&#xd;
	&quot;accessToken&quot;:&quot;${token}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${myHost}</stringProp>
            <stringProp name="HTTPSampler.port">${myPort}</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">${myCoding}</stringProp>
            <stringProp name="HTTPSampler.path">api/connect/auth/logout</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="769363145">成功退出</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
