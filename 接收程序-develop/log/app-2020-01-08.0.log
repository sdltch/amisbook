2020-01-08 16:32:20.786 [main][INFO ] c.a.customs.sync.worker.App          org.springframework.boot.StartupInfoLogger[50]: Starting App v1.0 on RuanYu-Laptop with PID 14860 (E:\repositories\customs\amiintellect-customs-sync\bin\customs-sync-worker-develop\amiintellect-customs-sync-worker-1.0.jar started by RuanYu in E:\repositories\customs\amiintellect-customs-sync\bin\customs-sync-worker-develop)
2020-01-08 16:32:20.791 [main][DEBUG] c.a.customs.sync.worker.App          org.springframework.boot.StartupInfoLogger[53]: Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2020-01-08 16:32:20.793 [main][INFO ] c.a.customs.sync.worker.App          org.springframework.boot.SpringApplication[663]: The following profiles are active: prod
2020-01-08 16:32:22.179 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/digitalnumber/mappers/DigitalNumberMapper.class]
2020-01-08 16:32:22.180 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationSettingGroupMapper.class]
2020-01-08 16:32:22.181 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationMethodMapper.class]
2020-01-08 16:32:22.181 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationSettingMapper.class]
2020-01-08 16:32:22.182 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationEventMapper.class]
2020-01-08 16:32:22.182 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationFeatureMapper.class]
2020-01-08 16:32:22.182 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationOptionMapper.class]
2020-01-08 16:32:22.183 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationMapper.class]
2020-01-08 16:32:22.183 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationMenuMapper.class]
2020-01-08 16:32:22.184 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectCallMapper.class]
2020-01-08 16:32:22.184 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectAuthorizationCodeMapper.class]
2020-01-08 16:32:22.184 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectMapper.class]
2020-01-08 16:32:22.185 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectAccessTokenMapper.class]
2020-01-08 16:32:22.185 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/StandardRoleMapper.class]
2020-01-08 16:32:22.185 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AccountBindingMapper.class]
2020-01-08 16:32:22.186 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/GroupMapper.class]
2020-01-08 16:32:22.186 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/StandardOrganizationUnitMapper.class]
2020-01-08 16:32:22.187 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AccountLogMapper.class]
2020-01-08 16:32:22.187 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/OrganizationMapper.class]
2020-01-08 16:32:22.187 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AccountMapper.class]
2020-01-08 16:32:22.188 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/RoleMapper.class]
2020-01-08 16:32:22.188 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/OrganizationUnitMapper.class]
2020-01-08 16:32:22.189 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/UserMapper.class]
2020-01-08 16:32:22.189 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AuthorizationObjectMapper.class]
2020-01-08 16:32:22.190 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-sessions-0.1.0-SNAPSHOT.jar!/com/x3platform/sessions/mappers/TicketMapper.class]
2020-01-08 16:32:22.190 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-sync-0.1.0-SNAPSHOT.jar!/com/x3platform/sync/mappers/SyncQueueMapper.class]
2020-01-08 16:32:22.190 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-sync-0.1.0-SNAPSHOT.jar!/com/x3platform/sync/mappers/SyncSettingMapper.class]
2020-01-08 16:32:22.190 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-sync-0.1.0-SNAPSHOT.jar!/com/x3platform/sync/mappers/SyncPkgMapper.class]
2020-01-08 16:32:22.195 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/data/storages/mappers/DataStorageNodeMapper.class]
2020-01-08 16:32:22.198 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/data/storages/mappers/DataStorageSchemaMapper.class]
2020-01-08 16:32:22.200 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/security/authority/mappers/AuthorityMapper.class]
2020-01-08 16:32:22.200 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/security/verificationcode/mappers/VerificationCodeMapper.class]
2020-01-08 16:32:22.208 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/B2bImportMapper.class]
2020-01-08 16:32:22.208 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/B2bMessageHeadMapper.class]
2020-01-08 16:32:22.210 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/SasInvtHeadTypeMapper.class]
2020-01-08 16:32:22.210 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/SasInvtListTypeMapper.class]
2020-01-08 16:32:22.215 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'digitalNumberMapper' and 'com.x3platform.digitalnumber.mappers.DigitalNumberMapper' mapperInterface
2020-01-08 16:32:22.216 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'digitalNumberMapper'.
2020-01-08 16:32:22.216 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationSettingGroupMapper' and 'com.x3platform.apps.mappers.ApplicationSettingGroupMapper' mapperInterface
2020-01-08 16:32:22.216 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationSettingGroupMapper'.
2020-01-08 16:32:22.217 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationMethodMapper' and 'com.x3platform.apps.mappers.ApplicationMethodMapper' mapperInterface
2020-01-08 16:32:22.217 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationMethodMapper'.
2020-01-08 16:32:22.219 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationSettingMapper' and 'com.x3platform.apps.mappers.ApplicationSettingMapper' mapperInterface
2020-01-08 16:32:22.220 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationSettingMapper'.
2020-01-08 16:32:22.221 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationEventMapper' and 'com.x3platform.apps.mappers.ApplicationEventMapper' mapperInterface
2020-01-08 16:32:22.221 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationEventMapper'.
2020-01-08 16:32:22.221 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationFeatureMapper' and 'com.x3platform.apps.mappers.ApplicationFeatureMapper' mapperInterface
2020-01-08 16:32:22.222 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationFeatureMapper'.
2020-01-08 16:32:22.222 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationOptionMapper' and 'com.x3platform.apps.mappers.ApplicationOptionMapper' mapperInterface
2020-01-08 16:32:22.222 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationOptionMapper'.
2020-01-08 16:32:22.223 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationMapper' and 'com.x3platform.apps.mappers.ApplicationMapper' mapperInterface
2020-01-08 16:32:22.223 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationMapper'.
2020-01-08 16:32:22.223 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationMenuMapper' and 'com.x3platform.apps.mappers.ApplicationMenuMapper' mapperInterface
2020-01-08 16:32:22.224 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationMenuMapper'.
2020-01-08 16:32:22.227 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectCallMapper' and 'com.x3platform.connect.mappers.ConnectCallMapper' mapperInterface
2020-01-08 16:32:22.230 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectCallMapper'.
2020-01-08 16:32:22.230 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectAuthorizationCodeMapper' and 'com.x3platform.connect.mappers.ConnectAuthorizationCodeMapper' mapperInterface
2020-01-08 16:32:22.231 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectAuthorizationCodeMapper'.
2020-01-08 16:32:22.232 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectMapper' and 'com.x3platform.connect.mappers.ConnectMapper' mapperInterface
2020-01-08 16:32:22.232 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectMapper'.
2020-01-08 16:32:22.232 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectAccessTokenMapper' and 'com.x3platform.connect.mappers.ConnectAccessTokenMapper' mapperInterface
2020-01-08 16:32:22.233 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectAccessTokenMapper'.
2020-01-08 16:32:22.234 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'standardRoleMapper' and 'com.x3platform.membership.mappers.StandardRoleMapper' mapperInterface
2020-01-08 16:32:22.234 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'standardRoleMapper'.
2020-01-08 16:32:22.234 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'accountBindingMapper' and 'com.x3platform.membership.mappers.AccountBindingMapper' mapperInterface
2020-01-08 16:32:22.235 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'accountBindingMapper'.
2020-01-08 16:32:22.235 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'groupMapper' and 'com.x3platform.membership.mappers.GroupMapper' mapperInterface
2020-01-08 16:32:22.235 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'groupMapper'.
2020-01-08 16:32:22.236 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'standardOrganizationUnitMapper' and 'com.x3platform.membership.mappers.StandardOrganizationUnitMapper' mapperInterface
2020-01-08 16:32:22.236 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'standardOrganizationUnitMapper'.
2020-01-08 16:32:22.237 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'accountLogMapper' and 'com.x3platform.membership.mappers.AccountLogMapper' mapperInterface
2020-01-08 16:32:22.237 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'accountLogMapper'.
2020-01-08 16:32:22.237 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'organizationMapper' and 'com.x3platform.membership.mappers.OrganizationMapper' mapperInterface
2020-01-08 16:32:22.239 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'organizationMapper'.
2020-01-08 16:32:22.240 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'accountMapper' and 'com.x3platform.membership.mappers.AccountMapper' mapperInterface
2020-01-08 16:32:22.240 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'accountMapper'.
2020-01-08 16:32:22.240 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'roleMapper' and 'com.x3platform.membership.mappers.RoleMapper' mapperInterface
2020-01-08 16:32:22.240 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'roleMapper'.
2020-01-08 16:32:22.241 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'organizationUnitMapper' and 'com.x3platform.membership.mappers.OrganizationUnitMapper' mapperInterface
2020-01-08 16:32:22.241 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'organizationUnitMapper'.
2020-01-08 16:32:22.241 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'userMapper' and 'com.x3platform.membership.mappers.UserMapper' mapperInterface
2020-01-08 16:32:22.241 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2020-01-08 16:32:22.242 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'authorizationObjectMapper' and 'com.x3platform.membership.mappers.AuthorizationObjectMapper' mapperInterface
2020-01-08 16:32:22.242 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'authorizationObjectMapper'.
2020-01-08 16:32:22.242 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'ticketMapper' and 'com.x3platform.sessions.mappers.TicketMapper' mapperInterface
2020-01-08 16:32:22.242 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'ticketMapper'.
2020-01-08 16:32:22.243 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'syncQueueMapper' and 'com.x3platform.sync.mappers.SyncQueueMapper' mapperInterface
2020-01-08 16:32:22.243 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'syncQueueMapper'.
2020-01-08 16:32:22.243 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'syncSettingMapper' and 'com.x3platform.sync.mappers.SyncSettingMapper' mapperInterface
2020-01-08 16:32:22.243 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'syncSettingMapper'.
2020-01-08 16:32:22.244 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'syncPkgMapper' and 'com.x3platform.sync.mappers.SyncPkgMapper' mapperInterface
2020-01-08 16:32:22.244 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'syncPkgMapper'.
2020-01-08 16:32:22.244 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'dataStorageNodeMapper' and 'com.x3platform.data.storages.mappers.DataStorageNodeMapper' mapperInterface
2020-01-08 16:32:22.244 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'dataStorageNodeMapper'.
2020-01-08 16:32:22.244 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'dataStorageSchemaMapper' and 'com.x3platform.data.storages.mappers.DataStorageSchemaMapper' mapperInterface
2020-01-08 16:32:22.245 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'dataStorageSchemaMapper'.
2020-01-08 16:32:22.245 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'authorityMapper' and 'com.x3platform.security.authority.mappers.AuthorityMapper' mapperInterface
2020-01-08 16:32:22.245 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'authorityMapper'.
2020-01-08 16:32:22.245 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'verificationCodeMapper' and 'com.x3platform.security.verificationcode.mappers.VerificationCodeMapper' mapperInterface
2020-01-08 16:32:22.246 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'verificationCodeMapper'.
2020-01-08 16:32:22.246 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'b2bImportMapper' and 'com.amiintellect.customs.b2b.mappers.B2bImportMapper' mapperInterface
2020-01-08 16:32:22.246 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'b2bImportMapper'.
2020-01-08 16:32:22.246 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'b2bMessageHeadMapper' and 'com.amiintellect.customs.b2b.mappers.B2bMessageHeadMapper' mapperInterface
2020-01-08 16:32:22.246 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'b2bMessageHeadMapper'.
2020-01-08 16:32:22.247 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'sasInvtHeadTypeMapper' and 'com.amiintellect.customs.b2b.mappers.SasInvtHeadTypeMapper' mapperInterface
2020-01-08 16:32:22.247 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'sasInvtHeadTypeMapper'.
2020-01-08 16:32:22.247 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'sasInvtListTypeMapper' and 'com.amiintellect.customs.b2b.mappers.SasInvtListTypeMapper' mapperInterface
2020-01-08 16:32:22.247 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'sasInvtListTypeMapper'.
2020-01-08 16:32:22.250 [main][INFO ] com.x3platform.InternalLogger        com.x3platform.data.DynamicDataSourceRegister[97]: Dynamic DataSource Registry
2020-01-08 16:32:25.044 [main][DEBUG] o.m.spring.SqlSessionFactoryBean     org.mybatis.spring.SqlSessionFactoryBean[534]: Property 'mapperLocations' was not specified or no matching resources found
2020-01-08 16:32:25.365 [main][INFO ] com.x3platform.InternalLogger        com.x3platform.SpringContext[18]: Spring ApplicationContext registered
2020-01-08 16:32:25.417 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig[68]: RabbitMQ 开始建立连接。
2020-01-08 16:32:25.445 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig[77]: RabbitMQ 建立完成。
2020-01-08 16:32:27.521 [main][INFO ] com.x3platform.InternalLogger        com.x3platform.KernelContext[101]: AuthenticationManagementType:com.x3platform.security.authentication.LocalAuthenticationManagement
2020-01-08 16:32:30.383 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.listeners.SchedulerApplicationListener[32]: Scheduler:scheduler 已启动。
2020-01-08 16:32:30.899 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[133]: RabbitMQ 获取到连接参数:{isCloud=false, rabbitAddress=rabbit.amiintellect.com, rabbitPort=5672, rabbitPassword=rabbit#6f4b83a6, rabbitUsername=rabbitadmin, rabbitVirtualHost=/, syncReveiceQueneName=10000003_5006640002_in_test}
2020-01-08 16:32:30.900 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[135]: RabbitMQ 开始配置参数.
2020-01-08 16:32:30.901 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[142]: RabbitMQ 配置参数完成.
2020-01-08 16:32:31.037 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[147]: RabbitMQ 连接建立完成.
2020-01-08 16:32:31.111 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[153]: RabbitMQ 等待获取数据.
2020-01-08 16:32:31.114 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[242]: RabbitMQ 监听队列中.
2020-01-08 16:32:31.212 [main][INFO ] c.a.customs.sync.worker.App          org.springframework.boot.StartupInfoLogger[59]: Started App in 10.8 seconds (JVM running for 11.341)
2020-01-08 16:32:31.220 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.App[70]: Application com.amiintellect.customs.sync.worker.App 启动成功, 应用端口 0, 耗时 11.195 秒, 加载 Spring 组件 391 个.
Application Path: /E:/repositories/customs/amiintellect-customs-sync/bin/customs-sync-worker-develop/.
Application Version: 1.0.0-build.
2020-01-08 16:38:56.746 [main][INFO ] c.a.customs.sync.worker.App          org.springframework.boot.StartupInfoLogger[50]: Starting App v1.0 on LAPTOP-FM749B11 with PID 18528 (started by Lenovo in D:\amibook\接收程序)
2020-01-08 16:38:56.749 [main][DEBUG] c.a.customs.sync.worker.App          org.springframework.boot.StartupInfoLogger[53]: Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2020-01-08 16:38:56.751 [main][INFO ] c.a.customs.sync.worker.App          org.springframework.boot.SpringApplication[663]: The following profiles are active: prod
2020-01-08 16:38:57.803 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/digitalnumber/mappers/DigitalNumberMapper.class]
2020-01-08 16:38:57.804 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationSettingGroupMapper.class]
2020-01-08 16:38:57.805 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationMethodMapper.class]
2020-01-08 16:38:57.805 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationSettingMapper.class]
2020-01-08 16:38:57.806 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationEventMapper.class]
2020-01-08 16:38:57.807 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationFeatureMapper.class]
2020-01-08 16:38:57.808 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationOptionMapper.class]
2020-01-08 16:38:57.809 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationMapper.class]
2020-01-08 16:38:57.809 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationMenuMapper.class]
2020-01-08 16:38:57.810 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectCallMapper.class]
2020-01-08 16:38:57.811 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectAuthorizationCodeMapper.class]
2020-01-08 16:38:57.812 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectMapper.class]
2020-01-08 16:38:57.814 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectAccessTokenMapper.class]
2020-01-08 16:38:57.819 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/StandardRoleMapper.class]
2020-01-08 16:38:57.819 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AccountBindingMapper.class]
2020-01-08 16:38:57.824 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/GroupMapper.class]
2020-01-08 16:38:57.825 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/StandardOrganizationUnitMapper.class]
2020-01-08 16:38:57.826 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AccountLogMapper.class]
2020-01-08 16:38:57.828 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/OrganizationMapper.class]
2020-01-08 16:38:57.830 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AccountMapper.class]
2020-01-08 16:38:57.831 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/RoleMapper.class]
2020-01-08 16:38:57.832 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/OrganizationUnitMapper.class]
2020-01-08 16:38:57.832 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/UserMapper.class]
2020-01-08 16:38:57.833 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AuthorizationObjectMapper.class]
2020-01-08 16:38:57.834 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-sessions-0.1.0-SNAPSHOT.jar!/com/x3platform/sessions/mappers/TicketMapper.class]
2020-01-08 16:38:57.834 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-sync-0.1.0-SNAPSHOT.jar!/com/x3platform/sync/mappers/SyncQueueMapper.class]
2020-01-08 16:38:57.835 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-sync-0.1.0-SNAPSHOT.jar!/com/x3platform/sync/mappers/SyncSettingMapper.class]
2020-01-08 16:38:57.836 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-sync-0.1.0-SNAPSHOT.jar!/com/x3platform/sync/mappers/SyncPkgMapper.class]
2020-01-08 16:38:57.844 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/data/storages/mappers/DataStorageNodeMapper.class]
2020-01-08 16:38:57.844 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/data/storages/mappers/DataStorageSchemaMapper.class]
2020-01-08 16:38:57.845 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/security/authority/mappers/AuthorityMapper.class]
2020-01-08 16:38:57.846 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/security/verificationcode/mappers/VerificationCodeMapper.class]
2020-01-08 16:38:57.850 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/B2bImportMapper.class]
2020-01-08 16:38:57.850 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/B2bMessageHeadMapper.class]
2020-01-08 16:38:57.851 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/SasInvtHeadTypeMapper.class]
2020-01-08 16:38:57.854 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/SasInvtListTypeMapper.class]
2020-01-08 16:38:57.857 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'digitalNumberMapper' and 'com.x3platform.digitalnumber.mappers.DigitalNumberMapper' mapperInterface
2020-01-08 16:38:57.857 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'digitalNumberMapper'.
2020-01-08 16:38:57.858 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationSettingGroupMapper' and 'com.x3platform.apps.mappers.ApplicationSettingGroupMapper' mapperInterface
2020-01-08 16:38:57.860 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationSettingGroupMapper'.
2020-01-08 16:38:57.860 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationMethodMapper' and 'com.x3platform.apps.mappers.ApplicationMethodMapper' mapperInterface
2020-01-08 16:38:57.862 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationMethodMapper'.
2020-01-08 16:38:57.863 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationSettingMapper' and 'com.x3platform.apps.mappers.ApplicationSettingMapper' mapperInterface
2020-01-08 16:38:57.864 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationSettingMapper'.
2020-01-08 16:38:57.864 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationEventMapper' and 'com.x3platform.apps.mappers.ApplicationEventMapper' mapperInterface
2020-01-08 16:38:57.865 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationEventMapper'.
2020-01-08 16:38:57.866 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationFeatureMapper' and 'com.x3platform.apps.mappers.ApplicationFeatureMapper' mapperInterface
2020-01-08 16:38:57.866 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationFeatureMapper'.
2020-01-08 16:38:57.867 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationOptionMapper' and 'com.x3platform.apps.mappers.ApplicationOptionMapper' mapperInterface
2020-01-08 16:38:57.868 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationOptionMapper'.
2020-01-08 16:38:57.869 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationMapper' and 'com.x3platform.apps.mappers.ApplicationMapper' mapperInterface
2020-01-08 16:38:57.872 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationMapper'.
2020-01-08 16:38:57.873 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationMenuMapper' and 'com.x3platform.apps.mappers.ApplicationMenuMapper' mapperInterface
2020-01-08 16:38:57.877 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationMenuMapper'.
2020-01-08 16:38:57.878 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectCallMapper' and 'com.x3platform.connect.mappers.ConnectCallMapper' mapperInterface
2020-01-08 16:38:57.880 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectCallMapper'.
2020-01-08 16:38:57.880 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectAuthorizationCodeMapper' and 'com.x3platform.connect.mappers.ConnectAuthorizationCodeMapper' mapperInterface
2020-01-08 16:38:57.881 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectAuthorizationCodeMapper'.
2020-01-08 16:38:57.883 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectMapper' and 'com.x3platform.connect.mappers.ConnectMapper' mapperInterface
2020-01-08 16:38:57.887 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectMapper'.
2020-01-08 16:38:57.889 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectAccessTokenMapper' and 'com.x3platform.connect.mappers.ConnectAccessTokenMapper' mapperInterface
2020-01-08 16:38:57.889 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectAccessTokenMapper'.
2020-01-08 16:38:57.890 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'standardRoleMapper' and 'com.x3platform.membership.mappers.StandardRoleMapper' mapperInterface
2020-01-08 16:38:57.890 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'standardRoleMapper'.
2020-01-08 16:38:57.892 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'accountBindingMapper' and 'com.x3platform.membership.mappers.AccountBindingMapper' mapperInterface
2020-01-08 16:38:57.893 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'accountBindingMapper'.
2020-01-08 16:38:57.895 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'groupMapper' and 'com.x3platform.membership.mappers.GroupMapper' mapperInterface
2020-01-08 16:38:57.895 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'groupMapper'.
2020-01-08 16:38:57.896 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'standardOrganizationUnitMapper' and 'com.x3platform.membership.mappers.StandardOrganizationUnitMapper' mapperInterface
2020-01-08 16:38:57.897 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'standardOrganizationUnitMapper'.
2020-01-08 16:38:57.898 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'accountLogMapper' and 'com.x3platform.membership.mappers.AccountLogMapper' mapperInterface
2020-01-08 16:38:57.898 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'accountLogMapper'.
2020-01-08 16:38:57.899 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'organizationMapper' and 'com.x3platform.membership.mappers.OrganizationMapper' mapperInterface
2020-01-08 16:38:57.900 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'organizationMapper'.
2020-01-08 16:38:57.901 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'accountMapper' and 'com.x3platform.membership.mappers.AccountMapper' mapperInterface
2020-01-08 16:38:57.904 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'accountMapper'.
2020-01-08 16:38:57.904 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'roleMapper' and 'com.x3platform.membership.mappers.RoleMapper' mapperInterface
2020-01-08 16:38:57.908 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'roleMapper'.
2020-01-08 16:38:57.910 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'organizationUnitMapper' and 'com.x3platform.membership.mappers.OrganizationUnitMapper' mapperInterface
2020-01-08 16:38:57.910 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'organizationUnitMapper'.
2020-01-08 16:38:57.911 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'userMapper' and 'com.x3platform.membership.mappers.UserMapper' mapperInterface
2020-01-08 16:38:57.912 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2020-01-08 16:38:57.914 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'authorizationObjectMapper' and 'com.x3platform.membership.mappers.AuthorizationObjectMapper' mapperInterface
2020-01-08 16:38:57.914 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'authorizationObjectMapper'.
2020-01-08 16:38:57.916 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'ticketMapper' and 'com.x3platform.sessions.mappers.TicketMapper' mapperInterface
2020-01-08 16:38:57.917 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'ticketMapper'.
2020-01-08 16:38:57.921 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'syncQueueMapper' and 'com.x3platform.sync.mappers.SyncQueueMapper' mapperInterface
2020-01-08 16:38:57.921 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'syncQueueMapper'.
2020-01-08 16:38:57.922 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'syncSettingMapper' and 'com.x3platform.sync.mappers.SyncSettingMapper' mapperInterface
2020-01-08 16:38:57.923 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'syncSettingMapper'.
2020-01-08 16:38:57.925 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'syncPkgMapper' and 'com.x3platform.sync.mappers.SyncPkgMapper' mapperInterface
2020-01-08 16:38:57.927 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'syncPkgMapper'.
2020-01-08 16:38:57.927 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'dataStorageNodeMapper' and 'com.x3platform.data.storages.mappers.DataStorageNodeMapper' mapperInterface
2020-01-08 16:38:57.928 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'dataStorageNodeMapper'.
2020-01-08 16:38:57.929 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'dataStorageSchemaMapper' and 'com.x3platform.data.storages.mappers.DataStorageSchemaMapper' mapperInterface
2020-01-08 16:38:57.929 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'dataStorageSchemaMapper'.
2020-01-08 16:38:57.930 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'authorityMapper' and 'com.x3platform.security.authority.mappers.AuthorityMapper' mapperInterface
2020-01-08 16:38:57.931 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'authorityMapper'.
2020-01-08 16:38:57.931 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'verificationCodeMapper' and 'com.x3platform.security.verificationcode.mappers.VerificationCodeMapper' mapperInterface
2020-01-08 16:38:57.932 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'verificationCodeMapper'.
2020-01-08 16:38:57.933 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'b2bImportMapper' and 'com.amiintellect.customs.b2b.mappers.B2bImportMapper' mapperInterface
2020-01-08 16:38:57.936 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'b2bImportMapper'.
2020-01-08 16:38:57.941 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'b2bMessageHeadMapper' and 'com.amiintellect.customs.b2b.mappers.B2bMessageHeadMapper' mapperInterface
2020-01-08 16:38:57.942 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'b2bMessageHeadMapper'.
2020-01-08 16:38:57.943 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'sasInvtHeadTypeMapper' and 'com.amiintellect.customs.b2b.mappers.SasInvtHeadTypeMapper' mapperInterface
2020-01-08 16:38:57.944 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'sasInvtHeadTypeMapper'.
2020-01-08 16:38:57.944 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'sasInvtListTypeMapper' and 'com.amiintellect.customs.b2b.mappers.SasInvtListTypeMapper' mapperInterface
2020-01-08 16:38:57.946 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'sasInvtListTypeMapper'.
2020-01-08 16:38:57.949 [main][INFO ] com.x3platform.InternalLogger        com.x3platform.data.DynamicDataSourceRegister[97]: Dynamic DataSource Registry
2020-01-08 16:39:00.284 [main][DEBUG] o.m.spring.SqlSessionFactoryBean     org.mybatis.spring.SqlSessionFactoryBean[534]: Property 'mapperLocations' was not specified or no matching resources found
2020-01-08 16:39:00.513 [main][INFO ] com.x3platform.InternalLogger        com.x3platform.SpringContext[18]: Spring ApplicationContext registered
2020-01-08 16:39:00.547 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig[68]: RabbitMQ 开始建立连接。
2020-01-08 16:39:00.571 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig[77]: RabbitMQ 建立完成。
2020-01-08 16:39:02.378 [main][INFO ] com.x3platform.InternalLogger        com.x3platform.KernelContext[101]: AuthenticationManagementType:com.x3platform.security.authentication.LocalAuthenticationManagement
2020-01-08 16:39:04.963 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.listeners.SchedulerApplicationListener[32]: Scheduler:scheduler 已启动。
2020-01-08 16:39:05.485 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[133]: RabbitMQ 获取到连接参数:{isCloud=false, rabbitAddress=rabbit.amiintellect.com, rabbitPort=5672, rabbitPassword=rabbit#6f4b83a6, rabbitUsername=rabbitadmin, rabbitVirtualHost=/, syncReveiceQueneName=10000003_5006640002_in_test}
2020-01-08 16:39:05.485 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[135]: RabbitMQ 开始配置参数.
2020-01-08 16:39:05.486 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[142]: RabbitMQ 配置参数完成.
2020-01-08 16:39:05.629 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[147]: RabbitMQ 连接建立完成.
2020-01-08 16:39:05.704 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[153]: RabbitMQ 等待获取数据.
2020-01-08 16:39:05.705 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[242]: RabbitMQ 监听队列中.
2020-01-08 16:39:05.774 [main][INFO ] c.a.customs.sync.worker.App          org.springframework.boot.StartupInfoLogger[59]: Started App in 9.445 seconds (JVM running for 12.221)
2020-01-08 16:39:05.778 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.App[70]: Application com.amiintellect.customs.sync.worker.App 启动成功, 应用端口 0, 耗时 10.359 秒, 加载 Spring 组件 391 个.
Application Path: /D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/.
Application Version: 1.0.0-build.
2020-01-08 16:44:12.006 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"start_position":"","regular_expression":"","key_word":"运费单","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"017f9394-f71a-4254-a370-5bacdd154cc5","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_unit","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"合同协议号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"12220ff2-88b1-4870-bdbf-581880023669","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"contract_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"标记唛码","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"1268a614-6ac0-4e55-804e-788c76ac053f","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"marks_nos","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"件数","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"167661e4-f113-4498-9562-5f841ccfacf2","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"packages_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"发票号码","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"1a79f5bb-ff62-4fe3-8fb3-7434064d594a","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"filed_2","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"发货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"1a8847e1-f6c6-401c-a540-8802f080f8b1","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sender","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"123","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"1baccd19-b5ba-46e4-8e3e-9c31fff1085a","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"remark","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"运输工具","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"1cd2404f-86fe-424c-b638-42354e6854ea","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"ship_name","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"[0-9]+","key_word":"净重","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"1d0934b0-52cc-43c4-9b98-474f21351fd3","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"net_weight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"消费单位","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"2089e883-d341-4697-b132-82ea64da2426","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"production_unit","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"离境口岸","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"2434c9a8-91bb-477d-b3d9-888b0b39a31b","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"entry_port","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"[0-9]+","key_word":"毛重","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"3956dc5c-d486-46b2-8a13-ecbb5568c2c4","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"gross_weight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"运费总","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"3c12b5f8-edf3-482c-a887-4ed8d59beff8","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"declaration_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"4c9a70d2-46ad-40b3-86bb-1c5b83feac77","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"p_name_dec","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"运抵国","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"5abcb135-8727-4057-9c38-a308073178a0","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"airport_of_departure","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"航次号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"68c5a7cc-8524-41c4-a8e1-4144a70297c6","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"voyage","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"备注","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"6f39e7c4-cfc0-489a-88e3-16241b6d25ff","aligned":"","get_type_str":"","key_position":1,"file_name":"运单文件","map_name":"remark","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"是否报关","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"75ce4fd6-a4db-4d08-ade6-7c9af260b5a6","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"filed_1","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"监管方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"77705eca-af09-4ed7-bc69-4bf27bd60c7c","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"supervision_method","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"征免性质","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"801aa4f7-ea73-4420-bc4d-60baf8189876","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"exemption","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"进境关别","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"814cd080-64e5-4bcb-94b2-2c421059730a","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"i_e_cus_clearance","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"AEO","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"8c696877-aefc-4bff-8726-61818bd1277b","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"aeo_code","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"许可征号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"96a509b5-92c7-4cab-aa60-83836aa7b92a","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"license_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"指运港","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"9d1546cd-266a-4703-a941-d706b58b92ab","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"suspended_port","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"收货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"a0537ff0-b745-472a-aa8c-0e29b1cb79af","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"receiver","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"运输方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"b0b63a14-c70c-42ea-84ed-6b7f8b8d487b","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"traf_mode","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"invoice_file_goods","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"b177ce0c-65f4-4825-8811-64a61f3087fd","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"p_name_inv","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"declaration_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"b49bee35-af34-48de-8f93-9fcdbd5629cb","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"commodity_code_dec","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"[0-9 -—]{11}","key_word":"提运单号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"c88167f2-d1be-4ef4-9e6a-caa89fd48a22","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"bill_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"监管方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"cc4cc766-2958-43ed-86f3-33f575e6b7ac","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"supervision_method","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"[A-Za-z ]{4}","key_word":"成交方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":10,"x_max":0,"id":"d4853142-7f45-44bc-99b5-4c731cf8178c","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sold_for","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":5,"is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"包装种类","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"e5cc0226-e285-408a-ade2-8c6065534f0b","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"wrap_type","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"备案号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"f5daea15-0770-44f6-bcca-459b3d4a60a9","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"eori","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"运费率","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"f9fc5fc4-2850-4c87-b80f-b046574712f9","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_rate","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"贸易国别","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"ff81047c-4d92-4879-b4e3-5ab43c704717","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"trade_country","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:44:03","keyword_type":1,"last_update_time":"2020-01-08 16:44:02","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 16:44:12.081 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.x3platform.sync.SyncContext[106]: 应用 sync 正在加载。
2020-01-08 16:44:12.083 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.x3platform.sync.SyncContext[117]: 应用 sync 已成功加载。
2020-01-08 16:44:12.127 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:35}.
2020-01-08 16:44:12.131 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:12.134 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c635f] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:12.581 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:12.584 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:12.592 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运费单(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 017f9394-f71a-4254-a370-5bacdd154cc5(String), (String), (String), 2(Integer), 运单文件(String), freight_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 运费单(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:12.675 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:12.676 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c635f]
2020-01-08 16:44:12.676 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:12.676 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@190ada3] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:12.679 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:12.680 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:12.683 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 合同协议号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 12220ff2-88b1-4870-bdbf-581880023669(String), (String), (String), 2(Integer), 发票文件(String), contract_no(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 合同协议号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), contract_no(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:12.761 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:12.761 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@190ada3]
2020-01-08 16:44:12.761 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:12.761 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fb16b3] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:12.763 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:12.764 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:12.768 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 标记唛码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 1268a614-6ac0-4e55-804e-788c76ac053f(String), (String), (String), 2(Integer), 运单文件(String), marks_nos(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 标记唛码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), marks_nos(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:12.846 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:12.847 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fb16b3]
2020-01-08 16:44:12.847 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:12.847 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b93963] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:12.849 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:12.849 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:12.851 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 件数(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 167661e4-f113-4498-9562-5f841ccfacf2(String), (String), (String), 2(Integer), 运单文件(String), packages_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 件数(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), packages_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:12.928 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:12.929 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b93963]
2020-01-08 16:44:12.929 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:12.929 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a9c619] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:12.931 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:12.932 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:12.937 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 发票号码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 1a79f5bb-ff62-4fe3-8fb3-7434064d594a(String), (String), (String), 2(Integer), 发票文件(String), filed_2(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 发票号码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), filed_2(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:13.018 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:13.019 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a9c619]
2020-01-08 16:44:13.020 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:13.021 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@959396] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:13.022 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:13.023 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:13.024 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 1a8847e1-f6c6-401c-a540-8802f080f8b1(String), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:13.100 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:13.101 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@959396]
2020-01-08 16:44:13.101 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:13.101 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1537567] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:13.103 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:13.104 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:13.105 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 123(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 1baccd19-b5ba-46e4-8e3e-9c31fff1085a(String), (String), (String), 2(Integer), 发票文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 123(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:13.190 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:13.191 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1537567]
2020-01-08 16:44:13.191 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:13.191 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f6d776] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:13.193 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:13.193 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:13.195 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运输工具(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 1cd2404f-86fe-424c-b638-42354e6854ea(String), (String), (String), 2(Integer), 发票文件(String), ship_name(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 运输工具(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), ship_name(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:13.276 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:13.277 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f6d776]
2020-01-08 16:44:13.277 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:13.277 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2750a1] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:13.279 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:13.281 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:13.283 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [0-9]+(String), 净重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 1d0934b0-52cc-43c4-9b98-474f21351fd3(String), (String), (String), 2(Integer), 运单文件(String), net_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), [0-9]+(String), 净重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), net_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:13.362 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:13.362 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2750a1]
2020-01-08 16:44:13.363 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:13.363 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a4068d] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:13.365 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:13.365 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:13.366 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 消费单位(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 2089e883-d341-4697-b132-82ea64da2426(String), (String), (String), 2(Integer), 发票文件(String), production_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 消费单位(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), production_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:13.446 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:13.446 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a4068d]
2020-01-08 16:44:13.446 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:13.446 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85e5f5] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:13.448 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:13.448 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:13.449 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 离境口岸(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 2434c9a8-91bb-477d-b3d9-888b0b39a31b(String), (String), (String), 2(Integer), 运单文件(String), entry_port(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 离境口岸(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), entry_port(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:13.566 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:13.567 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@85e5f5]
2020-01-08 16:44:13.569 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:13.570 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@121107e] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:13.575 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:13.577 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:13.581 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [0-9]+(String), 毛重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 3956dc5c-d486-46b2-8a13-ecbb5568c2c4(String), (String), (String), 2(Integer), 运单文件(String), gross_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), [0-9]+(String), 毛重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), gross_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:13.660 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:13.661 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@121107e]
2020-01-08 16:44:13.661 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:13.661 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19305fd] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:13.662 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:13.663 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:13.663 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 3c12b5f8-edf3-482c-a887-4ed8d59beff8(String), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:13.741 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:13.743 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19305fd]
2020-01-08 16:44:13.744 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:13.745 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@620705] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:13.749 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:13.756 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:13.759 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 4c9a70d2-46ad-40b3-86bb-1c5b83feac77(String), (String), (String), 2(Integer), 运单文件(String), p_name_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), p_name_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:13.835 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:13.836 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@620705]
2020-01-08 16:44:13.836 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:13.838 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f755] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:13.839 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:13.839 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:13.840 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运抵国(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 5abcb135-8727-4057-9c38-a308073178a0(String), (String), (String), 2(Integer), 发票文件(String), airport_of_departure(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 运抵国(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), airport_of_departure(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:13.920 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:13.920 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52f755]
2020-01-08 16:44:13.921 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:13.921 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@158fc2c] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:13.922 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:13.922 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:13.923 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 航次号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 68c5a7cc-8524-41c4-a8e1-4144a70297c6(String), (String), (String), 2(Integer), 发票文件(String), voyage(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 航次号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), voyage(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:14.001 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:14.001 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@158fc2c]
2020-01-08 16:44:14.002 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:14.002 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e99ef3] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:14.003 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:14.003 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:14.004 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 6f39e7c4-cfc0-489a-88e3-16241b6d25ff(String), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:14.082 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:14.083 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e99ef3]
2020-01-08 16:44:14.084 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:14.084 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6cbd] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:14.085 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:14.085 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:14.086 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 是否报关(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 75ce4fd6-a4db-4d08-ade6-7c9af260b5a6(String), (String), (String), 2(Integer), 发票文件(String), filed_1(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 是否报关(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), filed_1(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:14.165 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:14.165 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4f6cbd]
2020-01-08 16:44:14.167 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:14.168 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ab7e33] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:14.169 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:14.169 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:14.170 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 77705eca-af09-4ed7-bc69-4bf27bd60c7c(String), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:14.250 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:14.250 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ab7e33]
2020-01-08 16:44:14.251 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:14.251 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cf78d] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:14.252 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:14.252 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:14.253 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 征免性质(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 801aa4f7-ea73-4420-bc4d-60baf8189876(String), (String), (String), 2(Integer), 发票文件(String), exemption(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 征免性质(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), exemption(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:14.331 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:14.331 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7cf78d]
2020-01-08 16:44:14.332 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:14.333 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6ebe] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:14.334 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:14.335 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:14.336 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 进境关别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 814cd080-64e5-4bcb-94b2-2c421059730a(String), (String), (String), 2(Integer), 发票文件(String), i_e_cus_clearance(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 进境关别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), i_e_cus_clearance(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:14.412 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:14.412 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5f6ebe]
2020-01-08 16:44:14.413 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:14.413 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@826e11] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:14.414 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:14.414 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:14.416 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), AEO(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 8c696877-aefc-4bff-8726-61818bd1277b(String), (String), (String), 2(Integer), 发票文件(String), aeo_code(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), AEO(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), aeo_code(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:14.493 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:14.493 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@826e11]
2020-01-08 16:44:14.495 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:14.495 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@728716] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:14.497 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:14.497 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:14.499 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 许可征号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 96a509b5-92c7-4cab-aa60-83836aa7b92a(String), (String), (String), 2(Integer), 发票文件(String), license_no(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 许可征号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), license_no(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:14.578 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:14.579 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@728716]
2020-01-08 16:44:14.581 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:14.583 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27c187] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:14.587 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:14.588 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:14.589 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 指运港(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 9d1546cd-266a-4703-a941-d706b58b92ab(String), (String), (String), 2(Integer), 发票文件(String), suspended_port(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 指运港(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), suspended_port(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:14.666 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:14.667 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@27c187]
2020-01-08 16:44:14.668 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:14.669 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b202e6] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:14.671 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:14.671 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:14.672 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), a0537ff0-b745-472a-aa8c-0e29b1cb79af(String), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:14.756 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:14.757 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b202e6]
2020-01-08 16:44:14.758 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:14.760 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f0b33] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:14.761 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:14.762 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:14.763 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运输方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), b0b63a14-c70c-42ea-84ed-6b7f8b8d487b(String), (String), (String), 2(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 运输方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:14.843 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:14.843 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14f0b33]
2020-01-08 16:44:14.844 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:14.845 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16109a] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:14.847 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:14.847 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:14.848 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 商品编号(String), 0(Integer), invoice_file_goods(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), b177ce0c-65f4-4825-8811-64a61f3087fd(String), (String), (String), 2(Integer), 发票文件(String), p_name_inv(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 商品编号(String), 0(Integer), invoice_file_goods(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), p_name_inv(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:14.928 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:14.928 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16109a]
2020-01-08 16:44:14.929 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:14.931 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10ade5e] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:14.932 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:14.936 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:14.938 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), b49bee35-af34-48de-8f93-9fcdbd5629cb(String), (String), (String), 2(Integer), 运单文件(String), commodity_code_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), commodity_code_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:15.021 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:15.022 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10ade5e]
2020-01-08 16:44:15.023 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:15.025 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f31ec9] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:15.025 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:15.026 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:15.027 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [0-9 -—]{11}(String), 提运单号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), c88167f2-d1be-4ef4-9e6a-caa89fd48a22(String), (String), (String), 2(Integer), 发票文件(String), bill_no(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), [0-9 -—]{11}(String), 提运单号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), bill_no(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:15.105 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:15.107 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f31ec9]
2020-01-08 16:44:15.108 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:15.110 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@833cd4] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:15.112 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:15.112 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:15.113 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), cc4cc766-2958-43ed-86f3-33f575e6b7ac(String), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:15.191 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:15.192 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@833cd4]
2020-01-08 16:44:15.193 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:15.193 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1418673] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:15.194 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:15.195 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:15.196 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 10(Integer), 0(Integer), d4853142-7f45-44bc-99b5-4c731cf8178c(String), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 5(Integer), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 10(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 5(Integer), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:15.274 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:15.274 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1418673]
2020-01-08 16:44:15.274 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:15.279 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c7a57d] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:15.281 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:15.282 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:15.284 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 包装种类(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), e5cc0226-e285-408a-ade2-8c6065534f0b(String), (String), (String), 2(Integer), 运单文件(String), wrap_type(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 包装种类(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), wrap_type(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:15.366 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:15.367 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c7a57d]
2020-01-08 16:44:15.374 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:15.375 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1563155] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:15.376 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:15.377 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:15.377 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 备案号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), f5daea15-0770-44f6-bcca-459b3d4a60a9(String), (String), (String), 2(Integer), 发票文件(String), eori(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 备案号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), eori(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:15.456 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:15.456 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1563155]
2020-01-08 16:44:15.457 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:15.459 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fd738c] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:15.460 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:15.460 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:15.461 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运费率(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), f9fc5fc4-2850-4c87-b80f-b046574712f9(String), (String), (String), 2(Integer), 运单文件(String), freight_rate(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 运费率(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_rate(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:15.539 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:15.539 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@fd738c]
2020-01-08 16:44:15.540 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:44:15.545 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e088fc] was not registered for synchronization because synchronization is not active
2020-01-08 16:44:15.546 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:44:15.547 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:44:15.548 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 贸易国别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), ff81047c-4d92-4879-b4e3-5ab43c704717(String), (String), (String), 2(Integer), 发票文件(String), trade_country(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 贸易国别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), trade_country(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:44:03(String), 1(Integer), 2020-01-08 16:44:02(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:44:15.625 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:44:15.625 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e088fc]
2020-01-08 16:44:15.626 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 16:45:55.039 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"asf","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"895165cb-fa7f-4215-9642-2fe23edb23c3","aligned":"","get_type_str":"","key_position":1,"file_name":"发票文件","map_name":"is_have_dhlups","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:45:47","keyword_type":1,"last_update_time":"2020-01-08 16:45:46","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 16:45:55.040 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:1}.
2020-01-08 16:45:55.043 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:45:55.043 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e94233] was not registered for synchronization because synchronization is not active
2020-01-08 16:45:55.084 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:45:55.084 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:45:55.086 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), asf(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 895165cb-fa7f-4215-9642-2fe23edb23c3(String), (String), (String), 1(Integer), 发票文件(String), is_have_dhlups(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:45:47(String), 1(Integer), 2020-01-08 16:45:46(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), asf(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 1(Integer), 发票文件(String), is_have_dhlups(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:45:47(String), 1(Integer), 2020-01-08 16:45:46(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:45:55.166 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 16:45:55.167 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e94233]
2020-01-08 16:45:55.178 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 16:46:58.912 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"asf","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":100,"x_max":0,"id":"895165cb-fa7f-4215-9642-2fe23edb23c3","aligned":"","get_type_str":"","key_position":1,"file_name":"发票文件","map_name":"is_have_dhlups","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":5,"is_one_use":"0","modified_date":"2020-01-08 16:46:43","keyword_type":1,"last_update_time":"2020-01-08 16:46:42","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 16:46:58.912 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:1}.
2020-01-08 16:46:58.913 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 16:46:58.913 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1341b11] was not registered for synchronization because synchronization is not active
2020-01-08 16:46:58.951 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 16:46:58.952 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 16:46:58.954 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), asf(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 100(Integer), 0(Integer), 895165cb-fa7f-4215-9642-2fe23edb23c3(String), (String), (String), 1(Integer), 发票文件(String), is_have_dhlups(String), 00000000-0000-0000-0000-000000000001(String), 5(Integer), 0(String), 2020-01-08 16:46:43(String), 1(Integer), 2020-01-08 16:46:42(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), asf(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 100(Integer), 0(Integer), (String), (String), 1(Integer), 发票文件(String), is_have_dhlups(String), 00000000-0000-0000-0000-000000000001(String), 5(Integer), 0(String), 2020-01-08 16:46:43(String), 1(Integer), 2020-01-08 16:46:42(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 16:46:59.031 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 16:46:59.031 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1341b11]
2020-01-08 16:46:59.032 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 16:59:00.621 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T16:59:00.621.
2020-01-08 17:01:00.521 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:01:00.521.
2020-01-08 17:02:00.568 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:02:00.568.
2020-01-08 17:02:55.441 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"belong_company_name":"","start_position":"","regular_expression":"[A-Za-z ]{4}","key_word":"成交方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"d4853142-7f45-44bc-99b5-4c731cf8178c","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sold_for","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:53:26","keyword_type":1,"last_update_time":"2020-01-08 16:53:25","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"asf","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"895165cb-fa7f-4215-9642-2fe23edb23c3","aligned":"","get_type_str":"","key_position":1,"file_name":"发票文件","map_name":"traf_mode","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 16:57:14","keyword_type":1,"last_update_time":"2020-01-08 16:57:13","login_user":"管理员","is_use_python":"1","company_name":"aaa","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 17:02:55.444 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:2}.
2020-01-08 17:02:55.446 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:02:55.456 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@169cf72] was not registered for synchronization because synchronization is not active
2020-01-08 17:02:55.496 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:02:55.497 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:02:55.498 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), d4853142-7f45-44bc-99b5-4c731cf8178c(String), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:53:26(String), 1(Integer), 2020-01-08 16:53:25(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:53:26(String), 1(Integer), 2020-01-08 16:53:25(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:02:55.988 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 17:02:55.988 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@169cf72]
2020-01-08 17:02:55.989 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:02:55.989 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ffb28d] was not registered for synchronization because synchronization is not active
2020-01-08 17:02:55.991 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:02:55.992 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:02:55.993 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), asf(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 895165cb-fa7f-4215-9642-2fe23edb23c3(String), (String), (String), 1(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:57:14(String), 1(Integer), 2020-01-08 16:57:13(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), asf(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 1(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 16:57:14(String), 1(Integer), 2020-01-08 16:57:13(String), 管理员(String), 1(String), aaa(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:02:56.071 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 17:02:56.071 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ffb28d]
2020-01-08 17:02:56.075 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 17:03:00.516 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:03:00.516.
2020-01-08 17:04:00.622 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:04:00.622.
2020-01-08 17:05:00.522 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:05:00.522.
2020-01-08 17:06:00.586 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:06:00.586.
2020-01-08 17:07:00.534 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:07:00.534.
2020-01-08 17:08:00.586 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:08:00.586.
2020-01-08 17:09:00.524 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:09:00.524.
2020-01-08 17:09:46.949 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"invoice_file_goods","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"0827b02f-b6c7-4d7a-a09d-dd3e1672567c","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"p_name_inv","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"运费总","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"0f9f64a0-d822-4b6a-8c63-cc04d5ad7f23","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"征免性质","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"10d04fdb-a8ae-406e-a5e8-c05cd44b2a6d","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"exemption","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"declaration_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"12956f1d-9caa-4c82-9ca1-a075b482751f","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"p_name_dec","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"运费单","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"13462f3e-138b-44d6-a430-81a4842f3bc8","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_unit","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"包装种类","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"13c274bf-5e87-48b8-a002-d738d096b4be","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"wrap_type","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"[0-9 -—]{11}","key_word":"提运单号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"1ac38f69-37de-46fe-910b-3929797a98c1","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"bill_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"指运港","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"1aeaa84f-a22f-4114-b34d-0bc730863da2","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"suspended_port","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"AEO","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"1bce0c5c-a2b9-4be7-bd3b-3dc095ebe9b6","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"aeo_code","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"运输方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"1f84150d-cd72-4f47-ab3d-944287663d81","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"traf_mode","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"运输工具","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"1ff5e564-6856-4e5c-839e-06fac41f2383","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"ship_name","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"离境口岸","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"30ca40e1-ecce-46bc-80d9-72fe76a8ad9f","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"entry_port","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"[A-Za-z ]{4}","key_word":"成交方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"3fcc1fa5-e24b-4f47-aaf0-86d5364c2367","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sold_for","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"运抵国","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"5589479c-2796-4559-a386-310ab2a0326d","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"airport_of_departure","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"是否报关","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"57201fa8-d79e-4c2a-aac2-95e7bd8add36","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"filed_1","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"运费率","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"62507fc4-30e6-41f4-ad2c-09cd88098861","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_rate","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"进境关别","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"67767173-b1a0-421a-b61b-de8da09a8f4f","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"i_e_cus_clearance","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"发票号码","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"79660af5-9697-4ccc-81b1-48d0cfdd72f4","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"filed_2","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"asf","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"79b2601d-308f-4ec3-9cc2-4094bbca671a","aligned":"","get_type_str":"","key_position":1,"file_name":"发票文件","map_name":"traf_mode","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"消费单位","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"8682a5d2-8440-44d1-a6cc-d6e6e3278ad0","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"production_unit","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"监管方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"8c6eaa41-05f3-439a-89c7-494ee5b16097","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"supervision_method","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"备案号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"9605c3a6-19e7-4fa6-9207-98f44827c499","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"eori","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"标记唛码","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"a22d9b87-bc30-4afb-b48d-1c945399aaef","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"marks_nos","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"贸易国别","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"b52f1201-f106-4ff4-9a80-75ccdfa92381","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"trade_country","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"发货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"cc77e758-1f51-47e0-a64e-9991085f3028","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sender","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"合同协议号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"dfec9bed-cce6-421a-a669-41ef3be4b459","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"contract_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"许可征号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"e2b081e7-a34c-4661-a245-8fe9fe37a89a","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"license_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"航次号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"e3b5a1b3-7061-407a-8f36-d1584b44b1a7","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"voyage","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"declaration_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"eb6f5dad-4f05-4bbc-aec4-0d9f0a4a7a82","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"commodity_code_dec","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"[0-9]+","key_word":"毛重","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"ef61d6c3-2364-49dd-a7cc-e79588b5dbb2","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"gross_weight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"收货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"ef817f1c-9bed-42e7-ae44-8daec9069049","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"receiver","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"123","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"f09e5980-79b8-4226-a73e-fa5ea99bb285","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"remark","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"[0-9]+","key_word":"净重","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"f210ba0f-7670-4a25-b152-f3a5c3b7742f","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"net_weight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"件数","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"f57e3048-cacd-4195-99ed-be5780a83b09","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"packages_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"start_position":"","regular_expression":"","key_word":"监管方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"f940a82f-6167-4009-92f0-e6f27d615f74","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"supervision_method","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:06:57","keyword_type":1,"last_update_time":"2020-01-08 17:06:56","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"备注","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":111,"x_max":0,"id":"078248ea-e3b3-4e73-b4bc-07fac4ad1c71","aligned":"","get_type_str":"","key_position":1,"file_name":"运单文件","map_name":"remark","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":5,"is_one_use":"0","modified_date":"2020-01-08 17:07:38","keyword_type":1,"last_update_time":"2020-01-08 17:07:38","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 17:09:46.954 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:36}.
2020-01-08 17:09:46.954 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:46.955 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eaab43] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:46.997 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:46.998 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:47.000 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 商品编号(String), 0(Integer), invoice_file_goods(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0827b02f-b6c7-4d7a-a09d-dd3e1672567c(String), (String), (String), 2(Integer), 发票文件(String), p_name_inv(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 商品编号(String), 0(Integer), invoice_file_goods(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), p_name_inv(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:47.081 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:47.082 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1eaab43]
2020-01-08 17:09:47.083 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:47.084 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e9c2d1] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:47.085 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:47.086 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:47.088 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0f9f64a0-d822-4b6a-8c63-cc04d5ad7f23(String), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:47.168 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:47.168 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e9c2d1]
2020-01-08 17:09:47.169 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:47.169 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbac75] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:47.170 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:47.171 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:47.172 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 征免性质(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 10d04fdb-a8ae-406e-a5e8-c05cd44b2a6d(String), (String), (String), 2(Integer), 发票文件(String), exemption(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 征免性质(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), exemption(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:47.249 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:47.250 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dbac75]
2020-01-08 17:09:47.250 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:47.251 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52b1e3] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:47.253 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:47.255 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:47.255 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 12956f1d-9caa-4c82-9ca1-a075b482751f(String), (String), (String), 2(Integer), 运单文件(String), p_name_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), p_name_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:47.336 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:47.336 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@52b1e3]
2020-01-08 17:09:47.336 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:47.339 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1573fd7] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:47.339 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:47.341 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:47.342 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运费单(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 13462f3e-138b-44d6-a430-81a4842f3bc8(String), (String), (String), 2(Integer), 运单文件(String), freight_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 运费单(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:47.419 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:47.419 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1573fd7]
2020-01-08 17:09:47.420 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:47.420 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1448647] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:47.420 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:47.421 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:47.422 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 包装种类(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 13c274bf-5e87-48b8-a002-d738d096b4be(String), (String), (String), 2(Integer), 运单文件(String), wrap_type(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 包装种类(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), wrap_type(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:47.498 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:47.498 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1448647]
2020-01-08 17:09:47.499 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:47.499 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ab0626] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:47.500 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:47.501 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:47.502 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [0-9 -—]{11}(String), 提运单号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 1ac38f69-37de-46fe-910b-3929797a98c1(String), (String), (String), 2(Integer), 发票文件(String), bill_no(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), [0-9 -—]{11}(String), 提运单号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), bill_no(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:47.582 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:47.583 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ab0626]
2020-01-08 17:09:47.584 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:47.585 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ae890b] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:47.587 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:47.590 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:47.595 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 指运港(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 1aeaa84f-a22f-4114-b34d-0bc730863da2(String), (String), (String), 2(Integer), 发票文件(String), suspended_port(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 指运港(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), suspended_port(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:47.675 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:47.675 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ae890b]
2020-01-08 17:09:47.676 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:47.676 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1374b6f] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:47.677 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:47.677 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:47.677 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), AEO(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 1bce0c5c-a2b9-4be7-bd3b-3dc095ebe9b6(String), (String), (String), 2(Integer), 发票文件(String), aeo_code(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), AEO(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), aeo_code(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:47.756 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:47.757 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1374b6f]
2020-01-08 17:09:47.757 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:47.757 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16bcc60] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:47.758 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:47.758 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:47.759 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运输方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 1f84150d-cd72-4f47-ab3d-944287663d81(String), (String), (String), 2(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 运输方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:47.838 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:47.838 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16bcc60]
2020-01-08 17:09:47.839 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:47.840 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c0805] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:47.841 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:47.841 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:47.841 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运输工具(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 1ff5e564-6856-4e5c-839e-06fac41f2383(String), (String), (String), 2(Integer), 发票文件(String), ship_name(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 运输工具(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), ship_name(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:47.921 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:47.921 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3c0805]
2020-01-08 17:09:47.921 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:47.922 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13b6ef6] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:47.922 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:47.922 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:47.923 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 离境口岸(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 30ca40e1-ecce-46bc-80d9-72fe76a8ad9f(String), (String), (String), 2(Integer), 运单文件(String), entry_port(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 离境口岸(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), entry_port(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:48.001 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:48.003 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13b6ef6]
2020-01-08 17:09:48.004 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:48.006 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@180fd80] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:48.006 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:48.007 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:48.007 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 3fcc1fa5-e24b-4f47-aaf0-86d5364c2367(String), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:48.087 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:48.087 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@180fd80]
2020-01-08 17:09:48.088 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:48.091 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f58941] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:48.093 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:48.093 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:48.094 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运抵国(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 5589479c-2796-4559-a386-310ab2a0326d(String), (String), (String), 2(Integer), 发票文件(String), airport_of_departure(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 运抵国(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), airport_of_departure(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:48.171 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:48.171 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f58941]
2020-01-08 17:09:48.172 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:48.172 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a23d2e] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:48.173 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:48.173 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:48.173 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 是否报关(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 57201fa8-d79e-4c2a-aac2-95e7bd8add36(String), (String), (String), 2(Integer), 发票文件(String), filed_1(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 是否报关(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), filed_1(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:48.252 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:48.252 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a23d2e]
2020-01-08 17:09:48.253 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:48.253 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d5c78] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:48.253 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:48.254 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:48.255 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运费率(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 62507fc4-30e6-41f4-ad2c-09cd88098861(String), (String), (String), 2(Integer), 运单文件(String), freight_rate(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 运费率(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_rate(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:48.335 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:48.335 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5d5c78]
2020-01-08 17:09:48.336 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:48.336 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15325e3] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:48.336 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:48.337 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:48.338 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 进境关别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 67767173-b1a0-421a-b61b-de8da09a8f4f(String), (String), (String), 2(Integer), 发票文件(String), i_e_cus_clearance(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 进境关别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), i_e_cus_clearance(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:48.415 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:48.416 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15325e3]
2020-01-08 17:09:48.420 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:48.420 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19f0947] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:48.420 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:48.421 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:48.421 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 发票号码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 79660af5-9697-4ccc-81b1-48d0cfdd72f4(String), (String), (String), 2(Integer), 发票文件(String), filed_2(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 发票号码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), filed_2(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:48.499 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:48.500 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19f0947]
2020-01-08 17:09:48.501 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:48.502 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1828271] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:48.502 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:48.502 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:48.503 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), asf(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 79b2601d-308f-4ec3-9cc2-4094bbca671a(String), (String), (String), 1(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), asf(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 1(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:48.581 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:48.582 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1828271]
2020-01-08 17:09:48.582 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:48.582 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea8e7a] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:48.583 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:48.583 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:48.584 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 消费单位(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 8682a5d2-8440-44d1-a6cc-d6e6e3278ad0(String), (String), (String), 2(Integer), 发票文件(String), production_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 消费单位(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), production_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:48.662 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:48.662 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@ea8e7a]
2020-01-08 17:09:48.663 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:48.663 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@186b4d7] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:48.663 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:48.664 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:48.665 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 8c6eaa41-05f3-439a-89c7-494ee5b16097(String), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:48.744 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:48.744 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@186b4d7]
2020-01-08 17:09:48.744 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:48.745 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@119e530] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:48.745 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:48.745 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:48.746 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 备案号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 9605c3a6-19e7-4fa6-9207-98f44827c499(String), (String), (String), 2(Integer), 发票文件(String), eori(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 备案号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), eori(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:48.825 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:48.827 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@119e530]
2020-01-08 17:09:48.829 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:48.832 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12225ba] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:48.833 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:48.833 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:48.834 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 标记唛码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), a22d9b87-bc30-4afb-b48d-1c945399aaef(String), (String), (String), 2(Integer), 运单文件(String), marks_nos(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 标记唛码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), marks_nos(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:48.912 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:48.912 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12225ba]
2020-01-08 17:09:48.913 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:48.913 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f99e] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:48.913 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:48.914 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:48.915 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 贸易国别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), b52f1201-f106-4ff4-9a80-75ccdfa92381(String), (String), (String), 2(Integer), 发票文件(String), trade_country(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 贸易国别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), trade_country(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:49.006 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:49.008 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f99e]
2020-01-08 17:09:49.009 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:49.010 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dfb6bb] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:49.010 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:49.011 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:49.011 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), cc77e758-1f51-47e0-a64e-9991085f3028(String), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:49.091 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:49.091 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dfb6bb]
2020-01-08 17:09:49.091 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:49.092 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f8ac41] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:49.092 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:49.092 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:49.093 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 合同协议号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), dfec9bed-cce6-421a-a669-41ef3be4b459(String), (String), (String), 2(Integer), 发票文件(String), contract_no(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 合同协议号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), contract_no(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:49.173 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:49.173 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f8ac41]
2020-01-08 17:09:49.174 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:49.174 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8010fa] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:49.175 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:49.175 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:49.176 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 许可征号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), e2b081e7-a34c-4661-a245-8fe9fe37a89a(String), (String), (String), 2(Integer), 发票文件(String), license_no(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 许可征号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), license_no(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:49.265 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:49.266 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8010fa]
2020-01-08 17:09:49.268 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:49.268 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d66286] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:49.269 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:49.269 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:49.270 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 航次号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), e3b5a1b3-7061-407a-8f36-d1584b44b1a7(String), (String), (String), 2(Integer), 发票文件(String), voyage(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 航次号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), voyage(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:49.352 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:49.353 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d66286]
2020-01-08 17:09:49.354 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:49.355 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281257] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:49.356 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:49.356 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:49.357 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), eb6f5dad-4f05-4bbc-aec4-0d9f0a4a7a82(String), (String), (String), 2(Integer), 运单文件(String), commodity_code_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), commodity_code_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:49.436 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:49.437 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@281257]
2020-01-08 17:09:49.437 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:49.437 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1204d9c] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:49.438 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:49.438 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:49.444 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [0-9]+(String), 毛重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), ef61d6c3-2364-49dd-a7cc-e79588b5dbb2(String), (String), (String), 2(Integer), 运单文件(String), gross_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), [0-9]+(String), 毛重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), gross_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:49.527 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:49.527 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1204d9c]
2020-01-08 17:09:49.528 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:49.529 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7478f0] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:49.529 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:49.530 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:49.530 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), ef817f1c-9bed-42e7-ae44-8daec9069049(String), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:49.609 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:49.611 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7478f0]
2020-01-08 17:09:49.612 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:49.614 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c5df62] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:49.614 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:49.615 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:49.616 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 123(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), f09e5980-79b8-4226-a73e-fa5ea99bb285(String), (String), (String), 2(Integer), 发票文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 123(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:49.694 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:49.694 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c5df62]
2020-01-08 17:09:49.694 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:49.695 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c2064] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:49.695 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:49.696 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:49.696 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [0-9]+(String), 净重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), f210ba0f-7670-4a25-b152-f3a5c3b7742f(String), (String), (String), 2(Integer), 运单文件(String), net_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), [0-9]+(String), 净重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), net_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:49.775 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:49.775 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5c2064]
2020-01-08 17:09:49.775 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:49.776 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b5b43] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:49.776 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:49.777 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:49.782 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 件数(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), f57e3048-cacd-4195-99ed-be5780a83b09(String), (String), (String), 2(Integer), 运单文件(String), packages_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 件数(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), packages_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:49.862 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:49.862 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2b5b43]
2020-01-08 17:09:49.863 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:49.863 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1850f58] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:49.864 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:49.864 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:49.865 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), f940a82f-6167-4009-92f0-e6f27d615f74(String), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:06:57(String), 1(Integer), 2020-01-08 17:06:56(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:49.943 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:49.943 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1850f58]
2020-01-08 17:09:49.944 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:09:49.944 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@509be1] was not registered for synchronization because synchronization is not active
2020-01-08 17:09:49.944 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:09:49.945 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:09:49.945 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 111(Integer), 0(Integer), 078248ea-e3b3-4e73-b4bc-07fac4ad1c71(String), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 5(Integer), 0(String), 2020-01-08 17:07:38(String), 1(Integer), 2020-01-08 17:07:38(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 111(Integer), 0(Integer), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 5(Integer), 0(String), 2020-01-08 17:07:38(String), 1(Integer), 2020-01-08 17:07:38(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:09:50.023 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 17:09:50.024 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@509be1]
2020-01-08 17:09:50.024 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 17:10:00.571 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:10:00.571.
2020-01-08 17:11:00.528 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:11:00.528.
2020-01-08 17:12:00.576 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:12:00.576.
2020-01-08 17:12:16.587 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"备注","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"078248ea-e3b3-4e73-b4bc-07fac4ad1c71","aligned":"","get_type_str":"","key_position":1,"file_name":"运单文件","map_name":"remark","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:11:37","keyword_type":1,"last_update_time":"2020-01-08 17:11:36","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 17:12:16.588 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:1}.
2020-01-08 17:12:16.588 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:12:16.588 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@80ff3a] was not registered for synchronization because synchronization is not active
2020-01-08 17:12:16.626 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@1c51ead] will not be managed by Spring
2020-01-08 17:12:16.628 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:12:16.634 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 078248ea-e3b3-4e73-b4bc-07fac4ad1c71(String), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:11:37(String), 1(Integer), 2020-01-08 17:11:36(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:11:37(String), 1(Integer), 2020-01-08 17:11:36(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:12:16.714 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 17:12:16.714 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@80ff3a]
2020-01-08 17:12:16.715 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 17:13:00.521 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:13:00.521.
2020-01-08 17:14:00.627 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:14:00.627.
2020-01-08 17:15:00.524 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:15:00.524.
2020-01-08 17:16:00.567 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:16:00.567.
2020-01-08 17:17:00.762 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:17:00.762.
2020-01-08 17:18:00.570 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:18:00.570.
2020-01-08 17:40:40.137 [main][INFO ] c.a.customs.sync.worker.App          org.springframework.boot.StartupInfoLogger[50]: Starting App v1.0 on LAPTOP-FM749B11 with PID 16816 (started by Lenovo in D:\amibook\接收程序)
2020-01-08 17:40:40.141 [main][DEBUG] c.a.customs.sync.worker.App          org.springframework.boot.StartupInfoLogger[53]: Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2020-01-08 17:40:40.143 [main][INFO ] c.a.customs.sync.worker.App          org.springframework.boot.SpringApplication[663]: The following profiles are active: prod
2020-01-08 17:40:41.226 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/digitalnumber/mappers/DigitalNumberMapper.class]
2020-01-08 17:40:41.227 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationSettingGroupMapper.class]
2020-01-08 17:40:41.227 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationMethodMapper.class]
2020-01-08 17:40:41.228 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationSettingMapper.class]
2020-01-08 17:40:41.228 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationEventMapper.class]
2020-01-08 17:40:41.231 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationFeatureMapper.class]
2020-01-08 17:40:41.233 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationOptionMapper.class]
2020-01-08 17:40:41.234 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationMapper.class]
2020-01-08 17:40:41.234 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationMenuMapper.class]
2020-01-08 17:40:41.235 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectCallMapper.class]
2020-01-08 17:40:41.235 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectAuthorizationCodeMapper.class]
2020-01-08 17:40:41.239 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectMapper.class]
2020-01-08 17:40:41.241 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectAccessTokenMapper.class]
2020-01-08 17:40:41.241 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/StandardRoleMapper.class]
2020-01-08 17:40:41.242 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AccountBindingMapper.class]
2020-01-08 17:40:41.243 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/GroupMapper.class]
2020-01-08 17:40:41.246 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/StandardOrganizationUnitMapper.class]
2020-01-08 17:40:41.246 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AccountLogMapper.class]
2020-01-08 17:40:41.247 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/OrganizationMapper.class]
2020-01-08 17:40:41.251 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AccountMapper.class]
2020-01-08 17:40:41.251 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/RoleMapper.class]
2020-01-08 17:40:41.253 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/OrganizationUnitMapper.class]
2020-01-08 17:40:41.255 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/UserMapper.class]
2020-01-08 17:40:41.255 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AuthorizationObjectMapper.class]
2020-01-08 17:40:41.256 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-sessions-0.1.0-SNAPSHOT.jar!/com/x3platform/sessions/mappers/TicketMapper.class]
2020-01-08 17:40:41.257 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-sync-0.1.0-SNAPSHOT.jar!/com/x3platform/sync/mappers/SyncQueueMapper.class]
2020-01-08 17:40:41.258 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-sync-0.1.0-SNAPSHOT.jar!/com/x3platform/sync/mappers/SyncSettingMapper.class]
2020-01-08 17:40:41.258 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-sync-0.1.0-SNAPSHOT.jar!/com/x3platform/sync/mappers/SyncPkgMapper.class]
2020-01-08 17:40:41.269 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/data/storages/mappers/DataStorageNodeMapper.class]
2020-01-08 17:40:41.270 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/data/storages/mappers/DataStorageSchemaMapper.class]
2020-01-08 17:40:41.270 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/security/authority/mappers/AuthorityMapper.class]
2020-01-08 17:40:41.271 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/security/verificationcode/mappers/VerificationCodeMapper.class]
2020-01-08 17:40:41.276 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/B2bImportMapper.class]
2020-01-08 17:40:41.276 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/B2bMessageHeadMapper.class]
2020-01-08 17:40:41.277 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/SasInvtHeadTypeMapper.class]
2020-01-08 17:40:41.281 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/SasInvtListTypeMapper.class]
2020-01-08 17:40:41.286 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'digitalNumberMapper' and 'com.x3platform.digitalnumber.mappers.DigitalNumberMapper' mapperInterface
2020-01-08 17:40:41.286 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'digitalNumberMapper'.
2020-01-08 17:40:41.287 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationSettingGroupMapper' and 'com.x3platform.apps.mappers.ApplicationSettingGroupMapper' mapperInterface
2020-01-08 17:40:41.288 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationSettingGroupMapper'.
2020-01-08 17:40:41.289 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationMethodMapper' and 'com.x3platform.apps.mappers.ApplicationMethodMapper' mapperInterface
2020-01-08 17:40:41.292 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationMethodMapper'.
2020-01-08 17:40:41.294 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationSettingMapper' and 'com.x3platform.apps.mappers.ApplicationSettingMapper' mapperInterface
2020-01-08 17:40:41.294 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationSettingMapper'.
2020-01-08 17:40:41.296 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationEventMapper' and 'com.x3platform.apps.mappers.ApplicationEventMapper' mapperInterface
2020-01-08 17:40:41.298 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationEventMapper'.
2020-01-08 17:40:41.299 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationFeatureMapper' and 'com.x3platform.apps.mappers.ApplicationFeatureMapper' mapperInterface
2020-01-08 17:40:41.300 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationFeatureMapper'.
2020-01-08 17:40:41.301 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationOptionMapper' and 'com.x3platform.apps.mappers.ApplicationOptionMapper' mapperInterface
2020-01-08 17:40:41.302 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationOptionMapper'.
2020-01-08 17:40:41.302 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationMapper' and 'com.x3platform.apps.mappers.ApplicationMapper' mapperInterface
2020-01-08 17:40:41.303 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationMapper'.
2020-01-08 17:40:41.304 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationMenuMapper' and 'com.x3platform.apps.mappers.ApplicationMenuMapper' mapperInterface
2020-01-08 17:40:41.305 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationMenuMapper'.
2020-01-08 17:40:41.305 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectCallMapper' and 'com.x3platform.connect.mappers.ConnectCallMapper' mapperInterface
2020-01-08 17:40:41.306 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectCallMapper'.
2020-01-08 17:40:41.307 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectAuthorizationCodeMapper' and 'com.x3platform.connect.mappers.ConnectAuthorizationCodeMapper' mapperInterface
2020-01-08 17:40:41.310 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectAuthorizationCodeMapper'.
2020-01-08 17:40:41.314 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectMapper' and 'com.x3platform.connect.mappers.ConnectMapper' mapperInterface
2020-01-08 17:40:41.315 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectMapper'.
2020-01-08 17:40:41.316 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectAccessTokenMapper' and 'com.x3platform.connect.mappers.ConnectAccessTokenMapper' mapperInterface
2020-01-08 17:40:41.316 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectAccessTokenMapper'.
2020-01-08 17:40:41.317 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'standardRoleMapper' and 'com.x3platform.membership.mappers.StandardRoleMapper' mapperInterface
2020-01-08 17:40:41.317 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'standardRoleMapper'.
2020-01-08 17:40:41.318 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'accountBindingMapper' and 'com.x3platform.membership.mappers.AccountBindingMapper' mapperInterface
2020-01-08 17:40:41.320 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'accountBindingMapper'.
2020-01-08 17:40:41.320 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'groupMapper' and 'com.x3platform.membership.mappers.GroupMapper' mapperInterface
2020-01-08 17:40:41.323 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'groupMapper'.
2020-01-08 17:40:41.323 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'standardOrganizationUnitMapper' and 'com.x3platform.membership.mappers.StandardOrganizationUnitMapper' mapperInterface
2020-01-08 17:40:41.324 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'standardOrganizationUnitMapper'.
2020-01-08 17:40:41.327 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'accountLogMapper' and 'com.x3platform.membership.mappers.AccountLogMapper' mapperInterface
2020-01-08 17:40:41.330 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'accountLogMapper'.
2020-01-08 17:40:41.332 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'organizationMapper' and 'com.x3platform.membership.mappers.OrganizationMapper' mapperInterface
2020-01-08 17:40:41.332 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'organizationMapper'.
2020-01-08 17:40:41.334 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'accountMapper' and 'com.x3platform.membership.mappers.AccountMapper' mapperInterface
2020-01-08 17:40:41.334 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'accountMapper'.
2020-01-08 17:40:41.335 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'roleMapper' and 'com.x3platform.membership.mappers.RoleMapper' mapperInterface
2020-01-08 17:40:41.336 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'roleMapper'.
2020-01-08 17:40:41.337 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'organizationUnitMapper' and 'com.x3platform.membership.mappers.OrganizationUnitMapper' mapperInterface
2020-01-08 17:40:41.337 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'organizationUnitMapper'.
2020-01-08 17:40:41.338 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'userMapper' and 'com.x3platform.membership.mappers.UserMapper' mapperInterface
2020-01-08 17:40:41.339 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2020-01-08 17:40:41.340 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'authorizationObjectMapper' and 'com.x3platform.membership.mappers.AuthorizationObjectMapper' mapperInterface
2020-01-08 17:40:41.340 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'authorizationObjectMapper'.
2020-01-08 17:40:41.344 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'ticketMapper' and 'com.x3platform.sessions.mappers.TicketMapper' mapperInterface
2020-01-08 17:40:41.344 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'ticketMapper'.
2020-01-08 17:40:41.349 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'syncQueueMapper' and 'com.x3platform.sync.mappers.SyncQueueMapper' mapperInterface
2020-01-08 17:40:41.350 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'syncQueueMapper'.
2020-01-08 17:40:41.351 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'syncSettingMapper' and 'com.x3platform.sync.mappers.SyncSettingMapper' mapperInterface
2020-01-08 17:40:41.352 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'syncSettingMapper'.
2020-01-08 17:40:41.352 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'syncPkgMapper' and 'com.x3platform.sync.mappers.SyncPkgMapper' mapperInterface
2020-01-08 17:40:41.353 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'syncPkgMapper'.
2020-01-08 17:40:41.356 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'dataStorageNodeMapper' and 'com.x3platform.data.storages.mappers.DataStorageNodeMapper' mapperInterface
2020-01-08 17:40:41.361 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'dataStorageNodeMapper'.
2020-01-08 17:40:41.361 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'dataStorageSchemaMapper' and 'com.x3platform.data.storages.mappers.DataStorageSchemaMapper' mapperInterface
2020-01-08 17:40:41.363 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'dataStorageSchemaMapper'.
2020-01-08 17:40:41.363 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'authorityMapper' and 'com.x3platform.security.authority.mappers.AuthorityMapper' mapperInterface
2020-01-08 17:40:41.364 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'authorityMapper'.
2020-01-08 17:40:41.366 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'verificationCodeMapper' and 'com.x3platform.security.verificationcode.mappers.VerificationCodeMapper' mapperInterface
2020-01-08 17:40:41.366 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'verificationCodeMapper'.
2020-01-08 17:40:41.368 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'b2bImportMapper' and 'com.amiintellect.customs.b2b.mappers.B2bImportMapper' mapperInterface
2020-01-08 17:40:41.368 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'b2bImportMapper'.
2020-01-08 17:40:41.369 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'b2bMessageHeadMapper' and 'com.amiintellect.customs.b2b.mappers.B2bMessageHeadMapper' mapperInterface
2020-01-08 17:40:41.369 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'b2bMessageHeadMapper'.
2020-01-08 17:40:41.370 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'sasInvtHeadTypeMapper' and 'com.amiintellect.customs.b2b.mappers.SasInvtHeadTypeMapper' mapperInterface
2020-01-08 17:40:41.370 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'sasInvtHeadTypeMapper'.
2020-01-08 17:40:41.371 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'sasInvtListTypeMapper' and 'com.amiintellect.customs.b2b.mappers.SasInvtListTypeMapper' mapperInterface
2020-01-08 17:40:41.372 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'sasInvtListTypeMapper'.
2020-01-08 17:40:41.375 [main][INFO ] com.x3platform.InternalLogger        com.x3platform.data.DynamicDataSourceRegister[97]: Dynamic DataSource Registry
2020-01-08 17:40:43.643 [main][DEBUG] o.m.spring.SqlSessionFactoryBean     org.mybatis.spring.SqlSessionFactoryBean[534]: Property 'mapperLocations' was not specified or no matching resources found
2020-01-08 17:40:43.879 [main][INFO ] com.x3platform.InternalLogger        com.x3platform.SpringContext[18]: Spring ApplicationContext registered
2020-01-08 17:40:43.918 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig[68]: RabbitMQ 开始建立连接。
2020-01-08 17:40:43.942 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig[77]: RabbitMQ 建立完成。
2020-01-08 17:40:45.802 [main][INFO ] com.x3platform.InternalLogger        com.x3platform.KernelContext[101]: AuthenticationManagementType:com.x3platform.security.authentication.LocalAuthenticationManagement
2020-01-08 17:40:48.630 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.listeners.SchedulerApplicationListener[32]: Scheduler:scheduler 已启动。
2020-01-08 17:40:49.667 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.listeners.SchedulerApplicationListener[44]: job name:com.x3platform.quartz.jobs.TimedEchoJob, state:NORMAL, next fire time:2020-01-08 17:40:00, previous fire time:2020-01-08 17:40:00.
2020-01-08 17:40:49.996 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.listeners.SchedulerApplicationListener[44]: job name:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob, state:NORMAL, next fire time:2020-01-08 17:30:00, previous fire time:2020-01-08 17:30:00.
2020-01-08 17:40:50.002 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[133]: RabbitMQ 获取到连接参数:{isCloud=false, rabbitAddress=rabbit.amiintellect.com, rabbitPort=5672, rabbitPassword=rabbit#6f4b83a6, rabbitUsername=rabbitadmin, rabbitVirtualHost=/, syncReveiceQueneName=10000003_5006640002_in_test}
2020-01-08 17:40:50.004 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[135]: RabbitMQ 开始配置参数.
2020-01-08 17:40:50.005 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[142]: RabbitMQ 配置参数完成.
2020-01-08 17:40:50.175 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[147]: RabbitMQ 连接建立完成.
2020-01-08 17:40:50.261 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[153]: RabbitMQ 等待获取数据.
2020-01-08 17:40:50.263 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[242]: RabbitMQ 监听队列中.
2020-01-08 17:40:50.335 [main][INFO ] c.a.customs.sync.worker.App          org.springframework.boot.StartupInfoLogger[59]: Started App in 10.616 seconds (JVM running for 11.178)
2020-01-08 17:40:50.340 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.App[70]: Application com.amiintellect.customs.sync.worker.App 启动成功, 应用端口 0, 耗时 11.012 秒, 加载 Spring 组件 391 个.
Application Path: /D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/.
Application Version: 1.0.0-build.
2020-01-08 17:41:00.535 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:41:00.535.
2020-01-08 17:42:00.539 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:42:00.539.
2020-01-08 17:43:00.518 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:43:00.518.
2020-01-08 17:44:00.526 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:44:00.526.
2020-01-08 17:44:06.382 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"备注","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"078248ea-e3b3-4e73-b4bc-07fac4ad1c71","aligned":"","get_type_str":"","key_position":1,"file_name":"运单文件","map_name":"remark","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:34:40","keyword_type":1,"last_update_time":"2020-01-08 17:34:39","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"[A-Za-z ]{4}","key_word":"成交方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"74553cd3-7b86-4828-abeb-e27417b5b0a8","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sold_for","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 17:40:07","keyword_type":1,"last_update_time":"2020-01-08 17:40:07","login_user":"管理员","is_use_python":"1","company_name":"af ","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 17:44:06.468 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.x3platform.sync.SyncContext[106]: 应用 sync 正在加载。
2020-01-08 17:44:06.470 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.x3platform.sync.SyncContext[117]: 应用 sync 已成功加载。
2020-01-08 17:44:06.536 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:2}.
2020-01-08 17:44:06.542 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:44:06.547 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1789c7b] was not registered for synchronization because synchronization is not active
2020-01-08 17:44:06.940 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@108b22a] will not be managed by Spring
2020-01-08 17:44:06.945 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:44:06.957 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 078248ea-e3b3-4e73-b4bc-07fac4ad1c71(String), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:34:40(String), 1(Integer), 2020-01-08 17:34:39(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:34:40(String), 1(Integer), 2020-01-08 17:34:39(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 17:44:07.431 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 17:44:07.431 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1789c7b]
2020-01-08 17:44:07.432 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 17:44:07.432 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16f5202] was not registered for synchronization because synchronization is not active
2020-01-08 17:44:07.435 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@108b22a] will not be managed by Spring
2020-01-08 17:44:07.437 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 17:44:07.439 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 74553cd3-7b86-4828-abeb-e27417b5b0a8(String), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:40:07(String), 1(Integer), 2020-01-08 17:40:07(String), 管理员(String), 1(String), af (String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 17:40:07(String), 1(Integer), 2020-01-08 17:40:07(String), 管理员(String), 1(String), af (String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 17:44:07.510 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 17:44:07.511 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16f5202]
2020-01-08 17:44:07.511 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 17:45:00.517 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:45:00.517.
2020-01-08 17:46:00.528 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:46:00.528.
2020-01-08 17:47:00.532 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:47:00.532.
2020-01-08 17:48:00.533 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:48:00.533.
2020-01-08 17:49:00.528 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:49:00.528.
2020-01-08 17:50:00.531 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:50:00.531.
2020-01-08 17:51:00.521 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:51:00.521.
2020-01-08 17:52:01.013 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:52:01.013.
2020-01-08 17:53:00.523 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:53:00.523.
2020-01-08 17:54:00.576 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:54:00.576.
2020-01-08 17:55:00.518 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:55:00.518.
2020-01-08 17:56:00.539 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:56:00.539.
2020-01-08 17:57:00.512 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:57:00.512.
2020-01-08 17:58:00.747 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:58:00.747.
2020-01-08 17:59:00.521 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T17:59:00.521.
2020-01-08 18:00:00.532 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:00:00.532.
2020-01-08 18:00:01.476 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 18:00:01.484 [scheduler_Worker-1][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 18:00:01.500 [scheduler_Worker-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:00:01.500 [scheduler_Worker-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8a18] was not registered for synchronization because synchronization is not active
2020-01-08 18:00:01.540 [scheduler_Worker-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@108b22a] will not be managed by Spring
2020-01-08 18:00:01.542 [scheduler_Worker-1][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 18:00:01.547 [scheduler_Worker-1][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 18:00:01.593 [scheduler_Worker-1][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 18:00:01.594 [scheduler_Worker-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f8a18]
2020-01-08 18:00:01.594 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 18:00:01.594 [scheduler_Worker-1][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 18:00:01.595 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 18:01:00.513 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:01:00.513.
2020-01-08 18:02:00.528 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:02:00.528.
2020-01-08 18:03:00.516 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:03:00.516.
2020-01-08 18:04:00.534 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:04:00.534.
2020-01-08 18:05:00.518 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:05:00.518.
2020-01-08 18:06:00.525 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:06:00.525.
2020-01-08 18:07:00.544 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:07:00.544.
2020-01-08 18:08:01.383 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:08:01.383.
2020-01-08 18:09:01.177 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:09:01.177.
2020-01-08 18:10:01.404 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:10:01.404.
2020-01-08 18:11:01.586 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:11:01.586.
2020-01-08 18:18:22.476 [AMQP Connection 49.4.65.211:5672][WARN ] c.r.c.impl.ForgivingExceptionHandler com.rabbitmq.client.impl.ForgivingExceptionHandler[115]: An unexpected connection driver error occured (Exception message: Connection reset)
2020-01-08 18:18:22.479 [AMQP Connection 49.4.65.211:5672][ERROR] o.s.a.r.c.CachingConnectionFactory   org.springframework.amqp.rabbit.connection.CachingConnectionFactory$DefaultChannelCloseLogger[1292]: Channel shutdown: connection error
2020-01-08 18:18:24.988 [AMQP Connection 49.4.65.211:5672][WARN ] c.r.c.impl.ForgivingExceptionHandler com.rabbitmq.client.impl.ForgivingExceptionHandler[115]: An unexpected connection driver error occured (Exception message: Connection reset)
2020-01-08 18:18:33.301 [scheduler_QuartzSchedulerThread][ERROR] c.alibaba.druid.pool.DruidDataSource com.alibaba.druid.pool.DruidDataSource[1602]: discard connection
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 440,884 milliseconds ago.  The last packet sent successfully to the server was 413,990 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3562)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3462)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3903)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:4796)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:712)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.setAutoCommit(AttributeRestoringConnectionInvocationHandler.java:98)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:66)
	at com.sun.proxy.$Proxy146.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:804)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3846)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.jdbc.util.ReadAheadInputStream.fill(ReadAheadInputStream.java:101)
	at com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:144)
	at com.mysql.jdbc.util.ReadAheadInputStream.read(ReadAheadInputStream.java:174)
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:3011)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3472)
	... 15 common frames omitted
2020-01-08 18:18:33.302 [scheduler_QuartzSchedulerThread][WARN ] o.q.impl.jdbcjobstore.JobStoreTX     org.quartz.impl.jdbcjobstore.JobStoreSupport[811]: Failed to override connection auto commit/transaction isolation.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 440,884 milliseconds ago.  The last packet sent successfully to the server was 413,990 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3562)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3462)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3903)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:4796)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:712)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.setAutoCommit(AttributeRestoringConnectionInvocationHandler.java:98)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:66)
	at com.sun.proxy.$Proxy146.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:804)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3846)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.jdbc.util.ReadAheadInputStream.fill(ReadAheadInputStream.java:101)
	at com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:144)
	at com.mysql.jdbc.util.ReadAheadInputStream.read(ReadAheadInputStream.java:174)
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:3011)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3472)
	... 15 common frames omitted
2020-01-08 18:18:33.302 [scheduler_QuartzSchedulerThread][WARN ] o.q.i.j.AttributeRestoringConnectionInvocationHandler org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler[144]: Failed restore connection's original auto commit setting.
java.sql.SQLException: connection holder is null
	at com.alibaba.druid.pool.DruidPooledConnection.checkStateInternal(DruidPooledConnection.java:1155)
	at com.alibaba.druid.pool.DruidPooledConnection.checkState(DruidPooledConnection.java:1148)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:701)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3662)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3881)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 440,884 milliseconds ago.  The last packet sent successfully to the server was 413,990 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3562)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3462)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3903)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:4796)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:712)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.setAutoCommit(AttributeRestoringConnectionInvocationHandler.java:98)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:66)
	at com.sun.proxy.$Proxy146.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:804)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3846)
	... 2 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.jdbc.util.ReadAheadInputStream.fill(ReadAheadInputStream.java:101)
	at com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:144)
	at com.mysql.jdbc.util.ReadAheadInputStream.read(ReadAheadInputStream.java:174)
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:3011)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3472)
	... 15 common frames omitted
2020-01-08 18:18:33.303 [scheduler_QuartzSchedulerThread][ERROR] org.quartz.core.ErrorLogger          org.quartz.core.ErrorLogger[2401]: An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't acquire next trigger: connection holder is null
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTrigger(JobStoreSupport.java:2910)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$41.execute(JobStoreSupport.java:2805)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$41.execute(JobStoreSupport.java:2803)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3849)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: connection holder is null
	at com.alibaba.druid.pool.DruidPooledConnection.checkStateInternal(DruidPooledConnection.java:1155)
	at com.alibaba.druid.pool.DruidPooledConnection.checkState(DruidPooledConnection.java:1148)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:336)
	at sun.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy146.prepareStatement(Unknown Source)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggerToAcquire(StdJDBCDelegate.java:2599)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTrigger(JobStoreSupport.java:2844)
	... 5 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 440,884 milliseconds ago.  The last packet sent successfully to the server was 413,990 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3562)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3462)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3903)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:4796)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:712)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.setAutoCommit(AttributeRestoringConnectionInvocationHandler.java:98)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:66)
	at com.sun.proxy.$Proxy146.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:804)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3846)
	... 2 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.jdbc.util.ReadAheadInputStream.fill(ReadAheadInputStream.java:101)
	at com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:144)
	at com.mysql.jdbc.util.ReadAheadInputStream.read(ReadAheadInputStream.java:174)
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:3011)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3472)
	... 15 common frames omitted
2020-01-08 18:18:37.233 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:18:37.233.
2020-01-08 18:19:01.318 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:19:01.318.
2020-01-08 18:20:01.890 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:20:01.890.
2020-01-08 18:21:01.064 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:21:01.064.
2020-01-08 18:22:02.333 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:22:02.333.
2020-01-08 18:23:01.699 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:23:01.699.
2020-01-08 18:24:00.870 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:24:00.870.
2020-01-08 18:24:41.556 [AMQP Connection 49.4.65.211:5672][WARN ] c.r.c.impl.ForgivingExceptionHandler com.rabbitmq.client.impl.ForgivingExceptionHandler[115]: An unexpected connection driver error occured (Exception message: Connection reset)
2020-01-08 18:24:41.556 [AMQP Connection 49.4.65.211:5672][WARN ] c.r.c.impl.ForgivingExceptionHandler com.rabbitmq.client.impl.ForgivingExceptionHandler[115]: An unexpected connection driver error occured (Exception message: Connection reset)
2020-01-08 18:24:41.556 [scheduler_QuartzSchedulerThread][ERROR] c.alibaba.druid.pool.DruidDataSource com.alibaba.druid.pool.DruidDataSource[1602]: discard connection
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 16,992 milliseconds ago.  The last packet sent successfully to the server was 664 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3562)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3462)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3903)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:4796)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:712)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.setAutoCommit(AttributeRestoringConnectionInvocationHandler.java:98)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:66)
	at com.sun.proxy.$Proxy146.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:804)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3846)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.net.SocketException: Network is unreachable: recv failed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.jdbc.util.ReadAheadInputStream.fill(ReadAheadInputStream.java:101)
	at com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:144)
	at com.mysql.jdbc.util.ReadAheadInputStream.read(ReadAheadInputStream.java:174)
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:3011)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3472)
	... 15 common frames omitted
2020-01-08 18:24:41.559 [AMQP Connection 49.4.65.211:5672][ERROR] o.s.a.r.c.CachingConnectionFactory   org.springframework.amqp.rabbit.connection.CachingConnectionFactory$DefaultChannelCloseLogger[1292]: Channel shutdown: connection error
2020-01-08 18:24:41.567 [scheduler_QuartzSchedulerThread][WARN ] o.q.impl.jdbcjobstore.JobStoreTX     org.quartz.impl.jdbcjobstore.JobStoreSupport[811]: Failed to override connection auto commit/transaction isolation.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 16,992 milliseconds ago.  The last packet sent successfully to the server was 664 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3562)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3462)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3903)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:4796)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:712)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.setAutoCommit(AttributeRestoringConnectionInvocationHandler.java:98)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:66)
	at com.sun.proxy.$Proxy146.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:804)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3846)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.net.SocketException: Network is unreachable: recv failed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.jdbc.util.ReadAheadInputStream.fill(ReadAheadInputStream.java:101)
	at com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:144)
	at com.mysql.jdbc.util.ReadAheadInputStream.read(ReadAheadInputStream.java:174)
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:3011)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3472)
	... 15 common frames omitted
2020-01-08 18:24:41.571 [scheduler_QuartzSchedulerThread][WARN ] o.q.i.j.AttributeRestoringConnectionInvocationHandler org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler[144]: Failed restore connection's original auto commit setting.
java.sql.SQLException: connection holder is null
	at com.alibaba.druid.pool.DruidPooledConnection.checkStateInternal(DruidPooledConnection.java:1155)
	at com.alibaba.druid.pool.DruidPooledConnection.checkState(DruidPooledConnection.java:1148)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:701)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3662)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3881)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 16,992 milliseconds ago.  The last packet sent successfully to the server was 664 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3562)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3462)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3903)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:4796)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:712)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.setAutoCommit(AttributeRestoringConnectionInvocationHandler.java:98)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:66)
	at com.sun.proxy.$Proxy146.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:804)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3846)
	... 2 common frames omitted
Caused by: java.net.SocketException: Network is unreachable: recv failed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.jdbc.util.ReadAheadInputStream.fill(ReadAheadInputStream.java:101)
	at com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:144)
	at com.mysql.jdbc.util.ReadAheadInputStream.read(ReadAheadInputStream.java:174)
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:3011)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3472)
	... 15 common frames omitted
2020-01-08 18:24:41.571 [Druid-ConnectionPool-Create-28780767][ERROR] c.alibaba.druid.pool.DruidDataSource com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread[2471]: create connection SQLException, url: jdbc:mysql://mysql.amiintellect.com:3306/ami_customs_edge_dev?serverTimezone=GMT&characterEncoding=utf-8&useSSL=false, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:342)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1558)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468)
Caused by: java.net.UnknownHostException: mysql.amiintellect.com
	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:928)
	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1323)
	at java.net.InetAddress.getAllByName0(InetAddress.java:1276)
	at java.net.InetAddress.getAllByName(InetAddress.java:1192)
	at java.net.InetAddress.getAllByName(InetAddress.java:1126)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:188)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:301)
	... 15 common frames omitted
2020-01-08 18:24:41.572 [scheduler_QuartzSchedulerThread][ERROR] org.quartz.core.ErrorLogger          org.quartz.core.ErrorLogger[2401]: An error occurred while scanning for the next triggers to fire.
org.quartz.JobPersistenceException: Couldn't acquire next trigger: connection holder is null
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTrigger(JobStoreSupport.java:2910)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$41.execute(JobStoreSupport.java:2805)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport$41.execute(JobStoreSupport.java:2803)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3849)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.sql.SQLException: connection holder is null
	at com.alibaba.druid.pool.DruidPooledConnection.checkStateInternal(DruidPooledConnection.java:1155)
	at com.alibaba.druid.pool.DruidPooledConnection.checkState(DruidPooledConnection.java:1148)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:336)
	at sun.reflect.GeneratedMethodAccessor65.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:73)
	at com.sun.proxy.$Proxy146.prepareStatement(Unknown Source)
	at org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggerToAcquire(StdJDBCDelegate.java:2599)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTrigger(JobStoreSupport.java:2844)
	... 5 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 16,992 milliseconds ago.  The last packet sent successfully to the server was 664 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3562)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3462)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3903)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:4796)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:712)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.setAutoCommit(AttributeRestoringConnectionInvocationHandler.java:98)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:66)
	at com.sun.proxy.$Proxy146.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:804)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3846)
	... 2 common frames omitted
Caused by: java.net.SocketException: Network is unreachable: recv failed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.jdbc.util.ReadAheadInputStream.fill(ReadAheadInputStream.java:101)
	at com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:144)
	at com.mysql.jdbc.util.ReadAheadInputStream.read(ReadAheadInputStream.java:174)
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:3011)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3472)
	... 15 common frames omitted
2020-01-08 18:24:41.576 [scheduler_QuartzSchedulerThread][ERROR] c.alibaba.druid.pool.DruidDataSource com.alibaba.druid.pool.DruidDataSource[1602]: discard connection
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 29,857 milliseconds ago.  The last packet sent successfully to the server was 29,916 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3749)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2512)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:4796)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:712)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.setAutoCommit(AttributeRestoringConnectionInvocationHandler.java:98)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:66)
	at com.sun.proxy.$Proxy146.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:804)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3846)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:153)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3731)
	... 13 common frames omitted
2020-01-08 18:24:41.577 [scheduler_QuartzSchedulerThread][WARN ] o.q.impl.jdbcjobstore.JobStoreTX     org.quartz.impl.jdbcjobstore.JobStoreSupport[811]: Failed to override connection auto commit/transaction isolation.
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 29,857 milliseconds ago.  The last packet sent successfully to the server was 29,916 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3749)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2512)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:4796)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:712)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.setAutoCommit(AttributeRestoringConnectionInvocationHandler.java:98)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:66)
	at com.sun.proxy.$Proxy146.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:804)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3846)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:153)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3731)
	... 13 common frames omitted
2020-01-08 18:24:41.578 [Druid-ConnectionPool-Create-28780767][ERROR] c.alibaba.druid.pool.DruidDataSource com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread[2471]: create connection SQLException, url: jdbc:mysql://mysql.amiintellect.com:3306/ami_customs_edge_dev?serverTimezone=GMT&characterEncoding=utf-8&useSSL=false, errorCode 0, state 08S01
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:342)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1558)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1623)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2468)
Caused by: java.net.UnknownHostException: mysql.amiintellect.com
	at java.net.InetAddress.getAllByName0(InetAddress.java:1280)
	at java.net.InetAddress.getAllByName(InetAddress.java:1192)
	at java.net.InetAddress.getAllByName(InetAddress.java:1126)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:188)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:301)
	... 15 common frames omitted
2020-01-08 18:24:41.578 [scheduler_QuartzSchedulerThread][WARN ] o.q.i.j.AttributeRestoringConnectionInvocationHandler org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler[144]: Failed restore connection's original auto commit setting.
java.sql.SQLException: connection holder is null
	at com.alibaba.druid.pool.DruidPooledConnection.checkStateInternal(DruidPooledConnection.java:1155)
	at com.alibaba.druid.pool.DruidPooledConnection.checkState(DruidPooledConnection.java:1148)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:701)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.restoreOriginalAtributes(AttributeRestoringConnectionInvocationHandler.java:141)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.cleanupConnection(JobStoreSupport.java:3662)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3881)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.acquireNextTriggers(JobStoreSupport.java:2802)
	at org.quartz.core.QuartzSchedulerThread.run(QuartzSchedulerThread.java:287)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 29,857 milliseconds ago.  The last packet sent successfully to the server was 29,916 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3749)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2512)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2482)
	at com.mysql.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:4796)
	at com.alibaba.druid.pool.DruidPooledConnection.setAutoCommit(DruidPooledConnection.java:712)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.setAutoCommit(AttributeRestoringConnectionInvocationHandler.java:98)
	at org.quartz.impl.jdbcjobstore.AttributeRestoringConnectionInvocationHandler.invoke(AttributeRestoringConnectionInvocationHandler.java:66)
	at com.sun.proxy.$Proxy146.setAutoCommit(Unknown Source)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.getConnection(JobStoreSupport.java:804)
	at org.quartz.impl.jdbcjobstore.JobStoreTX.getNonManagedTXConnection(JobStoreTX.java:71)
	at org.quartz.impl.jdbcjobstore.JobStoreSupport.executeInNonManagedTXLock(JobStoreSupport.java:3846)
	... 2 common frames omitted
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:153)
	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140)
	at com.mysql.jdbc.MysqlIO.send(MysqlIO.java:3731)
	... 13 common frames omitted
2020-01-08 18:24:51.568 [AMQP Connection 49.4.65.211:5672][ERROR] c.r.c.impl.ForgivingExceptionHandler com.rabbitmq.client.impl.ForgivingExceptionHandler[119]: Caught an exception during connection recovery!
java.net.UnknownHostException: rabbit.amiintellect.com
	at java.net.InetAddress.getAllByName0(InetAddress.java:1280)
	at java.net.InetAddress.getAllByName(InetAddress.java:1192)
	at java.net.InetAddress.getAllByName(InetAddress.java:1126)
	at com.rabbitmq.client.DnsRecordIpAddressResolver.resolveIpAddresses(DnsRecordIpAddressResolver.java:83)
	at com.rabbitmq.client.DnsRecordIpAddressResolver.getAddresses(DnsRecordIpAddressResolver.java:73)
	at com.rabbitmq.client.impl.recovery.RecoveryAwareAMQConnectionFactory.newConnection(RecoveryAwareAMQConnectionFactory.java:58)
	at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.recoverConnection(AutorecoveringConnection.java:550)
	at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.beginAutomaticRecovery(AutorecoveringConnection.java:512)
	at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.access$000(AutorecoveringConnection.java:53)
	at com.rabbitmq.client.impl.recovery.AutorecoveringConnection$2.recoveryCanBegin(AutorecoveringConnection.java:453)
	at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:702)
	at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:696)
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:586)
	at java.lang.Thread.run(Thread.java:745)
2020-01-08 18:24:56.569 [AMQP Connection 49.4.65.211:5672][ERROR] c.r.c.impl.ForgivingExceptionHandler com.rabbitmq.client.impl.ForgivingExceptionHandler[119]: Caught an exception during connection recovery!
java.net.UnknownHostException: rabbit.amiintellect.com
	at java.net.InetAddress.getAllByName0(InetAddress.java:1280)
	at java.net.InetAddress.getAllByName(InetAddress.java:1192)
	at java.net.InetAddress.getAllByName(InetAddress.java:1126)
	at com.rabbitmq.client.DnsRecordIpAddressResolver.resolveIpAddresses(DnsRecordIpAddressResolver.java:83)
	at com.rabbitmq.client.DnsRecordIpAddressResolver.getAddresses(DnsRecordIpAddressResolver.java:73)
	at com.rabbitmq.client.impl.recovery.RecoveryAwareAMQConnectionFactory.newConnection(RecoveryAwareAMQConnectionFactory.java:58)
	at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.recoverConnection(AutorecoveringConnection.java:550)
	at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.beginAutomaticRecovery(AutorecoveringConnection.java:512)
	at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.access$000(AutorecoveringConnection.java:53)
	at com.rabbitmq.client.impl.recovery.AutorecoveringConnection$2.recoveryCanBegin(AutorecoveringConnection.java:453)
	at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:702)
	at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:696)
	at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:586)
	at java.lang.Thread.run(Thread.java:745)
2020-01-08 18:25:01.084 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:25:01.084.
2020-01-08 18:26:00.962 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:26:00.962.
2020-01-08 18:27:01.048 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:27:01.048.
2020-01-08 18:28:00.971 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:28:00.971.
2020-01-08 18:29:01.086 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:29:01.086.
2020-01-08 18:30:00.690 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:30:00.690.
2020-01-08 18:30:02.083 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 18:30:02.084 [scheduler_Worker-2][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 18:30:02.084 [scheduler_Worker-2][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:30:02.085 [scheduler_Worker-2][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f81fc] was not registered for synchronization because synchronization is not active
2020-01-08 18:30:02.658 [scheduler_Worker-2][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:30:02.658 [scheduler_Worker-2][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 18:30:02.659 [scheduler_Worker-2][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 18:30:02.738 [scheduler_Worker-2][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 18:30:02.740 [scheduler_Worker-2][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2f81fc]
2020-01-08 18:30:02.741 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 18:30:02.741 [scheduler_Worker-2][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 18:30:02.742 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 18:31:00.884 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:31:00.884.
2020-01-08 18:32:01.087 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:32:01.087.
2020-01-08 18:33:00.944 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:33:00.944.
2020-01-08 18:34:00.865 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:34:00.865.
2020-01-08 18:34:29.336 [messageContainer-5][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"备注","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"078248ea-e3b3-4e73-b4bc-07fac4ad1c71","aligned":"","get_type_str":"","key_position":1,"file_name":"运单文件","map_name":"remark","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 18:30:58","keyword_type":1,"last_update_time":"2020-01-08 18:30:57","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"右","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"运费总","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"0f9f64a0-d822-4b6a-8c63-cc04d5ad7f23","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 18:31:58","keyword_type":1,"last_update_time":"2020-01-08 18:31:57","login_user":"管理员","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"右","status":1},{"belong_company_name":"","start_position":"","regular_expression":"[A-Za-z ]{4}","key_word":"成交方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"6efcf1b3-87f5-494f-a1ac-d427e136381d","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sold_for","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 18:34:20","keyword_type":1,"last_update_time":"2020-01-08 18:34:20","login_user":"管理员","is_use_python":"1","company_name":"af ","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 18:34:29.337 [messageContainer-5][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:3}.
2020-01-08 18:34:29.338 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:34:29.338 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@191f1bb] was not registered for synchronization because synchronization is not active
2020-01-08 18:34:29.405 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:34:29.406 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:34:29.409 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 078248ea-e3b3-4e73-b4bc-07fac4ad1c71(String), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 18:30:58(String), 1(Integer), 2020-01-08 18:30:57(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 右(String), 1(Integer), (String), (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 18:30:58(String), 1(Integer), 2020-01-08 18:30:57(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 右(String), 1(Integer)
2020-01-08 18:34:29.546 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 18:34:29.547 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@191f1bb]
2020-01-08 18:34:29.548 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:34:29.549 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1efa358] was not registered for synchronization because synchronization is not active
2020-01-08 18:34:29.553 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:34:29.553 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:34:29.556 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0f9f64a0-d822-4b6a-8c63-cc04d5ad7f23(String), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 18:31:58(String), 1(Integer), 2020-01-08 18:31:57(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 右(String), 1(Integer), (String), (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 18:31:58(String), 1(Integer), 2020-01-08 18:31:57(String), 管理员(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 右(String), 1(Integer)
2020-01-08 18:34:29.674 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 18:34:29.675 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1efa358]
2020-01-08 18:34:29.676 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:34:29.676 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13de4f9] was not registered for synchronization because synchronization is not active
2020-01-08 18:34:29.681 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:34:29.682 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:34:29.683 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 6efcf1b3-87f5-494f-a1ac-d427e136381d(String), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 18:34:20(String), 1(Integer), 2020-01-08 18:34:20(String), 管理员(String), 1(String), af (String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 18:34:20(String), 1(Integer), 2020-01-08 18:34:20(String), 管理员(String), 1(String), af (String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 18:34:29.843 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:34:29.843 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13de4f9]
2020-01-08 18:34:29.844 [messageContainer-5][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 18:35:00.844 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:35:00.844.
2020-01-08 18:36:00.795 [messageContainer-5][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"运费总","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"0f9f64a0-d822-4b6a-8c63-cc04d5ad7f23","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 18:34:45","keyword_type":1,"last_update_time":"2020-01-08 18:34:44","login_user":"陈跃","is_use_python":"1","company_name":"bbb","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"右","status":1},{"belong_company_name":"","start_position":"","regular_expression":"[A-Za-z ]{4}","key_word":"成交方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"6efcf1b3-87f5-494f-a1ac-d427e136381d","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"sold_for","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 18:35:52","keyword_type":1,"last_update_time":"2020-01-08 18:35:52","login_user":"管理员","is_use_python":"1","company_name":"af ","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 18:36:00.798 [messageContainer-5][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:2}.
2020-01-08 18:36:00.805 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:36:00.806 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f234f7] was not registered for synchronization because synchronization is not active
2020-01-08 18:36:00.889 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:36:00.890 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:36:00.891 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0f9f64a0-d822-4b6a-8c63-cc04d5ad7f23(String), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 18:34:45(String), 1(Integer), 2020-01-08 18:34:44(String), 陈跃(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 右(String), 1(Integer), (String), (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 18:34:45(String), 1(Integer), 2020-01-08 18:34:44(String), 陈跃(String), 1(String), bbb(String), 00000000-0000-0000-0000-000000000001(String), 右(String), 1(Integer)
2020-01-08 18:36:01.083 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 18:36:01.084 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f234f7]
2020-01-08 18:36:01.084 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:36:01.085 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10b3c7e] was not registered for synchronization because synchronization is not active
2020-01-08 18:36:01.088 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:36:01.089 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:36:01.092 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 6efcf1b3-87f5-494f-a1ac-d427e136381d(String), (String), (String), 2(Integer), 运单文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 18:35:52(String), 1(Integer), 2020-01-08 18:35:52(String), 管理员(String), 1(String), af (String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 18:35:52(String), 1(Integer), 2020-01-08 18:35:52(String), 管理员(String), 1(String), af (String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 18:36:01.099 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:36:01.099.
2020-01-08 18:36:01.290 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 18:36:01.291 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10b3c7e]
2020-01-08 18:36:01.292 [messageContainer-5][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 18:37:00.925 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:37:00.925.
2020-01-08 18:38:01.090 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:38:01.090.
2020-01-08 18:39:00.823 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:39:00.823.
2020-01-08 18:50:50.747 [messageContainer-5][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"invoice_file_goods","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"0b36e902-1f4c-4f3e-8866-0234df6319f7","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"p_name_inv","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:48","keyword_type":1,"last_update_time":"2020-01-08 18:47:48","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"指运港","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"10e9ad44-7a6a-4e86-975f-4fe898b1d65b","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"suspended_port","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:48","keyword_type":1,"last_update_time":"2020-01-08 18:47:48","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"运输工具","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"10eaebe5-6199-493e-a876-78d839745329","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"ship_name","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:48","keyword_type":1,"last_update_time":"2020-01-08 18:47:48","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"监管方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"13d0cc81-1e00-45ea-bbf8-60cc3dd0c2ee","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"supervision_method","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:48","keyword_type":1,"last_update_time":"2020-01-08 18:47:48","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"备注","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"17bcad44-95a8-4355-b4ae-8207ae057eba","aligned":"","get_type_str":"","key_position":1,"file_name":"运单文件","map_name":"remark","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:48","keyword_type":1,"last_update_time":"2020-01-08 18:47:48","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"运费单","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"19994be7-1d30-441d-81c2-7dda97e808eb","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_unit","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:48","keyword_type":1,"last_update_time":"2020-01-08 18:47:48","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"航次号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"1f48ad45-d169-46e0-a4ce-54b7fcdb8f89","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"voyage","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:48","keyword_type":1,"last_update_time":"2020-01-08 18:47:48","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"123","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"245aa817-6342-4e9b-803e-c084a268583c","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"remark","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:48","keyword_type":1,"last_update_time":"2020-01-08 18:47:48","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"许可征号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"24f2e620-e201-4611-89e5-e6a0dcd798d1","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"license_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:48","keyword_type":1,"last_update_time":"2020-01-08 18:47:48","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"标记唛码","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"3a59f7a6-7c6e-4460-93fa-92c071b11feb","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"marks_nos","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:48","keyword_type":1,"last_update_time":"2020-01-08 18:47:48","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"监管方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"3b9f4bcd-09e4-43d7-9332-d8c3eef73d42","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"supervision_method","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:50","keyword_type":1,"last_update_time":"2020-01-08 18:47:50","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"件数","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"48119319-ccd6-42f4-b8c6-04e25db00220","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"packages_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:50","keyword_type":1,"last_update_time":"2020-01-08 18:47:50","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"发货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"5630a542-efd9-46df-9531-43f3a83cc95e","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sender","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:50","keyword_type":1,"last_update_time":"2020-01-08 18:47:50","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"AEO","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"5b536ffd-3bb6-4fdb-b9a7-6174b18ab065","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"aeo_code","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:50","keyword_type":1,"last_update_time":"2020-01-08 18:47:50","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"进境关别","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"5c961cc3-6ef8-403a-9872-143be9958666","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"i_e_cus_clearance","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:50","keyword_type":1,"last_update_time":"2020-01-08 18:47:50","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"发票号码","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"70b8cb26-e613-4433-b767-af11038bb373","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"filed_2","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:50","keyword_type":1,"last_update_time":"2020-01-08 18:47:50","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"运费率","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"71ee5545-0497-4ef0-b44a-3727e1d0b9b6","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_rate","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:50","keyword_type":1,"last_update_time":"2020-01-08 18:47:50","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"[0-9]+","key_word":"净重","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"74d21c3b-0bca-49cd-9528-7ddac253f0d0","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"net_weight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:50","keyword_type":1,"last_update_time":"2020-01-08 18:47:50","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"征免性质","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"895939ea-dcbf-46ec-be1d-71cd443207f4","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"exemption","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:50","keyword_type":1,"last_update_time":"2020-01-08 18:47:50","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"declaration_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"8a84c1d2-4cf7-4981-8446-bd31e49d5c59","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"commodity_code_dec","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:50","keyword_type":1,"last_update_time":"2020-01-08 18:47:50","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"[0-9 -—]{11}","key_word":"提运单号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"8dfbdf10-0d74-46a8-8761-feefe2e0e224","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"bill_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:54","keyword_type":1,"last_update_time":"2020-01-08 18:47:54","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"[0-9]+","key_word":"毛重","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"8f57462e-9f02-4817-b638-f60a09f6880f","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"gross_weight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:54","keyword_type":1,"last_update_time":"2020-01-08 18:47:54","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"消费单位","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"92d7159f-1b67-4100-9fe5-454406a2867f","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"production_unit","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:54","keyword_type":1,"last_update_time":"2020-01-08 18:47:54","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"收货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"93316f16-663b-4395-8b9f-e9beafe8cf46","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"receiver","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:54","keyword_type":1,"last_update_time":"2020-01-08 18:47:54","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"包装种类","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"9fbcedcc-0daa-43d6-bcd5-25accb3b1b03","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"wrap_type","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:54","keyword_type":1,"last_update_time":"2020-01-08 18:47:54","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"运抵国","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"bd034e64-deba-4120-8253-9721351aeb84","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"airport_of_departure","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:54","keyword_type":1,"last_update_time":"2020-01-08 18:47:54","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"离境口岸","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"cf83e8bd-7ccb-45c9-8a09-6f2d85f0afd6","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"entry_port","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:54","keyword_type":1,"last_update_time":"2020-01-08 18:47:54","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"[A-Za-z ]{4}","key_word":"成交方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"da247bb5-453e-45bd-bd6a-7973b9873476","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"sold_for","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:54","keyword_type":1,"last_update_time":"2020-01-08 18:47:54","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"备案号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"db0d516a-c334-471c-8d7f-53810d09df8d","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"eori","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:54","keyword_type":1,"last_update_time":"2020-01-08 18:47:54","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"是否报关","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"dcd117a5-ec68-436e-9749-98d0481dc8f0","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"filed_1","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:54","keyword_type":1,"last_update_time":"2020-01-08 18:47:54","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"运输方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"ee46fe95-11a3-432c-9900-96653d8b1bd2","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"traf_mode","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:57","keyword_type":1,"last_update_time":"2020-01-08 18:47:57","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"运费总","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"eeaea2ba-4223-489d-800f-2eb6ff9bec53","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:57","keyword_type":1,"last_update_time":"2020-01-08 18:47:57","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"贸易国别","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"f37721eb-0ddb-4daa-8461-378962aabe6c","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"trade_country","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:57","keyword_type":1,"last_update_time":"2020-01-08 18:47:57","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"declaration_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"f452d2f9-908a-490d-bd87-1f2a760d46fa","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"p_name_dec","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:57","keyword_type":1,"last_update_time":"2020-01-08 18:47:57","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"合同协议号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"fdfae5c3-410b-4da6-bb0f-26bb056350c9","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"contract_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 18:47:57","keyword_type":1,"last_update_time":"2020-01-08 18:47:57","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"belong_company_name":"","start_position":"","regular_expression":"[A-Za-z ]{4}","key_word":"成交方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"x_max":0,"id":"775e231f-bfe2-4378-a190-552cae028a02","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"sold_for","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 18:48:33","keyword_type":1,"last_update_time":"2020-01-08 18:48:32","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 18:50:50.754 [messageContainer-5][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:36}.
2020-01-08 18:50:50.755 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:50.755 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e0652] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:50.812 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:50.813 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:50.815 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 商品编号(String), 0(Integer), invoice_file_goods(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 0b36e902-1f4c-4f3e-8866-0234df6319f7(String), (String), (String), 2(Integer), 发票文件(String), p_name_inv(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 商品编号(String), 0(Integer), invoice_file_goods(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), p_name_inv(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:50.936 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:50.937 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e0652]
2020-01-08 18:50:50.937 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:50.938 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9f5] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:50.941 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:50.941 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:50.943 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 指运港(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 10e9ad44-7a6a-4e86-975f-4fe898b1d65b(String), (String), (String), 2(Integer), 发票文件(String), suspended_port(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 指运港(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), suspended_port(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:51.072 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:51.073 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9f5]
2020-01-08 18:50:51.075 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:51.076 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dbbfb] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:51.079 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:51.079 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:51.081 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运输工具(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 10eaebe5-6199-493e-a876-78d839745329(String), (String), (String), 2(Integer), 发票文件(String), ship_name(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 运输工具(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), ship_name(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:51.193 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:51.193 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dbbfb]
2020-01-08 18:50:51.194 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:51.194 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c0156e] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:51.197 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:51.198 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:51.202 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 13d0cc81-1e00-45ea-bbf8-60cc3dd0c2ee(String), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:51.321 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:51.322 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c0156e]
2020-01-08 18:50:51.323 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:51.325 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a8a575] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:51.328 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:51.328 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:51.330 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 17bcad44-95a8-4355-b4ae-8207ae057eba(String), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:51.456 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:51.458 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a8a575]
2020-01-08 18:50:51.459 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:51.460 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48f46] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:51.467 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:51.469 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:51.474 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运费单(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 19994be7-1d30-441d-81c2-7dda97e808eb(String), (String), (String), 2(Integer), 运单文件(String), freight_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 运费单(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:51.623 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:51.623 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48f46]
2020-01-08 18:50:51.624 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:51.624 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14978f4] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:51.626 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:51.627 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:51.629 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 航次号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 1f48ad45-d169-46e0-a4ce-54b7fcdb8f89(String), (String), (String), 2(Integer), 发票文件(String), voyage(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 航次号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), voyage(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:51.759 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:51.761 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14978f4]
2020-01-08 18:50:51.764 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:51.764 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@196699f] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:51.766 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:51.767 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:51.768 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 123(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 245aa817-6342-4e9b-803e-c084a268583c(String), (String), (String), 2(Integer), 发票文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 123(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:51.896 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:51.897 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@196699f]
2020-01-08 18:50:51.897 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:51.898 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbc208] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:51.900 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:51.901 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:51.902 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 许可征号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 24f2e620-e201-4611-89e5-e6a0dcd798d1(String), (String), (String), 2(Integer), 发票文件(String), license_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 许可征号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), license_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:52.033 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:52.034 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbc208]
2020-01-08 18:50:52.036 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:52.037 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a29677] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:52.039 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:52.040 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:52.041 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 标记唛码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 3a59f7a6-7c6e-4460-93fa-92c071b11feb(String), (String), (String), 2(Integer), 运单文件(String), marks_nos(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 标记唛码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), marks_nos(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:48(String), 1(Integer), 2020-01-08 18:47:48(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:52.159 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:52.160 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a29677]
2020-01-08 18:50:52.161 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:52.161 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e927f] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:52.163 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:52.163 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:52.165 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 3b9f4bcd-09e4-43d7-9332-d8c3eef73d42(String), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:52.281 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:52.282 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16e927f]
2020-01-08 18:50:52.284 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:52.286 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d66614] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:52.288 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:52.288 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:52.290 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 件数(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 48119319-ccd6-42f4-b8c6-04e25db00220(String), (String), (String), 2(Integer), 运单文件(String), packages_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 件数(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), packages_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:52.416 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:52.417 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@d66614]
2020-01-08 18:50:52.418 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:52.419 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d1a5da] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:52.421 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:52.421 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:52.422 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 5630a542-efd9-46df-9531-43f3a83cc95e(String), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:52.544 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:52.545 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d1a5da]
2020-01-08 18:50:52.546 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:52.547 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c639b8] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:52.549 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:52.549 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:52.550 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), AEO(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 5b536ffd-3bb6-4fdb-b9a7-6174b18ab065(String), (String), (String), 2(Integer), 发票文件(String), aeo_code(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), AEO(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), aeo_code(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:52.667 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:52.668 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c639b8]
2020-01-08 18:50:52.670 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:52.670 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1365594] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:52.672 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:52.673 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:52.674 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 进境关别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 5c961cc3-6ef8-403a-9872-143be9958666(String), (String), (String), 2(Integer), 发票文件(String), i_e_cus_clearance(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 进境关别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), i_e_cus_clearance(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:52.809 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:52.811 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1365594]
2020-01-08 18:50:52.815 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:52.815 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@674c9d] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:52.818 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:52.818 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:52.820 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 发票号码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 70b8cb26-e613-4433-b767-af11038bb373(String), (String), (String), 2(Integer), 发票文件(String), filed_2(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 发票号码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), filed_2(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:52.958 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:52.958 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@674c9d]
2020-01-08 18:50:52.958 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:52.959 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bcef1] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:52.961 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:52.961 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:52.963 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运费率(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 71ee5545-0497-4ef0-b44a-3727e1d0b9b6(String), (String), (String), 2(Integer), 运单文件(String), freight_rate(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 运费率(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_rate(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:53.103 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:53.103 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3bcef1]
2020-01-08 18:50:53.105 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:53.105 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1029ff5] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:53.106 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:53.107 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:53.109 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [0-9]+(String), 净重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 74d21c3b-0bca-49cd-9528-7ddac253f0d0(String), (String), (String), 2(Integer), 运单文件(String), net_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), [0-9]+(String), 净重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), net_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:53.241 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:53.241 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1029ff5]
2020-01-08 18:50:53.242 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:53.242 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d7e] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:53.244 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:53.245 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:53.245 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 征免性质(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 895939ea-dcbf-46ec-be1d-71cd443207f4(String), (String), (String), 2(Integer), 发票文件(String), exemption(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 征免性质(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), exemption(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:53.356 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:53.358 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4d7e]
2020-01-08 18:50:53.361 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:53.361 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcc133] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:53.363 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:53.363 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:53.365 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 8a84c1d2-4cf7-4981-8446-bd31e49d5c59(String), (String), (String), 2(Integer), 运单文件(String), commodity_code_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), commodity_code_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:50(String), 1(Integer), 2020-01-08 18:47:50(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:53.498 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:53.499 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dcc133]
2020-01-08 18:50:53.500 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:53.500 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1355c50] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:53.502 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:53.502 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:53.503 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [0-9 -—]{11}(String), 提运单号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 8dfbdf10-0d74-46a8-8761-feefe2e0e224(String), (String), (String), 2(Integer), 发票文件(String), bill_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), [0-9 -—]{11}(String), 提运单号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), bill_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:53.650 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:53.650 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1355c50]
2020-01-08 18:50:53.651 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:53.651 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e394bd] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:53.653 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:53.653 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:53.654 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [0-9]+(String), 毛重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 8f57462e-9f02-4817-b638-f60a09f6880f(String), (String), (String), 2(Integer), 运单文件(String), gross_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), [0-9]+(String), 毛重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), gross_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:53.791 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:53.792 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e394bd]
2020-01-08 18:50:53.792 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:53.793 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@894fd9] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:53.794 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:53.794 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:53.795 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 消费单位(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 92d7159f-1b67-4100-9fe5-454406a2867f(String), (String), (String), 2(Integer), 发票文件(String), production_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 消费单位(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), production_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:53.921 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:53.921 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@894fd9]
2020-01-08 18:50:53.922 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:53.922 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f6e7d1] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:53.923 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:53.924 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:53.925 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 93316f16-663b-4395-8b9f-e9beafe8cf46(String), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:54.033 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:54.033 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f6e7d1]
2020-01-08 18:50:54.034 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:54.034 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9138f] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:54.035 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:54.035 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:54.036 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 包装种类(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 9fbcedcc-0daa-43d6-bcd5-25accb3b1b03(String), (String), (String), 2(Integer), 运单文件(String), wrap_type(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 包装种类(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), wrap_type(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:54.160 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:54.161 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9138f]
2020-01-08 18:50:54.161 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:54.162 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16ee29f] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:54.163 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:54.163 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:54.169 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运抵国(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), bd034e64-deba-4120-8253-9721351aeb84(String), (String), (String), 2(Integer), 发票文件(String), airport_of_departure(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 运抵国(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), airport_of_departure(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:54.296 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:54.297 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16ee29f]
2020-01-08 18:50:54.297 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:54.297 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12d067d] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:54.298 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:54.298 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:54.299 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 离境口岸(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), cf83e8bd-7ccb-45c9-8a09-6f2d85f0afd6(String), (String), (String), 2(Integer), 运单文件(String), entry_port(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 离境口岸(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), entry_port(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:54.454 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:54.454 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12d067d]
2020-01-08 18:50:54.455 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:54.455 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9e80ce] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:54.456 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:54.457 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:54.458 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), da247bb5-453e-45bd-bd6a-7973b9873476(String), (String), (String), 2(Integer), 运单文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:54.584 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:54.584 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9e80ce]
2020-01-08 18:50:54.585 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:54.585 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa3f66] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:54.586 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:54.587 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:54.588 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 备案号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), db0d516a-c334-471c-8d7f-53810d09df8d(String), (String), (String), 2(Integer), 发票文件(String), eori(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 备案号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), eori(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:54.712 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:54.712 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@aa3f66]
2020-01-08 18:50:54.714 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:54.715 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16dec25] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:54.716 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:54.716 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:54.717 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 是否报关(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), dcd117a5-ec68-436e-9749-98d0481dc8f0(String), (String), (String), 2(Integer), 发票文件(String), filed_1(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 是否报关(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), filed_1(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:54(String), 1(Integer), 2020-01-08 18:47:54(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:54.835 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:54.836 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16dec25]
2020-01-08 18:50:54.837 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:54.838 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5adf0a] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:54.841 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:54.842 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:54.845 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运输方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), ee46fe95-11a3-432c-9900-96653d8b1bd2(String), (String), (String), 2(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:57(String), 1(Integer), 2020-01-08 18:47:57(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 运输方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:57(String), 1(Integer), 2020-01-08 18:47:57(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:54.956 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:54.957 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5adf0a]
2020-01-08 18:50:54.958 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:54.958 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dd964e] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:54.959 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:54.959 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:54.961 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), eeaea2ba-4223-489d-800f-2eb6ff9bec53(String), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:57(String), 1(Integer), 2020-01-08 18:47:57(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:57(String), 1(Integer), 2020-01-08 18:47:57(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:55.090 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:55.091 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dd964e]
2020-01-08 18:50:55.094 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:55.103 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9c78cd] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:55.104 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:55.104 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:55.105 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 贸易国别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), f37721eb-0ddb-4daa-8461-378962aabe6c(String), (String), (String), 2(Integer), 发票文件(String), trade_country(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:57(String), 1(Integer), 2020-01-08 18:47:57(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 贸易国别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), trade_country(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:57(String), 1(Integer), 2020-01-08 18:47:57(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:55.256 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:55.257 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9c78cd]
2020-01-08 18:50:55.257 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:55.258 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e85d47] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:55.259 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:55.259 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:55.260 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), f452d2f9-908a-490d-bd87-1f2a760d46fa(String), (String), (String), 2(Integer), 运单文件(String), p_name_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:57(String), 1(Integer), 2020-01-08 18:47:57(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), p_name_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:57(String), 1(Integer), 2020-01-08 18:47:57(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:55.400 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:55.400 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e85d47]
2020-01-08 18:50:55.401 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:55.401 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16a7dc] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:55.402 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:55.403 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:55.404 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 合同协议号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), fdfae5c3-410b-4da6-bb0f-26bb056350c9(String), (String), (String), 2(Integer), 发票文件(String), contract_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:57(String), 1(Integer), 2020-01-08 18:47:57(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 合同协议号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), contract_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 18:47:57(String), 1(Integer), 2020-01-08 18:47:57(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 18:50:55.519 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:55.519 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16a7dc]
2020-01-08 18:50:55.520 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 18:50:55.520 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f3104e] was not registered for synchronization because synchronization is not active
2020-01-08 18:50:55.521 [messageContainer-5][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 18:50:55.521 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 18:50:55.521 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 775e231f-bfe2-4378-a190-552cae028a02(String), (String), (String), 2(Integer), 运单文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 18:48:33(String), 1(Integer), 2020-01-08 18:48:32(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 18:48:33(String), 1(Integer), 2020-01-08 18:48:32(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 18:50:55.656 [messageContainer-5][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 18:50:55.656 [messageContainer-5][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f3104e]
2020-01-08 18:50:55.658 [messageContainer-5][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 18:54:01.105 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:54:01.105.
2020-01-08 18:58:01.052 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T18:58:01.051.
2020-01-08 19:00:01.136 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:00:01.136.
2020-01-08 19:01:00.862 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:01:00.863 [scheduler_Worker-3][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:01:00.864 [scheduler_Worker-3][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:01:00.865 [scheduler_Worker-3][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c0d93] was not registered for synchronization because synchronization is not active
2020-01-08 19:01:00.917 [scheduler_Worker-3][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 19:01:00.918 [scheduler_Worker-3][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:01:00.919 [scheduler_Worker-3][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:01:00.989 [scheduler_Worker-3][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:01:00.990 [scheduler_Worker-3][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c0d93]
2020-01-08 19:01:00.990 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:01:00.991 [scheduler_Worker-3][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:01:00.991 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:04:00.737 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:04:00.738 [scheduler_Worker-1][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:04:00.738 [scheduler_Worker-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:04:00.739 [scheduler_Worker-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13dcf39] was not registered for synchronization because synchronization is not active
2020-01-08 19:04:00.786 [scheduler_Worker-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 19:04:00.786 [scheduler_Worker-1][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:04:00.786 [scheduler_Worker-1][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:04:00.858 [scheduler_Worker-1][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:04:00.858 [scheduler_Worker-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13dcf39]
2020-01-08 19:04:00.859 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:04:00.859 [scheduler_Worker-1][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:04:00.859 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:06:00.753 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:06:00.754 [scheduler_Worker-2][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:06:00.754 [scheduler_Worker-2][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:06:00.755 [scheduler_Worker-2][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17cc5a8] was not registered for synchronization because synchronization is not active
2020-01-08 19:06:00.823 [scheduler_Worker-2][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 19:06:00.824 [scheduler_Worker-2][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:06:00.825 [scheduler_Worker-2][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:06:00.903 [scheduler_Worker-2][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:06:00.904 [scheduler_Worker-2][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17cc5a8]
2020-01-08 19:06:00.904 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:06:00.905 [scheduler_Worker-2][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:06:00.905 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:07:00.777 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:07:00.777.
2020-01-08 19:12:00.862 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:12:00.863 [scheduler_Worker-3][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:12:00.863 [scheduler_Worker-3][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:12:00.864 [scheduler_Worker-3][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8d7f2] was not registered for synchronization because synchronization is not active
2020-01-08 19:12:00.916 [scheduler_Worker-3][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 19:12:00.917 [scheduler_Worker-3][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:12:00.920 [scheduler_Worker-3][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:12:00.981 [scheduler_Worker-3][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:12:00.981 [scheduler_Worker-3][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e8d7f2]
2020-01-08 19:12:00.982 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:12:00.982 [scheduler_Worker-3][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:12:00.982 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:14:00.873 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:14:00.873 [scheduler_Worker-1][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:14:00.874 [scheduler_Worker-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:14:00.874 [scheduler_Worker-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15d0216] was not registered for synchronization because synchronization is not active
2020-01-08 19:14:00.927 [scheduler_Worker-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 19:14:00.928 [scheduler_Worker-1][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:14:00.928 [scheduler_Worker-1][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:14:00.999 [scheduler_Worker-1][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:14:01.001 [scheduler_Worker-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15d0216]
2020-01-08 19:14:01.003 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:14:01.003 [scheduler_Worker-1][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:14:01.004 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:16:00.886 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:16:00.887 [scheduler_Worker-2][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:16:00.889 [scheduler_Worker-2][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:16:00.890 [scheduler_Worker-2][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66db3b] was not registered for synchronization because synchronization is not active
2020-01-08 19:16:00.957 [scheduler_Worker-2][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@fc16b4] will not be managed by Spring
2020-01-08 19:16:00.958 [scheduler_Worker-2][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:16:00.959 [scheduler_Worker-2][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:16:01.011 [scheduler_Worker-2][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:16:01.013 [scheduler_Worker-2][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66db3b]
2020-01-08 19:16:01.019 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:16:01.020 [scheduler_Worker-2][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:16:01.021 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:27:23.315 [main][INFO ] c.a.customs.sync.worker.App          org.springframework.boot.StartupInfoLogger[50]: Starting App v1.0 on LAPTOP-FM749B11 with PID 13304 (started by Lenovo in D:\amibook\接收程序)
2020-01-08 19:27:23.319 [main][DEBUG] c.a.customs.sync.worker.App          org.springframework.boot.StartupInfoLogger[53]: Running with Spring Boot v2.0.2.RELEASE, Spring v5.0.6.RELEASE
2020-01-08 19:27:23.321 [main][INFO ] c.a.customs.sync.worker.App          org.springframework.boot.SpringApplication[663]: The following profiles are active: prod
2020-01-08 19:27:24.372 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/digitalnumber/mappers/DigitalNumberMapper.class]
2020-01-08 19:27:24.373 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationSettingGroupMapper.class]
2020-01-08 19:27:24.374 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationMethodMapper.class]
2020-01-08 19:27:24.374 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationSettingMapper.class]
2020-01-08 19:27:24.375 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationEventMapper.class]
2020-01-08 19:27:24.375 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationFeatureMapper.class]
2020-01-08 19:27:24.376 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationOptionMapper.class]
2020-01-08 19:27:24.377 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationMapper.class]
2020-01-08 19:27:24.378 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-apps-0.1.0-SNAPSHOT.jar!/com/x3platform/apps/mappers/ApplicationMenuMapper.class]
2020-01-08 19:27:24.378 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectCallMapper.class]
2020-01-08 19:27:24.379 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectAuthorizationCodeMapper.class]
2020-01-08 19:27:24.380 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectMapper.class]
2020-01-08 19:27:24.381 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-connect-0.1.0-SNAPSHOT.jar!/com/x3platform/connect/mappers/ConnectAccessTokenMapper.class]
2020-01-08 19:27:24.381 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/StandardRoleMapper.class]
2020-01-08 19:27:24.382 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AccountBindingMapper.class]
2020-01-08 19:27:24.383 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/GroupMapper.class]
2020-01-08 19:27:24.389 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/StandardOrganizationUnitMapper.class]
2020-01-08 19:27:24.390 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AccountLogMapper.class]
2020-01-08 19:27:24.392 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/OrganizationMapper.class]
2020-01-08 19:27:24.393 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AccountMapper.class]
2020-01-08 19:27:24.394 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/RoleMapper.class]
2020-01-08 19:27:24.394 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/OrganizationUnitMapper.class]
2020-01-08 19:27:24.395 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/UserMapper.class]
2020-01-08 19:27:24.395 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-membership-0.1.0-SNAPSHOT.jar!/com/x3platform/membership/mappers/AuthorizationObjectMapper.class]
2020-01-08 19:27:24.396 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-sessions-0.1.0-SNAPSHOT.jar!/com/x3platform/sessions/mappers/TicketMapper.class]
2020-01-08 19:27:24.397 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-sync-0.1.0-SNAPSHOT.jar!/com/x3platform/sync/mappers/SyncQueueMapper.class]
2020-01-08 19:27:24.398 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-sync-0.1.0-SNAPSHOT.jar!/com/x3platform/sync/mappers/SyncSettingMapper.class]
2020-01-08 19:27:24.401 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-sync-0.1.0-SNAPSHOT.jar!/com/x3platform/sync/mappers/SyncPkgMapper.class]
2020-01-08 19:27:24.408 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/data/storages/mappers/DataStorageNodeMapper.class]
2020-01-08 19:27:24.408 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/data/storages/mappers/DataStorageSchemaMapper.class]
2020-01-08 19:27:24.409 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/security/authority/mappers/AuthorityMapper.class]
2020-01-08 19:27:24.410 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/x3platform-abstractions-0.1.0-SNAPSHOT.jar!/com/x3platform/security/verificationcode/mappers/VerificationCodeMapper.class]
2020-01-08 19:27:24.418 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/B2bImportMapper.class]
2020-01-08 19:27:24.419 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/B2bMessageHeadMapper.class]
2020-01-08 19:27:24.419 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/SasInvtHeadTypeMapper.class]
2020-01-08 19:27:24.422 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider[437]: Identified candidate component class: URL [jar:file:/D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/lib/amiintellect-customs-b2b-1.0.0-SNAPSHOT.jar!/com/amiintellect/customs/b2b/mappers/SasInvtListTypeMapper.class]
2020-01-08 19:27:24.424 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'digitalNumberMapper' and 'com.x3platform.digitalnumber.mappers.DigitalNumberMapper' mapperInterface
2020-01-08 19:27:24.425 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'digitalNumberMapper'.
2020-01-08 19:27:24.425 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationSettingGroupMapper' and 'com.x3platform.apps.mappers.ApplicationSettingGroupMapper' mapperInterface
2020-01-08 19:27:24.426 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationSettingGroupMapper'.
2020-01-08 19:27:24.427 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationMethodMapper' and 'com.x3platform.apps.mappers.ApplicationMethodMapper' mapperInterface
2020-01-08 19:27:24.428 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationMethodMapper'.
2020-01-08 19:27:24.428 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationSettingMapper' and 'com.x3platform.apps.mappers.ApplicationSettingMapper' mapperInterface
2020-01-08 19:27:24.429 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationSettingMapper'.
2020-01-08 19:27:24.430 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationEventMapper' and 'com.x3platform.apps.mappers.ApplicationEventMapper' mapperInterface
2020-01-08 19:27:24.431 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationEventMapper'.
2020-01-08 19:27:24.434 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationFeatureMapper' and 'com.x3platform.apps.mappers.ApplicationFeatureMapper' mapperInterface
2020-01-08 19:27:24.435 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationFeatureMapper'.
2020-01-08 19:27:24.437 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationOptionMapper' and 'com.x3platform.apps.mappers.ApplicationOptionMapper' mapperInterface
2020-01-08 19:27:24.437 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationOptionMapper'.
2020-01-08 19:27:24.440 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationMapper' and 'com.x3platform.apps.mappers.ApplicationMapper' mapperInterface
2020-01-08 19:27:24.440 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationMapper'.
2020-01-08 19:27:24.441 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'applicationMenuMapper' and 'com.x3platform.apps.mappers.ApplicationMenuMapper' mapperInterface
2020-01-08 19:27:24.442 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'applicationMenuMapper'.
2020-01-08 19:27:24.443 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectCallMapper' and 'com.x3platform.connect.mappers.ConnectCallMapper' mapperInterface
2020-01-08 19:27:24.445 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectCallMapper'.
2020-01-08 19:27:24.446 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectAuthorizationCodeMapper' and 'com.x3platform.connect.mappers.ConnectAuthorizationCodeMapper' mapperInterface
2020-01-08 19:27:24.448 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectAuthorizationCodeMapper'.
2020-01-08 19:27:24.448 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectMapper' and 'com.x3platform.connect.mappers.ConnectMapper' mapperInterface
2020-01-08 19:27:24.451 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectMapper'.
2020-01-08 19:27:24.451 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'connectAccessTokenMapper' and 'com.x3platform.connect.mappers.ConnectAccessTokenMapper' mapperInterface
2020-01-08 19:27:24.452 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'connectAccessTokenMapper'.
2020-01-08 19:27:24.455 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'standardRoleMapper' and 'com.x3platform.membership.mappers.StandardRoleMapper' mapperInterface
2020-01-08 19:27:24.457 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'standardRoleMapper'.
2020-01-08 19:27:24.459 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'accountBindingMapper' and 'com.x3platform.membership.mappers.AccountBindingMapper' mapperInterface
2020-01-08 19:27:24.459 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'accountBindingMapper'.
2020-01-08 19:27:24.460 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'groupMapper' and 'com.x3platform.membership.mappers.GroupMapper' mapperInterface
2020-01-08 19:27:24.461 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'groupMapper'.
2020-01-08 19:27:24.463 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'standardOrganizationUnitMapper' and 'com.x3platform.membership.mappers.StandardOrganizationUnitMapper' mapperInterface
2020-01-08 19:27:24.463 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'standardOrganizationUnitMapper'.
2020-01-08 19:27:24.466 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'accountLogMapper' and 'com.x3platform.membership.mappers.AccountLogMapper' mapperInterface
2020-01-08 19:27:24.470 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'accountLogMapper'.
2020-01-08 19:27:24.472 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'organizationMapper' and 'com.x3platform.membership.mappers.OrganizationMapper' mapperInterface
2020-01-08 19:27:24.472 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'organizationMapper'.
2020-01-08 19:27:24.475 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'accountMapper' and 'com.x3platform.membership.mappers.AccountMapper' mapperInterface
2020-01-08 19:27:24.476 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'accountMapper'.
2020-01-08 19:27:24.477 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'roleMapper' and 'com.x3platform.membership.mappers.RoleMapper' mapperInterface
2020-01-08 19:27:24.478 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'roleMapper'.
2020-01-08 19:27:24.482 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'organizationUnitMapper' and 'com.x3platform.membership.mappers.OrganizationUnitMapper' mapperInterface
2020-01-08 19:27:24.484 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'organizationUnitMapper'.
2020-01-08 19:27:24.484 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'userMapper' and 'com.x3platform.membership.mappers.UserMapper' mapperInterface
2020-01-08 19:27:24.485 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'userMapper'.
2020-01-08 19:27:24.486 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'authorizationObjectMapper' and 'com.x3platform.membership.mappers.AuthorizationObjectMapper' mapperInterface
2020-01-08 19:27:24.487 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'authorizationObjectMapper'.
2020-01-08 19:27:24.487 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'ticketMapper' and 'com.x3platform.sessions.mappers.TicketMapper' mapperInterface
2020-01-08 19:27:24.491 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'ticketMapper'.
2020-01-08 19:27:24.497 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'syncQueueMapper' and 'com.x3platform.sync.mappers.SyncQueueMapper' mapperInterface
2020-01-08 19:27:24.499 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'syncQueueMapper'.
2020-01-08 19:27:24.499 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'syncSettingMapper' and 'com.x3platform.sync.mappers.SyncSettingMapper' mapperInterface
2020-01-08 19:27:24.500 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'syncSettingMapper'.
2020-01-08 19:27:24.501 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'syncPkgMapper' and 'com.x3platform.sync.mappers.SyncPkgMapper' mapperInterface
2020-01-08 19:27:24.502 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'syncPkgMapper'.
2020-01-08 19:27:24.504 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'dataStorageNodeMapper' and 'com.x3platform.data.storages.mappers.DataStorageNodeMapper' mapperInterface
2020-01-08 19:27:24.504 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'dataStorageNodeMapper'.
2020-01-08 19:27:24.507 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'dataStorageSchemaMapper' and 'com.x3platform.data.storages.mappers.DataStorageSchemaMapper' mapperInterface
2020-01-08 19:27:24.507 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'dataStorageSchemaMapper'.
2020-01-08 19:27:24.508 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'authorityMapper' and 'com.x3platform.security.authority.mappers.AuthorityMapper' mapperInterface
2020-01-08 19:27:24.509 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'authorityMapper'.
2020-01-08 19:27:24.510 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'verificationCodeMapper' and 'com.x3platform.security.verificationcode.mappers.VerificationCodeMapper' mapperInterface
2020-01-08 19:27:24.510 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'verificationCodeMapper'.
2020-01-08 19:27:24.511 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'b2bImportMapper' and 'com.amiintellect.customs.b2b.mappers.B2bImportMapper' mapperInterface
2020-01-08 19:27:24.511 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'b2bImportMapper'.
2020-01-08 19:27:24.512 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'b2bMessageHeadMapper' and 'com.amiintellect.customs.b2b.mappers.B2bMessageHeadMapper' mapperInterface
2020-01-08 19:27:24.512 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'b2bMessageHeadMapper'.
2020-01-08 19:27:24.516 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'sasInvtHeadTypeMapper' and 'com.amiintellect.customs.b2b.mappers.SasInvtHeadTypeMapper' mapperInterface
2020-01-08 19:27:24.516 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'sasInvtHeadTypeMapper'.
2020-01-08 19:27:24.519 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[180]: Creating MapperFactoryBean with name 'sasInvtListTypeMapper' and 'com.amiintellect.customs.b2b.mappers.SasInvtListTypeMapper' mapperInterface
2020-01-08 19:27:24.520 [main][DEBUG] o.m.s.mapper.ClassPathMapperScanner  org.mybatis.spring.mapper.ClassPathMapperScanner[216]: Enabling autowire by type for MapperFactoryBean with name 'sasInvtListTypeMapper'.
2020-01-08 19:27:24.522 [main][INFO ] com.x3platform.InternalLogger        com.x3platform.data.DynamicDataSourceRegister[97]: Dynamic DataSource Registry
2020-01-08 19:27:27.254 [main][DEBUG] o.m.spring.SqlSessionFactoryBean     org.mybatis.spring.SqlSessionFactoryBean[534]: Property 'mapperLocations' was not specified or no matching resources found
2020-01-08 19:27:27.490 [main][INFO ] com.x3platform.InternalLogger        com.x3platform.SpringContext[18]: Spring ApplicationContext registered
2020-01-08 19:27:27.531 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig[68]: RabbitMQ 开始建立连接。
2020-01-08 19:27:27.555 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig[77]: RabbitMQ 建立完成。
2020-01-08 19:27:29.620 [main][INFO ] com.x3platform.InternalLogger        com.x3platform.KernelContext[101]: AuthenticationManagementType:com.x3platform.security.authentication.LocalAuthenticationManagement
2020-01-08 19:27:34.474 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.listeners.SchedulerApplicationListener[32]: Scheduler:scheduler 已启动。
2020-01-08 19:27:34.837 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"belong_company_name":"","start_position":"","regular_expression":"[A-Za-z ]{4}","key_word":"成交方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"775e231f-bfe2-4378-a190-552cae028a02","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"sold_for","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:26:09","keyword_type":1,"last_update_time":"2020-01-08 19:26:09","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"发货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"10abd243-f5cf-4844-8782-b9d6eb0e3c35","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sender","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:26:46","keyword_type":1,"last_update_time":"2020-01-08 19:26:45","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"收货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"f9f265fa-7769-456e-914f-88be109804ad","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"receiver","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:27:02","keyword_type":1,"last_update_time":"2020-01-08 19:27:02","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 19:27:34.940 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.x3platform.sync.SyncContext[106]: 应用 sync 正在加载。
2020-01-08 19:27:34.942 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.x3platform.sync.SyncContext[117]: 应用 sync 已成功加载。
2020-01-08 19:27:35.007 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:3}.
2020-01-08 19:27:35.012 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:27:35.017 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@303a72] was not registered for synchronization because synchronization is not active
2020-01-08 19:27:35.599 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:27:35.604 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:27:35.617 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), 775e231f-bfe2-4378-a190-552cae028a02(String), (String), (String), 2(Integer), 运单文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:26:09(String), 1(Integer), 2020-01-08 19:26:09(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:26:09(String), 1(Integer), 2020-01-08 19:26:09(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:27:35.740 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:27:35.741 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@303a72]
2020-01-08 19:27:35.742 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:27:35.742 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17cc92f] was not registered for synchronization because synchronization is not active
2020-01-08 19:27:35.746 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:27:35.746 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:27:35.749 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 10abd243-f5cf-4844-8782-b9d6eb0e3c35(String), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:26:46(String), 1(Integer), 2020-01-08 19:26:45(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:26:46(String), 1(Integer), 2020-01-08 19:26:45(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:27:35.814 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.listeners.SchedulerApplicationListener[44]: job name:com.x3platform.quartz.jobs.TimedEchoJob, state:NORMAL, next fire time:2020-01-08 19:22:00, previous fire time:2020-01-08 19:22:00.
2020-01-08 19:27:35.891 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:27:35.891 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17cc92f]
2020-01-08 19:27:35.893 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:27:35.893 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32cd42] was not registered for synchronization because synchronization is not active
2020-01-08 19:27:35.897 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:27:35.897 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:27:35.900 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), f9f265fa-7769-456e-914f-88be109804ad(String), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:27:02(String), 1(Integer), 2020-01-08 19:27:02(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:27:02(String), 1(Integer), 2020-01-08 19:27:02(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:27:36.053 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:27:36.055 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@32cd42]
2020-01-08 19:27:36.061 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 19:27:36.213 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:27:36.213.
2020-01-08 19:27:36.393 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.listeners.SchedulerApplicationListener[44]: job name:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob, state:NORMAL, next fire time:2020-01-08 19:22:00, previous fire time:2020-01-08 19:22:00.
2020-01-08 19:27:36.400 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[133]: RabbitMQ 获取到连接参数:{isCloud=false, rabbitAddress=rabbit.amiintellect.com, rabbitPort=5672, rabbitPassword=rabbit#6f4b83a6, rabbitUsername=rabbitadmin, rabbitVirtualHost=/, syncReveiceQueneName=10000003_5006640002_in_test}
2020-01-08 19:27:36.401 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[135]: RabbitMQ 开始配置参数.
2020-01-08 19:27:36.405 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[142]: RabbitMQ 配置参数完成.
2020-01-08 19:27:36.721 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[147]: RabbitMQ 连接建立完成.
2020-01-08 19:27:36.841 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[153]: RabbitMQ 等待获取数据.
2020-01-08 19:27:36.842 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.plugins.HuaDongImportListenPluginImpl[242]: RabbitMQ 监听队列中.
2020-01-08 19:27:36.926 [main][INFO ] c.a.customs.sync.worker.App          org.springframework.boot.StartupInfoLogger[59]: Started App in 14.079 seconds (JVM running for 17.158)
2020-01-08 19:27:36.931 [main][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.App[70]: Application com.amiintellect.customs.sync.worker.App 启动成功, 应用端口 0, 耗时 15.056 秒, 加载 Spring 组件 391 个.
Application Path: /D:/amibook/%e6%8e%a5%e6%94%b6%e7%a8%8b%e5%ba%8f/.
Application Version: 1.0.0-build.
2020-01-08 19:27:37.676 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:27:37.699 [scheduler_Worker-2][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:27:37.705 [scheduler_Worker-2][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:27:37.706 [scheduler_Worker-2][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b594e0] was not registered for synchronization because synchronization is not active
2020-01-08 19:27:37.710 [scheduler_Worker-2][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:27:37.710 [scheduler_Worker-2][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:27:37.711 [scheduler_Worker-2][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:27:37.769 [scheduler_Worker-2][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:27:37.770 [scheduler_Worker-2][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b594e0]
2020-01-08 19:27:37.771 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:27:37.771 [scheduler_Worker-2][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:27:37.771 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:28:00.794 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:28:00.794.
2020-01-08 19:28:02.212 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:28:02.212 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:28:02.213 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:28:02.216 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b64033] was not registered for synchronization because synchronization is not active
2020-01-08 19:28:02.217 [scheduler_Worker-4][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:28:02.217 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:28:02.218 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:28:02.290 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:28:02.291 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b64033]
2020-01-08 19:28:02.291 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:28:02.292 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:28:02.292 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:29:00.805 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:29:00.805.
2020-01-08 19:30:00.803 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:30:00.803.
2020-01-08 19:30:02.246 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:30:02.247 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:30:02.248 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:30:02.249 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14e2b43] was not registered for synchronization because synchronization is not active
2020-01-08 19:30:02.316 [scheduler_Worker-4][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:30:02.316 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:30:02.317 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:30:02.368 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:30:02.369 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14e2b43]
2020-01-08 19:30:02.369 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:30:02.370 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:30:02.373 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:31:00.807 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:31:00.807.
2020-01-08 19:32:00.808 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:32:00.808.
2020-01-08 19:32:02.253 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:32:02.254 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:32:02.254 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:32:02.255 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@635b01] was not registered for synchronization because synchronization is not active
2020-01-08 19:32:02.316 [scheduler_Worker-4][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:32:02.316 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:32:02.316 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:32:02.361 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:32:02.362 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@635b01]
2020-01-08 19:32:02.362 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:32:02.363 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:32:02.363 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:33:00.802 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:33:00.802.
2020-01-08 19:33:44.803 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"123","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"x_max":0,"id":"47fcc837-a83c-4856-baaa-7bb85f115f05","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"remark","customs_broker_id":"00000000-0000-0000-0000-000000000001","is_one_use":"0","modified_date":"2020-01-08 19:32:01","keyword_type":1,"last_update_time":"2020-01-08 19:32:01","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"belong_company_name":"","start_position":"","regular_expression":"[A-Za-z ]{4}","key_word":"成交方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"156338c1-125d-4b54-a03b-a74d1c353401","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sold_for","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:32:12","keyword_type":1,"last_update_time":"2020-01-08 19:32:11","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"[0-9]+","key_word":"毛重","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"c3cfac7d-c187-4a37-8b7f-dc91bbabf262","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"gross_weight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:32:30","keyword_type":1,"last_update_time":"2020-01-08 19:32:29","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 19:33:44.804 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:3}.
2020-01-08 19:33:44.805 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:33:44.805 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11db87b] was not registered for synchronization because synchronization is not active
2020-01-08 19:33:44.861 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:33:44.862 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:33:44.864 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 123(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 47fcc837-a83c-4856-baaa-7bb85f115f05(String), (String), (String), 2(Integer), 发票文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 19:32:01(String), 1(Integer), 2020-01-08 19:32:01(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), (String), 123(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(String), 2020-01-08 19:32:01(String), 1(Integer), 2020-01-08 19:32:01(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:33:44.982 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:33:44.983 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11db87b]
2020-01-08 19:33:44.983 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:33:44.983 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f08c] was not registered for synchronization because synchronization is not active
2020-01-08 19:33:44.986 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:33:44.987 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:33:44.988 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 156338c1-125d-4b54-a03b-a74d1c353401(String), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:32:12(String), 1(Integer), 2020-01-08 19:32:11(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:32:12(String), 1(Integer), 2020-01-08 19:32:11(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:33:45.093 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:33:45.094 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f08c]
2020-01-08 19:33:45.095 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:33:45.096 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12cbba3] was not registered for synchronization because synchronization is not active
2020-01-08 19:33:45.107 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:33:45.109 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:33:45.114 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), [0-9]+(String), 毛重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), c3cfac7d-c187-4a37-8b7f-dc91bbabf262(String), (String), (String), 2(Integer), 运单文件(String), gross_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:32:30(String), 1(Integer), 2020-01-08 19:32:29(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), [0-9]+(String), 毛重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), gross_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:32:30(String), 1(Integer), 2020-01-08 19:32:29(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:33:45.224 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:33:45.224 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12cbba3]
2020-01-08 19:33:45.225 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 19:34:00.806 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:34:00.806.
2020-01-08 19:34:02.254 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:34:02.255 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:34:02.256 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:34:02.257 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fd9ec] was not registered for synchronization because synchronization is not active
2020-01-08 19:34:02.259 [scheduler_Worker-4][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:34:02.260 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:34:02.261 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:34:02.317 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:34:02.317 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fd9ec]
2020-01-08 19:34:02.318 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:34:02.319 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:34:02.319 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:35:00.804 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:35:00.804.
2020-01-08 19:36:00.805 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:36:00.805.
2020-01-08 19:36:02.247 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:36:02.247 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:36:02.248 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:36:02.248 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d81cb] was not registered for synchronization because synchronization is not active
2020-01-08 19:36:02.297 [scheduler_Worker-4][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:36:02.298 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:36:02.298 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:36:02.357 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:36:02.358 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2d81cb]
2020-01-08 19:36:02.361 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:36:02.361 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:36:02.362 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:36:23.381 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"发货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"10abd243-f5cf-4844-8782-b9d6eb0e3c35","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sender","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:36:17","keyword_type":1,"last_update_time":"2020-01-08 19:36:17","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"belong_company_name":"","start_position":"","regular_expression":"[A-Za-z ]{4}","key_word":"成交方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"775e231f-bfe2-4378-a190-552cae028a02","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"sold_for","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:36:17","keyword_type":1,"last_update_time":"2020-01-08 19:36:17","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"收货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"f9f265fa-7769-456e-914f-88be109804ad","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"receiver","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:36:17","keyword_type":1,"last_update_time":"2020-01-08 19:36:17","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 19:36:23.384 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:3}.
2020-01-08 19:36:23.387 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:36:23.389 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12cfa4c] was not registered for synchronization because synchronization is not active
2020-01-08 19:36:23.392 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:36:23.393 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:36:23.395 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 10abd243-f5cf-4844-8782-b9d6eb0e3c35(String), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:36:17(String), 1(Integer), 2020-01-08 19:36:17(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:36:17(String), 1(Integer), 2020-01-08 19:36:17(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:36:23.515 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:36:23.516 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@12cfa4c]
2020-01-08 19:36:23.517 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:36:23.517 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c76f1] was not registered for synchronization because synchronization is not active
2020-01-08 19:36:23.520 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:36:23.520 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:36:23.522 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), 775e231f-bfe2-4378-a190-552cae028a02(String), (String), (String), 2(Integer), 运单文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:36:17(String), 1(Integer), 2020-01-08 19:36:17(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:36:17(String), 1(Integer), 2020-01-08 19:36:17(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:36:23.655 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:36:23.655 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c76f1]
2020-01-08 19:36:23.656 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:36:23.656 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15b391] was not registered for synchronization because synchronization is not active
2020-01-08 19:36:23.659 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:36:23.659 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:36:23.661 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), f9f265fa-7769-456e-914f-88be109804ad(String), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:36:17(String), 1(Integer), 2020-01-08 19:36:17(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:36:17(String), 1(Integer), 2020-01-08 19:36:17(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:36:23.786 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:36:23.786 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15b391]
2020-01-08 19:36:23.787 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 19:37:00.854 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:37:00.854.
2020-01-08 19:37:36.577 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"start_position":"","regular_expression":"","key_word":"贸易国别","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"01cc7c6a-ff57-45d8-aa48-92cd87242865","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"trade_country","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:10","keyword_type":1,"last_update_time":"2020-01-08 19:37:10","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"包装种类","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"096d36bc-5798-4b5a-9bfd-ad3393692064","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"wrap_type","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:10","keyword_type":1,"last_update_time":"2020-01-08 19:37:10","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"收货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"146b5204-9ac4-487f-82c7-a13715133ef5","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"receiver","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:10","keyword_type":1,"last_update_time":"2020-01-08 19:37:10","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"备注","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"1f7337d1-b3ab-44a7-8b0a-d6f2a11cedbc","aligned":"","get_type_str":"","key_position":1,"file_name":"运单文件","map_name":"remark","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:10","keyword_type":1,"last_update_time":"2020-01-08 19:37:10","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"进境关别","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"23c9e285-9d6c-4c9e-b89a-7b1ae6ea976c","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"i_e_cus_clearance","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:10","keyword_type":1,"last_update_time":"2020-01-08 19:37:10","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"declaration_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"2e655347-c894-434f-b7b3-b30e787997c3","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"p_name_dec","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:10","keyword_type":1,"last_update_time":"2020-01-08 19:37:10","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"运费率","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"353a4df1-46be-4c11-b568-2744e4f7792f","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_rate","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:10","keyword_type":1,"last_update_time":"2020-01-08 19:37:10","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"[0-9]+","key_word":"净重","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"3768cebc-69ee-467a-9246-3ae64937af5b","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"net_weight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:10","keyword_type":1,"last_update_time":"2020-01-08 19:37:10","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"监管方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"387de02a-ce00-486b-8fe2-02c29d425fb9","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"supervision_method","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:10","keyword_type":1,"last_update_time":"2020-01-08 19:37:10","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"运费总","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"39da2d4f-0820-487c-9caa-e90475a14872","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:10","keyword_type":1,"last_update_time":"2020-01-08 19:37:10","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"运费单","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"418578f7-3a23-4519-872e-096ae5cc15a2","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_unit","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:12","keyword_type":1,"last_update_time":"2020-01-08 19:37:12","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"运输工具","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"56703677-3711-439d-aa90-2c1e3b71f1e2","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"ship_name","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:12","keyword_type":1,"last_update_time":"2020-01-08 19:37:12","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"[A-Za-z ]{4}","key_word":"成交方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"57cc00a8-5345-40f6-961e-d475a76102c7","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"sold_for","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:12","keyword_type":1,"last_update_time":"2020-01-08 19:37:12","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"合同协议号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"5ec1fd93-51c6-4a5a-b01e-5f5fa62e0ef1","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"contract_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:12","keyword_type":1,"last_update_time":"2020-01-08 19:37:12","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"declaration_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"62dd4330-bbaa-40db-9dca-47eae719481d","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"commodity_code_dec","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:12","keyword_type":1,"last_update_time":"2020-01-08 19:37:12","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"征免性质","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"67f0553e-2958-4e76-91c9-07d366382408","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"exemption","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:12","keyword_type":1,"last_update_time":"2020-01-08 19:37:12","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"invoice_file_goods","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"7bcf3b78-cd3b-4d7a-ab70-8f87c9656702","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"p_name_inv","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:12","keyword_type":1,"last_update_time":"2020-01-08 19:37:12","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"备案号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"81234d71-58ad-416d-9478-470b70e1daab","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"eori","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:12","keyword_type":1,"last_update_time":"2020-01-08 19:37:12","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"[0-9]+","key_word":"毛重","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"8fb705d8-e484-4ea8-8aae-09e66c3c0daa","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"gross_weight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:12","keyword_type":1,"last_update_time":"2020-01-08 19:37:12","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"[0-9 -—]{11}","key_word":"提运单号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"96b562f5-7a29-4c3c-a9c3-2491ea194e51","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"bill_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:12","keyword_type":1,"last_update_time":"2020-01-08 19:37:12","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"离境口岸","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"971f1501-a83a-40d5-9d1f-5c1d6d10ac6c","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"entry_port","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:14","keyword_type":1,"last_update_time":"2020-01-08 19:37:14","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"许可征号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"9b1d79f8-20f0-49cd-ba64-67495e15ff82","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"license_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:14","keyword_type":1,"last_update_time":"2020-01-08 19:37:14","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"是否报关","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"9b947643-9534-42db-b66a-b88d0e2f9030","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"filed_1","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:14","keyword_type":1,"last_update_time":"2020-01-08 19:37:14","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"AEO","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"9bb9de8c-b3ff-4f0a-b37a-dbe644303af5","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"aeo_code","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:14","keyword_type":1,"last_update_time":"2020-01-08 19:37:14","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"监管方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"9f902057-26d2-476e-9d8c-46068c7de2fc","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"supervision_method","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:14","keyword_type":1,"last_update_time":"2020-01-08 19:37:14","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"运抵国","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"a6e7ac29-d4b1-4461-82a4-41586af1c2fe","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"airport_of_departure","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:14","keyword_type":1,"last_update_time":"2020-01-08 19:37:14","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"件数","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"a73f520b-fb7d-42a2-b007-0112eac63d2c","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"packages_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:14","keyword_type":1,"last_update_time":"2020-01-08 19:37:14","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"运输方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"b837a33c-eb3d-475c-bc52-e0b7de7a3827","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"traf_mode","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:14","keyword_type":1,"last_update_time":"2020-01-08 19:37:14","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"消费单位","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"bc67c7e0-4849-4518-bf4a-35ae9edec242","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"production_unit","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:14","keyword_type":1,"last_update_time":"2020-01-08 19:37:14","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"指运港","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"bd8c4cb2-b4ef-4ec3-8af1-0dd5fffc6ee5","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"suspended_port","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:14","keyword_type":1,"last_update_time":"2020-01-08 19:37:14","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"发票号码","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"bebef407-1ca3-46eb-8083-e4cbbdab5834","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"filed_2","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:20","keyword_type":1,"last_update_time":"2020-01-08 19:37:20","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"123","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"dd2a264f-1d72-4015-9cba-83eba8bbcbd8","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"remark","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:20","keyword_type":1,"last_update_time":"2020-01-08 19:37:20","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"发货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"e68d11b5-30e2-432e-8e47-aba0bd5133f9","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sender","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:20","keyword_type":1,"last_update_time":"2020-01-08 19:37:20","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"标记唛码","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":0,"x_max":0,"id":"ec65761b-11f8-4205-a5a2-e36ea9cd0315","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"marks_nos","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:20","keyword_type":1,"last_update_time":"2020-01-08 19:37:20","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0},{"start_position":"","regular_expression":"","key_word":"航次号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":0,"x_max":0,"id":"feb72230-2695-4763-840e-152040208544","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"voyage","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:37:20","keyword_type":1,"last_update_time":"2020-01-08 19:37:20","login_user":"管理员","is_use_python":"1","company_name":"CCC","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":0}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 19:37:36.582 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:35}.
2020-01-08 19:37:36.583 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:36.584 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b94e55] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:36.644 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:36.645 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:36.646 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 贸易国别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 01cc7c6a-ff57-45d8-aa48-92cd87242865(String), (String), (String), 2(Integer), 发票文件(String), trade_country(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 贸易国别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), trade_country(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:36.776 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:36.777 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b94e55]
2020-01-08 19:37:36.781 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:36.781 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbd2fd] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:36.784 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:36.784 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:36.785 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 包装种类(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 096d36bc-5798-4b5a-9bfd-ad3393692064(String), (String), (String), 2(Integer), 运单文件(String), wrap_type(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 包装种类(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), wrap_type(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:36.923 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:36.924 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbd2fd]
2020-01-08 19:37:36.924 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:36.925 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7002e9] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:36.927 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:36.927 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:36.929 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 146b5204-9ac4-487f-82c7-a13715133ef5(String), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:37.055 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:37.056 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7002e9]
2020-01-08 19:37:37.056 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:37.057 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b9ddaa] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:37.059 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:37.060 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:37.060 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 1f7337d1-b3ab-44a7-8b0a-d6f2a11cedbc(String), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:37.187 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:37.188 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b9ddaa]
2020-01-08 19:37:37.190 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:37.192 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@eca9b4] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:37.197 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:37.199 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:37.203 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 进境关别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 23c9e285-9d6c-4c9e-b89a-7b1ae6ea976c(String), (String), (String), 2(Integer), 发票文件(String), i_e_cus_clearance(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 进境关别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), i_e_cus_clearance(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:37.327 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:37.327 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@eca9b4]
2020-01-08 19:37:37.327 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:37.329 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b56b1f] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:37.330 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:37.331 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:37.332 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 2e655347-c894-434f-b7b3-b30e787997c3(String), (String), (String), 2(Integer), 运单文件(String), p_name_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), p_name_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:37.464 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:37.465 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b56b1f]
2020-01-08 19:37:37.465 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:37.465 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a352e7] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:37.474 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:37.474 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:37.476 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运费率(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 353a4df1-46be-4c11-b568-2744e4f7792f(String), (String), (String), 2(Integer), 运单文件(String), freight_rate(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 运费率(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_rate(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:37.612 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:37.613 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a352e7]
2020-01-08 19:37:37.613 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:37.614 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b5b114] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:37.616 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:37.616 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:37.618 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [0-9]+(String), 净重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 3768cebc-69ee-467a-9246-3ae64937af5b(String), (String), (String), 2(Integer), 运单文件(String), net_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), [0-9]+(String), 净重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), net_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:37.773 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:37.773 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1b5b114]
2020-01-08 19:37:37.774 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:37.774 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5198da] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:37.775 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:37.776 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:37.778 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 387de02a-ce00-486b-8fe2-02c29d425fb9(String), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:37.956 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:37.957 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5198da]
2020-01-08 19:37:37.958 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:37.960 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e45420] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:37.964 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:37.965 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:37.968 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 39da2d4f-0820-487c-9caa-e90475a14872(String), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:10(String), 1(Integer), 2020-01-08 19:37:10(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:38.098 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:38.099 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e45420]
2020-01-08 19:37:38.099 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:38.100 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f851e5] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:38.101 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:38.102 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:38.103 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运费单(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 418578f7-3a23-4519-872e-096ae5cc15a2(String), (String), (String), 2(Integer), 运单文件(String), freight_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 运费单(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:38.219 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:38.220 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1f851e5]
2020-01-08 19:37:38.222 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:38.223 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cbe1d6] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:38.224 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:38.224 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:38.225 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运输工具(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 56703677-3711-439d-aa90-2c1e3b71f1e2(String), (String), (String), 2(Integer), 发票文件(String), ship_name(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 运输工具(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), ship_name(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:38.343 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:38.344 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@cbe1d6]
2020-01-08 19:37:38.344 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:38.344 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@106de2a] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:38.345 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:38.346 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:38.347 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 57cc00a8-5345-40f6-961e-d475a76102c7(String), (String), (String), 2(Integer), 运单文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:38.495 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:38.496 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@106de2a]
2020-01-08 19:37:38.497 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:38.497 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e69cca] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:38.498 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:38.499 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:38.500 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 合同协议号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 5ec1fd93-51c6-4a5a-b01e-5f5fa62e0ef1(String), (String), (String), 2(Integer), 发票文件(String), contract_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 合同协议号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), contract_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:38.639 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:38.640 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@e69cca]
2020-01-08 19:37:38.641 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:38.643 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@158fc31] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:38.644 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:38.644 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:38.646 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 62dd4330-bbaa-40db-9dca-47eae719481d(String), (String), (String), 2(Integer), 运单文件(String), commodity_code_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), commodity_code_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:38.767 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:38.768 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@158fc31]
2020-01-08 19:37:38.769 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:38.770 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a48598] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:38.774 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:38.775 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:38.779 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 征免性质(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 67f0553e-2958-4e76-91c9-07d366382408(String), (String), (String), 2(Integer), 发票文件(String), exemption(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 征免性质(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), exemption(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:38.962 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:38.964 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a48598]
2020-01-08 19:37:38.965 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:38.965 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767bb0] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:38.966 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:38.967 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:38.968 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 商品编号(String), 0(Integer), invoice_file_goods(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 7bcf3b78-cd3b-4d7a-ab70-8f87c9656702(String), (String), (String), 2(Integer), 发票文件(String), p_name_inv(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 商品编号(String), 0(Integer), invoice_file_goods(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), p_name_inv(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:39.096 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:39.096 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@767bb0]
2020-01-08 19:37:39.097 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:39.097 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c20ddf] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:39.098 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:39.099 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:39.100 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 备案号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 81234d71-58ad-416d-9478-470b70e1daab(String), (String), (String), 2(Integer), 发票文件(String), eori(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 备案号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), eori(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:39.224 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:39.225 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1c20ddf]
2020-01-08 19:37:39.225 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:39.226 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e05633] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:39.227 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:39.227 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:39.229 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [0-9]+(String), 毛重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 8fb705d8-e484-4ea8-8aae-09e66c3c0daa(String), (String), (String), 2(Integer), 运单文件(String), gross_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), [0-9]+(String), 毛重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), gross_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:39.342 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:39.344 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e05633]
2020-01-08 19:37:39.344 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:39.344 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@196b825] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:39.345 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:39.346 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:39.347 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), [0-9 -—]{11}(String), 提运单号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 96b562f5-7a29-4c3c-a9c3-2491ea194e51(String), (String), (String), 2(Integer), 发票文件(String), bill_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), [0-9 -—]{11}(String), 提运单号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), bill_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:12(String), 1(Integer), 2020-01-08 19:37:12(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:39.487 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:39.488 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@196b825]
2020-01-08 19:37:39.488 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:39.488 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@164fa4d] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:39.489 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:39.489 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:39.491 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 离境口岸(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), 971f1501-a83a-40d5-9d1f-5c1d6d10ac6c(String), (String), (String), 2(Integer), 运单文件(String), entry_port(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 离境口岸(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), entry_port(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:39.616 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:39.617 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@164fa4d]
2020-01-08 19:37:39.617 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:39.618 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed8567] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:39.618 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:39.619 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:39.620 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 许可征号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 9b1d79f8-20f0-49cd-ba64-67495e15ff82(String), (String), (String), 2(Integer), 发票文件(String), license_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 许可征号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), license_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:39.775 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:39.776 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ed8567]
2020-01-08 19:37:39.777 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:39.777 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e805a1] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:39.779 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:39.779 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:39.779 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 是否报关(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 9b947643-9534-42db-b66a-b88d0e2f9030(String), (String), (String), 2(Integer), 发票文件(String), filed_1(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 是否报关(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), filed_1(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:39.916 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:39.916 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e805a1]
2020-01-08 19:37:39.917 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:39.917 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11419ac] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:39.918 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:39.918 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:39.920 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), AEO(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 9bb9de8c-b3ff-4f0a-b37a-dbe644303af5(String), (String), (String), 2(Integer), 发票文件(String), aeo_code(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), AEO(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), aeo_code(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:40.036 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:40.038 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11419ac]
2020-01-08 19:37:40.039 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:40.040 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35a57a] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:40.042 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:40.043 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:40.047 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), 9f902057-26d2-476e-9d8c-46068c7de2fc(String), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:40.176 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:40.177 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@35a57a]
2020-01-08 19:37:40.178 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:40.179 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1250b8c] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:40.181 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:40.183 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:40.190 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运抵国(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), a6e7ac29-d4b1-4461-82a4-41586af1c2fe(String), (String), (String), 2(Integer), 发票文件(String), airport_of_departure(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 运抵国(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), airport_of_departure(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:40.303 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:40.304 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1250b8c]
2020-01-08 19:37:40.304 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:40.305 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53c0a] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:40.306 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:40.309 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:40.310 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 件数(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), a73f520b-fb7d-42a2-b007-0112eac63d2c(String), (String), (String), 2(Integer), 运单文件(String), packages_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 件数(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), packages_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:40.420 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:40.422 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@53c0a]
2020-01-08 19:37:40.424 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:40.425 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@82304b] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:40.427 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:40.428 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:40.432 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 运输方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), b837a33c-eb3d-475c-bc52-e0b7de7a3827(String), (String), (String), 2(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 运输方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:40.558 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:40.559 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@82304b]
2020-01-08 19:37:40.560 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:40.560 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1809265] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:40.561 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:40.561 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:40.563 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 消费单位(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), bc67c7e0-4849-4518-bf4a-35ae9edec242(String), (String), (String), 2(Integer), 发票文件(String), production_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 消费单位(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), production_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:40.701 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:40.703 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1809265]
2020-01-08 19:37:40.709 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:40.709 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7df13c] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:40.710 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:40.710 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:40.711 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 指运港(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), bd8c4cb2-b4ef-4ec3-8af1-0dd5fffc6ee5(String), (String), (String), 2(Integer), 发票文件(String), suspended_port(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 指运港(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), suspended_port(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:14(String), 1(Integer), 2020-01-08 19:37:14(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:40.849 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:40.849 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7df13c]
2020-01-08 19:37:40.849 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:40.850 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dd7719] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:40.850 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:40.852 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:40.852 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 发票号码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), bebef407-1ca3-46eb-8083-e4cbbdab5834(String), (String), (String), 2(Integer), 发票文件(String), filed_2(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:20(String), 1(Integer), 2020-01-08 19:37:20(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 发票号码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), filed_2(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:20(String), 1(Integer), 2020-01-08 19:37:20(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:40.984 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:40.985 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1dd7719]
2020-01-08 19:37:40.987 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:40.988 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11abdb2] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:40.988 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:40.989 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:40.990 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 123(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), dd2a264f-1d72-4015-9cba-83eba8bbcbd8(String), (String), (String), 2(Integer), 发票文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:20(String), 1(Integer), 2020-01-08 19:37:20(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 123(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:20(String), 1(Integer), 2020-01-08 19:37:20(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:41.128 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:41.128 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11abdb2]
2020-01-08 19:37:41.129 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:41.129 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11e54f2] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:41.130 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:41.130 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:41.131 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), e68d11b5-30e2-432e-8e47-aba0bd5133f9(String), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:20(String), 1(Integer), 2020-01-08 19:37:20(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:20(String), 1(Integer), 2020-01-08 19:37:20(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:41.255 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:41.256 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@11e54f2]
2020-01-08 19:37:41.256 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:41.256 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15d543d] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:41.257 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:41.258 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:41.259 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 标记唛码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), ec65761b-11f8-4205-a5a2-e36ea9cd0315(String), (String), (String), 2(Integer), 运单文件(String), marks_nos(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:20(String), 1(Integer), 2020-01-08 19:37:20(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 标记唛码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), marks_nos(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:20(String), 1(Integer), 2020-01-08 19:37:20(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:41.383 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:41.384 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@15d543d]
2020-01-08 19:37:41.385 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:37:41.386 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16c5544] was not registered for synchronization because synchronization is not active
2020-01-08 19:37:41.389 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:37:41.390 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:37:41.393 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), 航次号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), feb72230-2695-4763-840e-152040208544(String), (String), (String), 2(Integer), 发票文件(String), voyage(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:20(String), 1(Integer), 2020-01-08 19:37:20(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer), (String), (String), 航次号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 0(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), voyage(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:37:20(String), 1(Integer), 2020-01-08 19:37:20(String), 管理员(String), 1(String), CCC(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 0(Integer)
2020-01-08 19:37:41.503 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:37:41.503 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16c5544]
2020-01-08 19:37:41.504 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 19:38:00.918 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:38:00.918.
2020-01-08 19:38:02.702 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:38:02.703 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:38:02.703 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:38:02.703 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8cd24] was not registered for synchronization because synchronization is not active
2020-01-08 19:38:02.704 [scheduler_Worker-4][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:38:02.704 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:38:02.705 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:38:02.763 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:38:02.765 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b8cd24]
2020-01-08 19:38:02.767 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:38:02.767 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:38:02.767 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:39:00.780 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:39:00.780.
2020-01-08 19:40:00.796 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:40:00.796.
2020-01-08 19:40:02.238 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:40:02.239 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:40:02.239 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:40:02.240 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a04456] was not registered for synchronization because synchronization is not active
2020-01-08 19:40:02.290 [scheduler_Worker-4][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:40:02.291 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:40:02.291 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:40:02.364 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:40:02.365 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a04456]
2020-01-08 19:40:02.365 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:40:02.365 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:40:02.366 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:41:00.813 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:41:00.813.
2020-01-08 19:42:00.808 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:42:00.808.
2020-01-08 19:42:02.497 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:42:02.498 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:42:02.500 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:42:02.500 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aee9f0] was not registered for synchronization because synchronization is not active
2020-01-08 19:42:02.558 [scheduler_Worker-4][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:42:02.558 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:42:02.559 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:42:02.616 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:42:02.617 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aee9f0]
2020-01-08 19:42:02.617 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:42:02.617 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:42:02.618 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:43:00.787 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:43:00.786.
2020-01-08 19:44:00.839 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:44:00.839.
2020-01-08 19:44:02.249 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:44:02.250 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:44:02.250 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:44:02.250 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b0aec] was not registered for synchronization because synchronization is not active
2020-01-08 19:44:02.301 [scheduler_Worker-4][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:44:02.302 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:44:02.302 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:44:02.366 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:44:02.367 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8b0aec]
2020-01-08 19:44:02.367 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:44:02.367 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:44:02.367 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:44:56.048 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"商品名称","y_max":0,"type":"declaration_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"1a67e218-f58f-4cda-8195-fbb004546524","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"description_dec","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:44:48","keyword_type":1,"last_update_time":"2020-01-08 19:44:48","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 19:44:56.049 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:1}.
2020-01-08 19:44:56.050 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:44:56.051 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a8edd5] was not registered for synchronization because synchronization is not active
2020-01-08 19:44:56.055 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:44:56.056 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:44:56.061 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 商品名称(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 1a67e218-f58f-4cda-8195-fbb004546524(String), (String), (String), 2(Integer), 发票文件(String), description_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:44:48(String), 1(Integer), 2020-01-08 19:44:48(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 商品名称(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), description_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:44:48(String), 1(Integer), 2020-01-08 19:44:48(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:44:56.198 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 1
2020-01-08 19:44:56.202 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a8edd5]
2020-01-08 19:44:56.207 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 19:45:00.799 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:45:00.799.
2020-01-08 19:46:00.800 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:46:00.800.
2020-01-08 19:46:02.289 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:46:02.290 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:46:02.290 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:46:02.291 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@168f358] was not registered for synchronization because synchronization is not active
2020-01-08 19:46:02.337 [scheduler_Worker-4][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:46:02.338 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:46:02.340 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:46:02.406 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:46:02.407 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@168f358]
2020-01-08 19:46:02.409 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:46:02.409 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:46:02.409 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:47:00.928 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:47:00.928.
2020-01-08 19:48:00.808 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:48:00.808.
2020-01-08 19:48:02.332 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:48:02.333 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:48:02.334 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:48:02.335 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10f1051] was not registered for synchronization because synchronization is not active
2020-01-08 19:48:02.400 [scheduler_Worker-4][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:48:02.400 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:48:02.401 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:48:02.462 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:48:02.463 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10f1051]
2020-01-08 19:48:02.463 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:48:02.464 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:48:02.464 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:49:00.807 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:49:00.807.
2020-01-08 19:50:00.921 [scheduler_Worker-2][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:50:00.921.
2020-01-08 19:50:02.372 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:50:02.373 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:50:02.376 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:50:02.377 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@153c964] was not registered for synchronization because synchronization is not active
2020-01-08 19:50:02.447 [scheduler_Worker-4][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:50:02.447 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:50:02.448 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:50:02.497 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:50:02.498 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@153c964]
2020-01-08 19:50:02.499 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:50:02.500 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:50:02.502 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
2020-01-08 19:51:00.811 [scheduler_Worker-1][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:51:00.811.
2020-01-08 19:51:10.224 [messageContainer-1][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.sync.worker.config.RabbitConfig$1[105]: Consume receive msg: {"data":[{"belong_company_name":"","start_position":"","regular_expression":"[0-9]+","key_word":"毛重","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"c3cfac7d-c187-4a37-8b7f-dc91bbabf262","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"gross_weight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:49:29","keyword_type":1,"last_update_time":"2020-01-08 19:49:28","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"[A-Za-z ]{4}","key_word":"成交方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"156338c1-125d-4b54-a03b-a74d1c353401","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sold_for","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:49:32","keyword_type":1,"last_update_time":"2020-01-08 19:49:31","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"invoice_file_goods","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"46a9bce8-5fe7-4038-a6b4-51365d32a27d","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"p_name_inv","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:49:35","keyword_type":1,"last_update_time":"2020-01-08 19:49:35","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"监管方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"e479b129-5328-48c5-bdd7-09a3f94f324b","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"supervision_method","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:49:41","keyword_type":1,"last_update_time":"2020-01-08 19:49:40","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"是否报关","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"b3a50a97-ce41-4bd0-9500-68621431ab42","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"filed_1","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:49:43","keyword_type":1,"last_update_time":"2020-01-08 19:49:43","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"进境关别","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"08d7f9bc-4d43-408e-b8f6-61525c3a6baa","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"i_e_cus_clearance","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:49:46","keyword_type":1,"last_update_time":"2020-01-08 19:49:45","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"发票号码","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"f4b06456-c473-44e2-a1b7-c73d4edf9b43","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"filed_2","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:49:48","keyword_type":1,"last_update_time":"2020-01-08 19:49:47","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"备案号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"28327226-d257-4e7e-b254-40512bdc647d","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"eori","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:49:51","keyword_type":1,"last_update_time":"2020-01-08 19:49:50","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"合同协议号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"0c29cf00-fc10-499b-bc1d-4623b2a0d6cd","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"contract_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:49:54","keyword_type":1,"last_update_time":"2020-01-08 19:49:53","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"消费单位","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"8342f058-4a49-4b56-b9bb-c2487b62fce9","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"production_unit","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:49:56","keyword_type":1,"last_update_time":"2020-01-08 19:49:55","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"AEO","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"f1e2704c-999d-4c43-8363-4a2fd103b31c","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"aeo_code","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:49:59","keyword_type":1,"last_update_time":"2020-01-08 19:49:58","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"运输方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"adf1d438-2ec2-47f0-af68-ec2d9ac40a22","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"traf_mode","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:01","keyword_type":1,"last_update_time":"2020-01-08 19:50:01","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"运输工具","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"b717db5e-8d5f-4e0e-a9f1-2e13e97733ca","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"ship_name","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:04","keyword_type":1,"last_update_time":"2020-01-08 19:50:04","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"航次号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"ff07d06c-b384-4f6a-9f76-eb06f63ead80","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"voyage","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:06","keyword_type":1,"last_update_time":"2020-01-08 19:50:06","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"[0-9 -—]{11}","key_word":"提运单号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"8f995d60-54fa-47e8-a96a-259b765dbd45","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"bill_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:08","keyword_type":1,"last_update_time":"2020-01-08 19:50:07","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"许可征号","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"127e80c7-9472-45c7-818d-625c82c8e91d","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"license_no","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:10","keyword_type":1,"last_update_time":"2020-01-08 19:50:10","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"监管方式","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"04769366-c27a-4298-a2b7-5950b6039385","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"supervision_method","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:13","keyword_type":1,"last_update_time":"2020-01-08 19:50:12","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"征免性质","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"5c3f527e-1446-4d8c-be06-cfa586568105","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"exemption","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:15","keyword_type":1,"last_update_time":"2020-01-08 19:50:14","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"贸易国别","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"a092cebb-9381-4726-ab2e-b2e4cd7e04c6","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"trade_country","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:19","keyword_type":1,"last_update_time":"2020-01-08 19:50:19","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"指运港","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"0c08470a-febd-4ab3-bb54-a2d58c1f277a","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"suspended_port","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:22","keyword_type":1,"last_update_time":"2020-01-08 19:50:22","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"运费率","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"8b9af80b-f5ee-4dea-b53f-a98c8d8beb70","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_rate","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:25","keyword_type":1,"last_update_time":"2020-01-08 19:50:24","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"运费总","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"3ee9e3ac-763d-493c-bf85-8065c52e574d","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:27","keyword_type":1,"last_update_time":"2020-01-08 19:50:27","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"运费单","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"ca38cbe6-5d45-4f00-b02f-dfb792a19a7f","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"freight_unit","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:29","keyword_type":1,"last_update_time":"2020-01-08 19:50:29","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"件数","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"4a5cc6bf-8576-4842-a2cc-23a8d38ca710","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"packages_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:32","keyword_type":1,"last_update_time":"2020-01-08 19:50:31","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"包装种类","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"ed33b0c2-2a8a-4576-a40e-8ae39893e5e8","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"wrap_type","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:34","keyword_type":1,"last_update_time":"2020-01-08 19:50:34","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"离境口岸","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"bfdf23f2-9782-4c4d-867d-d7a710b1376e","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"entry_port","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:38","keyword_type":1,"last_update_time":"2020-01-08 19:50:38","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"[0-9]+","key_word":"净重","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"a39c0ef5-a496-454f-9971-aad508f0811a","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"net_weight_total","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:41","keyword_type":1,"last_update_time":"2020-01-08 19:50:41","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"备注","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"d70144ed-3c86-4cb8-b1d3-de552e5252b6","aligned":"","get_type_str":"","key_position":1,"file_name":"运单文件","map_name":"remark","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:43","keyword_type":1,"last_update_time":"2020-01-08 19:50:43","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"标记唛码","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"c7421e88-f395-4227-beb5-affdb376da79","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"marks_nos","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:46","keyword_type":1,"last_update_time":"2020-01-08 19:50:45","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"运抵国","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"e7ea27e2-77b2-4a77-816b-20f4c360f242","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"airport_of_departure","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:50","keyword_type":1,"last_update_time":"2020-01-08 19:50:50","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"发货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"76c99541-1eef-4acc-8da9-72d886f19371","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"sender","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:53","keyword_type":1,"last_update_time":"2020-01-08 19:50:52","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"收货人","y_max":0,"type":"basic_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"6c382989-a367-4420-9ae6-c812df7de327","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"receiver","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:55","keyword_type":1,"last_update_time":"2020-01-08 19:50:55","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"declaration_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"455b7528-4284-496f-9759-67c2cecf66cb","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"commodity_code_dec","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:50:58","keyword_type":1,"last_update_time":"2020-01-08 19:50:58","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"商品编号","y_max":0,"type":"declaration_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"way_bill","y_min":0,"col_multiple":1,"x_max":0,"id":"44b7db65-f577-4514-9f96-aa5d453af799","aligned":"","get_type_str":"","key_position":2,"file_name":"运单文件","map_name":"p_name_dec","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:51:00","keyword_type":1,"last_update_time":"2020-01-08 19:51:00","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1},{"belong_company_name":"","start_position":"","regular_expression":"","key_word":"商品名称","y_max":0,"type":"declaration_info","x_min":0,"content_max":0,"number":"","content_rule":"","get_type":"","pz_type":"0","file_type":"invoice_file","y_min":0,"col_multiple":1,"x_max":0,"id":"1a67e218-f58f-4cda-8195-fbb004546524","aligned":"","get_type_str":"","key_position":2,"file_name":"发票文件","map_name":"description_dec","customs_broker_id":"00000000-0000-0000-0000-000000000001","col_digit":0,"is_one_use":"0","modified_date":"2020-01-08 19:51:03","keyword_type":1,"last_update_time":"2020-01-08 19:51:02","login_user":"管理员","is_use_python":"1","company_name":"jc_test001","organization_id":"00000000-0000-0000-0000-000000000001","content_position":"下","status":1}],"data_source_name":"ami-customs","table_name":"ocr_key_set_config"}
2020-01-08 19:51:10.238 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[514]: sync data:{table name:ocr_key_set_config, row count:35}.
2020-01-08 19:51:10.238 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:10.238 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e8e42c] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:10.289 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:10.290 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:10.296 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), [0-9]+(String), 毛重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), c3cfac7d-c187-4a37-8b7f-dc91bbabf262(String), (String), (String), 2(Integer), 运单文件(String), gross_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:29(String), 1(Integer), 2020-01-08 19:49:28(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), [0-9]+(String), 毛重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), gross_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:29(String), 1(Integer), 2020-01-08 19:49:28(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:10.428 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:10.429 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e8e42c]
2020-01-08 19:51:10.429 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:10.430 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ca6cb7] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:10.432 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:10.433 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:10.435 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 156338c1-125d-4b54-a03b-a74d1c353401(String), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:32(String), 1(Integer), 2020-01-08 19:49:31(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), [A-Za-z ]{4}(String), 成交方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sold_for(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:32(String), 1(Integer), 2020-01-08 19:49:31(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:10.549 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:10.551 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ca6cb7]
2020-01-08 19:51:10.563 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:10.567 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84b135] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:10.575 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:10.577 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:10.584 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 商品编号(String), 0(Integer), invoice_file_goods(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 46a9bce8-5fe7-4038-a6b4-51365d32a27d(String), (String), (String), 2(Integer), 发票文件(String), p_name_inv(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:35(String), 1(Integer), 2020-01-08 19:49:35(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 商品编号(String), 0(Integer), invoice_file_goods(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), p_name_inv(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:35(String), 1(Integer), 2020-01-08 19:49:35(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:10.706 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:10.707 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@84b135]
2020-01-08 19:51:10.709 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:10.709 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a233aa] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:10.711 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:10.711 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:10.713 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), e479b129-5328-48c5-bdd7-09a3f94f324b(String), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:41(String), 1(Integer), 2020-01-08 19:49:40(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:41(String), 1(Integer), 2020-01-08 19:49:40(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:10.827 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:10.828 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1a233aa]
2020-01-08 19:51:10.830 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:10.832 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aab821] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:10.835 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:10.836 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:10.840 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 是否报关(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), b3a50a97-ce41-4bd0-9500-68621431ab42(String), (String), (String), 2(Integer), 发票文件(String), filed_1(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:43(String), 1(Integer), 2020-01-08 19:49:43(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 是否报关(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), filed_1(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:43(String), 1(Integer), 2020-01-08 19:49:43(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:10.961 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:10.962 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1aab821]
2020-01-08 19:51:10.963 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:10.964 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d98e3] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:10.967 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:10.969 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:10.982 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 进境关别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 08d7f9bc-4d43-408e-b8f6-61525c3a6baa(String), (String), (String), 2(Integer), 发票文件(String), i_e_cus_clearance(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:46(String), 1(Integer), 2020-01-08 19:49:45(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 进境关别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), i_e_cus_clearance(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:46(String), 1(Integer), 2020-01-08 19:49:45(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:11.109 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:11.111 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@14d98e3]
2020-01-08 19:51:11.116 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:11.117 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40048] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:11.120 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:11.122 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:11.126 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 发票号码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), f4b06456-c473-44e2-a1b7-c73d4edf9b43(String), (String), (String), 2(Integer), 发票文件(String), filed_2(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:48(String), 1(Integer), 2020-01-08 19:49:47(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 发票号码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), filed_2(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:48(String), 1(Integer), 2020-01-08 19:49:47(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:11.252 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:11.254 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@40048]
2020-01-08 19:51:11.259 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:11.260 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bd6a59] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:11.269 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:11.269 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:11.272 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 备案号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 28327226-d257-4e7e-b254-40512bdc647d(String), (String), (String), 2(Integer), 发票文件(String), eori(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:51(String), 1(Integer), 2020-01-08 19:49:50(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 备案号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), eori(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:51(String), 1(Integer), 2020-01-08 19:49:50(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:11.407 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:11.409 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bd6a59]
2020-01-08 19:51:11.411 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:11.421 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bd5072] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:11.425 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:11.426 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:11.430 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 合同协议号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 0c29cf00-fc10-499b-bc1d-4623b2a0d6cd(String), (String), (String), 2(Integer), 发票文件(String), contract_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:54(String), 1(Integer), 2020-01-08 19:49:53(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 合同协议号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), contract_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:54(String), 1(Integer), 2020-01-08 19:49:53(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:11.549 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:11.551 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1bd5072]
2020-01-08 19:51:11.553 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:11.556 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fd2fc3] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:11.560 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:11.565 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:11.569 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 消费单位(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 8342f058-4a49-4b56-b9bb-c2487b62fce9(String), (String), (String), 2(Integer), 发票文件(String), production_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:56(String), 1(Integer), 2020-01-08 19:49:55(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 消费单位(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), production_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:56(String), 1(Integer), 2020-01-08 19:49:55(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:11.692 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:11.694 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1fd2fc3]
2020-01-08 19:51:11.695 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:11.696 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@266c85] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:11.699 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:11.705 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:11.709 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), AEO(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), f1e2704c-999d-4c43-8363-4a2fd103b31c(String), (String), (String), 2(Integer), 发票文件(String), aeo_code(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:59(String), 1(Integer), 2020-01-08 19:49:58(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), AEO(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), aeo_code(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:49:59(String), 1(Integer), 2020-01-08 19:49:58(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:11.850 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:11.851 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@266c85]
2020-01-08 19:51:11.852 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:11.853 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ec751] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:11.855 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:11.857 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:11.867 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 运输方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), adf1d438-2ec2-47f0-af68-ec2d9ac40a22(String), (String), (String), 2(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:01(String), 1(Integer), 2020-01-08 19:50:01(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 运输方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), traf_mode(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:01(String), 1(Integer), 2020-01-08 19:50:01(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:12.001 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:12.003 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13ec751]
2020-01-08 19:51:12.005 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:12.007 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cf7805] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:12.010 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:12.011 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:12.021 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 运输工具(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), b717db5e-8d5f-4e0e-a9f1-2e13e97733ca(String), (String), (String), 2(Integer), 发票文件(String), ship_name(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:04(String), 1(Integer), 2020-01-08 19:50:04(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 运输工具(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), ship_name(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:04(String), 1(Integer), 2020-01-08 19:50:04(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:12.148 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:12.149 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1cf7805]
2020-01-08 19:51:12.150 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:12.151 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e5f99] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:12.154 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:12.155 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:12.160 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 航次号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), ff07d06c-b384-4f6a-9f76-eb06f63ead80(String), (String), (String), 2(Integer), 发票文件(String), voyage(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:06(String), 1(Integer), 2020-01-08 19:50:06(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 航次号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), voyage(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:06(String), 1(Integer), 2020-01-08 19:50:06(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:12.298 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:12.299 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@6e5f99]
2020-01-08 19:51:12.301 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:12.303 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c99ef3] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:12.306 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:12.307 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:12.310 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), [0-9 -—]{11}(String), 提运单号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 8f995d60-54fa-47e8-a96a-259b765dbd45(String), (String), (String), 2(Integer), 发票文件(String), bill_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:08(String), 1(Integer), 2020-01-08 19:50:07(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), [0-9 -—]{11}(String), 提运单号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), bill_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:08(String), 1(Integer), 2020-01-08 19:50:07(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:12.428 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:12.430 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@c99ef3]
2020-01-08 19:51:12.435 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:12.437 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170543b] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:12.440 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:12.441 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:12.448 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 许可征号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 127e80c7-9472-45c7-818d-625c82c8e91d(String), (String), (String), 2(Integer), 发票文件(String), license_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:10(String), 1(Integer), 2020-01-08 19:50:10(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 许可征号(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), license_no(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:10(String), 1(Integer), 2020-01-08 19:50:10(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:12.580 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:12.581 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@170543b]
2020-01-08 19:51:12.582 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:12.583 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b2a776] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:12.585 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:12.586 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:12.590 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 04769366-c27a-4298-a2b7-5950b6039385(String), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:13(String), 1(Integer), 2020-01-08 19:50:12(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 监管方式(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), supervision_method(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:13(String), 1(Integer), 2020-01-08 19:50:12(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:12.708 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:12.709 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@b2a776]
2020-01-08 19:51:12.710 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:12.712 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dcda2a] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:12.714 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:12.715 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:12.719 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 征免性质(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 5c3f527e-1446-4d8c-be06-cfa586568105(String), (String), (String), 2(Integer), 发票文件(String), exemption(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:15(String), 1(Integer), 2020-01-08 19:50:14(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 征免性质(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), exemption(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:15(String), 1(Integer), 2020-01-08 19:50:14(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:12.866 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:12.867 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@dcda2a]
2020-01-08 19:51:12.868 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:12.869 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f33cb] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:12.871 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:12.872 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:12.879 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 贸易国别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), a092cebb-9381-4726-ab2e-b2e4cd7e04c6(String), (String), (String), 2(Integer), 发票文件(String), trade_country(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:19(String), 1(Integer), 2020-01-08 19:50:19(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 贸易国别(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), trade_country(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:19(String), 1(Integer), 2020-01-08 19:50:19(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:12.991 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:12.992 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@9f33cb]
2020-01-08 19:51:12.993 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:12.994 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbdd10] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:12.995 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:12.996 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:12.999 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 指运港(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 0c08470a-febd-4ab3-bb54-a2d58c1f277a(String), (String), (String), 2(Integer), 发票文件(String), suspended_port(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:22(String), 1(Integer), 2020-01-08 19:50:22(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 指运港(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), suspended_port(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:22(String), 1(Integer), 2020-01-08 19:50:22(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:13.121 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:13.122 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@bbdd10]
2020-01-08 19:51:13.123 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:13.130 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d67577] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:13.132 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:13.133 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:13.134 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 运费率(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), 8b9af80b-f5ee-4dea-b53f-a98c8d8beb70(String), (String), (String), 2(Integer), 运单文件(String), freight_rate(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:25(String), 1(Integer), 2020-01-08 19:50:24(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 运费率(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_rate(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:25(String), 1(Integer), 2020-01-08 19:50:24(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:13.264 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:13.265 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d67577]
2020-01-08 19:51:13.266 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:13.268 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d4bfad] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:13.270 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:13.270 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:13.272 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), 3ee9e3ac-763d-493c-bf85-8065c52e574d(String), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:27(String), 1(Integer), 2020-01-08 19:50:27(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 运费总(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:27(String), 1(Integer), 2020-01-08 19:50:27(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:13.387 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:13.389 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d4bfad]
2020-01-08 19:51:13.395 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:13.396 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13302a1] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:13.397 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:13.399 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:13.402 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 运费单(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), ca38cbe6-5d45-4f00-b02f-dfb792a19a7f(String), (String), (String), 2(Integer), 运单文件(String), freight_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:29(String), 1(Integer), 2020-01-08 19:50:29(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 运费单(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), freight_unit(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:29(String), 1(Integer), 2020-01-08 19:50:29(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:13.533 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:13.534 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@13302a1]
2020-01-08 19:51:13.536 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:13.536 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88c9ab] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:13.538 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:13.538 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:13.539 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 件数(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), 4a5cc6bf-8576-4842-a2cc-23a8d38ca710(String), (String), (String), 2(Integer), 运单文件(String), packages_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:32(String), 1(Integer), 2020-01-08 19:50:31(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 件数(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), packages_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:32(String), 1(Integer), 2020-01-08 19:50:31(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:13.722 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:13.723 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@88c9ab]
2020-01-08 19:51:13.724 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:13.725 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f01c58] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:13.728 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:13.729 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:13.732 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 包装种类(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), ed33b0c2-2a8a-4576-a40e-8ae39893e5e8(String), (String), (String), 2(Integer), 运单文件(String), wrap_type(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:34(String), 1(Integer), 2020-01-08 19:50:34(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 包装种类(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), wrap_type(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:34(String), 1(Integer), 2020-01-08 19:50:34(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:13.859 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:13.861 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f01c58]
2020-01-08 19:51:13.864 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:13.866 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@de11d9] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:13.869 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:13.870 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:13.874 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 离境口岸(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), bfdf23f2-9782-4c4d-867d-d7a710b1376e(String), (String), (String), 2(Integer), 运单文件(String), entry_port(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:38(String), 1(Integer), 2020-01-08 19:50:38(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 离境口岸(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), entry_port(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:38(String), 1(Integer), 2020-01-08 19:50:38(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:14.015 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:14.015 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@de11d9]
2020-01-08 19:51:14.016 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:14.017 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1232483] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:14.017 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:14.018 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:14.021 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), [0-9]+(String), 净重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), a39c0ef5-a496-454f-9971-aad508f0811a(String), (String), (String), 2(Integer), 运单文件(String), net_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:41(String), 1(Integer), 2020-01-08 19:50:41(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), [0-9]+(String), 净重(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), net_weight_total(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:41(String), 1(Integer), 2020-01-08 19:50:41(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:14.172 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:14.173 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1232483]
2020-01-08 19:51:14.174 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:14.184 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df549f] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:14.194 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:14.197 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:14.200 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), d70144ed-3c86-4cb8-b1d3-de552e5252b6(String), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:43(String), 1(Integer), 2020-01-08 19:50:43(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 备注(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 1(Integer), 运单文件(String), remark(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:43(String), 1(Integer), 2020-01-08 19:50:43(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:14.340 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:14.341 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1df549f]
2020-01-08 19:51:14.342 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:14.344 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19604c6] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:14.347 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:14.352 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:14.354 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 标记唛码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), c7421e88-f395-4227-beb5-affdb376da79(String), (String), (String), 2(Integer), 运单文件(String), marks_nos(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:46(String), 1(Integer), 2020-01-08 19:50:45(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 标记唛码(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), marks_nos(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:46(String), 1(Integer), 2020-01-08 19:50:45(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:14.470 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:14.472 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@19604c6]
2020-01-08 19:51:14.481 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:14.490 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78d445] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:14.492 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:14.492 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:14.494 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 运抵国(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), e7ea27e2-77b2-4a77-816b-20f4c360f242(String), (String), (String), 2(Integer), 发票文件(String), airport_of_departure(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:50(String), 1(Integer), 2020-01-08 19:50:50(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 运抵国(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), airport_of_departure(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:50(String), 1(Integer), 2020-01-08 19:50:50(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:14.619 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:14.620 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@78d445]
2020-01-08 19:51:14.621 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:14.622 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9c3cb] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:14.631 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:14.632 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:14.634 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 76c99541-1eef-4acc-8da9-72d886f19371(String), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:53(String), 1(Integer), 2020-01-08 19:50:52(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 发货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), sender(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:53(String), 1(Integer), 2020-01-08 19:50:52(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:14.773 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:14.774 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@a9c3cb]
2020-01-08 19:51:14.776 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:14.776 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4db85c] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:14.779 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:14.780 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:14.783 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 6c382989-a367-4420-9ae6-c812df7de327(String), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:55(String), 1(Integer), 2020-01-08 19:50:55(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 收货人(String), 0(Integer), basic_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), receiver(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:55(String), 1(Integer), 2020-01-08 19:50:55(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:14.899 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:14.901 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4db85c]
2020-01-08 19:51:14.901 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:14.901 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@229749] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:14.903 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:14.906 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:14.907 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), 455b7528-4284-496f-9759-67c2cecf66cb(String), (String), (String), 2(Integer), 运单文件(String), commodity_code_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:58(String), 1(Integer), 2020-01-08 19:50:58(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), commodity_code_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:50:58(String), 1(Integer), 2020-01-08 19:50:58(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:15.028 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:15.029 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@229749]
2020-01-08 19:51:15.031 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:15.033 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16ac7a9] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:15.034 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:15.035 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:15.037 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), 44b7db65-f577-4514-9f96-aa5d453af799(String), (String), (String), 2(Integer), 运单文件(String), p_name_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:51:00(String), 1(Integer), 2020-01-08 19:51:00(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 商品编号(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), way_bill(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 运单文件(String), p_name_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:51:00(String), 1(Integer), 2020-01-08 19:51:00(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:15.174 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:15.175 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@16ac7a9]
2020-01-08 19:51:15.175 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:51:15.175 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1709aed] was not registered for synchronization because synchronization is not active
2020-01-08 19:51:15.176 [messageContainer-1][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:51:15.177 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: INSERT INTO ocr_key_set_config ( belong_company_name , start_position , regular_expression , key_word , y_max , type , x_min , content_max , number , content_rule , get_type , pz_type , file_type , y_min , col_multiple , x_max , id , aligned , get_type_str , key_position , file_name , map_name , customs_broker_id , col_digit , is_one_use , modified_date , keyword_type , last_update_time , login_user , is_use_python , company_name , organization_id , content_position , status ) VALUES ( ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? ) ON DUPLICATE KEY UPDATE belong_company_name = ? , start_position = ? , regular_expression = ? , key_word = ? , y_max = ? , type = ? , x_min = ? , content_max = ? , number = ? , content_rule = ? , get_type = ? , pz_type = ? , file_type = ? , y_min = ? , col_multiple = ? , x_max = ? , aligned = ? , get_type_str = ? , key_position = ? , file_name = ? , map_name = ? , customs_broker_id = ? , col_digit = ? , is_one_use = ? , modified_date = ? , keyword_type = ? , last_update_time = ? , login_user = ? , is_use_python = ? , company_name = ? , organization_id = ? , content_position = ? , status = ? 
2020-01-08 19:51:15.178 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: (String), (String), (String), 商品名称(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), 1a67e218-f58f-4cda-8195-fbb004546524(String), (String), (String), 2(Integer), 发票文件(String), description_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:51:03(String), 1(Integer), 2020-01-08 19:51:02(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer), (String), (String), (String), 商品名称(String), 0(Integer), declaration_info(String), 0(Integer), 0(Integer), (String), (String), (String), 0(String), invoice_file(String), 0(Integer), 1(Integer), 0(Integer), (String), (String), 2(Integer), 发票文件(String), description_dec(String), 00000000-0000-0000-0000-000000000001(String), 0(Integer), 0(String), 2020-01-08 19:51:03(String), 1(Integer), 2020-01-08 19:51:02(String), 管理员(String), 1(String), jc_test001(String), 00000000-0000-0000-0000-000000000001(String), 下(String), 1(Integer)
2020-01-08 19:51:15.331 [messageContainer-1][DEBUG] c.x.s.mappers.SyncPkgMapper.syncData org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==    Updates: 2
2020-01-08 19:51:15.333 [messageContainer-1][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1709aed]
2020-01-08 19:51:15.334 [messageContainer-1][DEBUG] com.x3platform.InternalLogger        com.x3platform.sync.services.impl.SyncPkgServiceImpl[532]: sync data:{table name:ocr_key_set_config} finished.
2020-01-08 19:52:00.854 [scheduler_Worker-3][INFO ] com.x3platform.InternalLogger        com.x3platform.quartz.jobs.TimedEchoJob[22]: job:com.x3platform.quartz.jobs.TimedEchoJob 2020-01-08T19:52:00.854.
2020-01-08 19:52:02.262 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[31]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob started.
2020-01-08 19:52:02.263 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[32]: 使用数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:52:02.266 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[97]: Creating a new SqlSession
2020-01-08 19:52:02.266 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[148]: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d82b56] was not registered for synchronization because synchronization is not active
2020-01-08 19:52:02.267 [scheduler_Worker-4][DEBUG] o.m.s.t.SpringManagedTransaction     org.mybatis.spring.transaction.SpringManagedTransaction[87]: JDBC Connection [com.mysql.jdbc.JDBC4Connection@3dfa51] will not be managed by Spring
2020-01-08 19:52:02.267 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==>  Preparing: SELECT bmh.*, siht.id as bizId FROM b2b_message_head bmh LEFT JOIN sas_invt_head_type siht ON bmh.message_id = siht.message_id where 1=1 and bmh.is_send=? 
2020-01-08 19:52:02.267 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: ==> Parameters: 0(String)
2020-01-08 19:52:02.323 [scheduler_Worker-4][DEBUG] c.a.c.b.m.B.findByAll                org.apache.ibatis.logging.jdbc.BaseJdbcLogger[159]: <==      Total: 0
2020-01-08 19:52:02.323 [scheduler_Worker-4][DEBUG] org.mybatis.spring.SqlSessionUtils   org.mybatis.spring.SqlSessionUtils[191]: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1d82b56]
2020-01-08 19:52:02.325 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl[116]: 暂无需要处理的回执信息...................................
2020-01-08 19:52:02.326 [scheduler_Worker-4][DEBUG] c.x.d.DynamicDataSourceAspect        com.x3platform.datasource.DynamicDataSourceAspect[39]: 还原数据源 : ami-customs -> Integer com.amiintellect.customs.b2b.services.impl.B2bMessageHeadServiceImpl.senderMessageBatch()
2020-01-08 19:52:02.326 [scheduler_Worker-4][INFO ] com.x3platform.InternalLogger        com.amiintellect.customs.b2b.jobs.AnJieReceiptJob[39]: job:com.amiintellect.customs.b2b.jobs.AnJieReceiptJob finished.
